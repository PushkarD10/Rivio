name: Release (Production)

on:
  workflow_dispatch:
    inputs:
      versionCode:
        required: true
        description: "New version code for the build"
      versionName:
        required: true
        description: "New version name for the build"

jobs:
  deploy:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        # fastlane_cm:
        #   - NY
        #   - MY
        #   - Y
        variant:
          - name: NammaYatri
            keystore: ANDROID_KEYSTORE_FILE
            fastlane_cm: NY
            key_alias: KEYSTORE_KEY_ALIAS
            local_properties: LOCAL_PROPERTIES 
          - name: ManaYatri
            keystore: ANDROID_KEYSTORE_FILE_MY 
            fastlane_cm: MY
            key_alias: KEYSTORE_KEY_ALIAS_MY
            local_properties: LOCAL_PROPERTIES_MY 
          - name: Yatri
            keystore: ANDROID_KEYSTORE_FILE_Y 
            fastlane_cm: Y
            key_alias: KEYSTORE_KEY_ALIAS_Y
            local_properties: LOCAL_PROPERTIES_Y 
          # Add more variants as needed
    defaults:
      run:
        working-directory: Frontend/android-native
    steps:
      - uses: actions/checkout@v2
      - uses: ruby/setup-ruby@v1
        with:
          ruby-version: '3.3' # Not needed with a .ruby-version file
          bundler-cache: true # runs 'bundle install' and caches installed gems automatically
      - uses: actions/setup-java@v4
        with:
          distribution: 'temurin' # See 'Supported distributions' for available options
          java-version: '17'

      - name: Cache Ruby - Bundler
        uses: actions/cache@v2
        with:
          path: vendor/bundle
          key: ${{ runner.os }}-gems-${{ hashFiles('**/Gemfile.lock') }}
          restore-keys: |
            ${{ runner.os }}-gems-

      - name: Cache Gradle
        uses: actions/cache@v1
        with:
          path: ~/.gradle/caches/
          key: cache-clean-gradle-${{ matrix.os }}-${{ matrix.jdk }}

      - name: Cache Gradle Wrapper
        uses: actions/cache@v1
        with:
          path: ~/.gradle/wrapper/
          key: cache-clean-wrapper-${{ matrix.os }}-${{ matrix.jdk }}

      - name: Grant Permission to Execute
        run: chmod +x gradlew

      - name: Install bundle
        run: |
          bundle config path vendor/bundle
          bundle install --jobs 4 --retry 3

      - name: Configure Keystore
        run: |
          echo "$ANDROID_KEYSTORE_FILE" > keystore.jks.b64
          base64 -d -i keystore.jks.b64 > app/keystore.jks
          echo "storeFile=keystore.jks" >> keystore.properties
          echo "keyAlias=$KEYSTORE_KEY_ALIAS" >> keystore.properties
          echo "storePassword=$KEYSTORE_STORE_PASSWORD" >> keystore.properties
          echo "keyPassword=$KEYSTORE_KEY_PASSWORD" >> keystore.properties
        env:
          ANDROID_KEYSTORE_FILE: ${{ secrets[matrix.variant.keystore] }}
          KEYSTORE_KEY_ALIAS: ${{ secrets[matrix.variant.key_alias] }}
          KEYSTORE_KEY_PASSWORD: ${{ secrets.KEYSTORE_KEY_PASSWORD }}
          KEYSTORE_STORE_PASSWORD: ${{ secrets.KEYSTORE_STORE_PASSWORD }}

      - name: Create Google Services Config file
        run : |
          echo "$GOOGLE_SERVICES_SECRET" > google-services.json.b64
          base64 -d -i google-services.json.b64 > app/google-services.json
        env:
          GOOGLE_SERVICES_SECRET: ${{ secrets.GOOGLE_SERVICES_SECRET }}

      - name: Create Local Properties
        run : |
          echo "$LOCAL_PROPERTIES" > local.properties.b64
          base64 -d -i local.properties.b64 > local.properties
        env:
          LOCAL_PROPERTIES: ${{ secrets[matrix.variant.local_properties] }}

      - name: Create Google Play Config file
        run : |
          echo "$PLAY_CONSOLE_SECRET" > play_config.json.b64
          base64 -d -i play_config.json.b64 > play_config.json
        env:
          PLAY_CONSOLE_SECRET: ${{ secrets.PLAY_CONSOLE_SECRET }}

      - name: Distribute app to Production ðŸš€
        run: |
          echo "Hello, world! $FASTLANE_CMD"
          echo "fastlane_cm: ${{ matrix.variant.name }}"
          bash releaseApp.sh "$FASTLANE_CMD"
        env: 
          FASTLANE_CMD: ${{ matrix.variant.fastlane_cm }}