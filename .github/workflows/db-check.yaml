name: DB Change Check

on:
  pull_request:
    paths:
    - '**.sql'

jobs:
  db_check:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3
      with:
        fetch-depth: 0  # Fetches all commits

    - name: Run DB change check script
      id: db_check
      run: |
        RESULT=$(./Backend/db-check.sh)
        echo "::set-output name=result::$RESULT"
      continue-on-error: true

    - name: Check if there's an error in DB Check
      id: check_error
      run: |
        if [ -z "${{ steps.db_check.outputs.result }}" ]; then
          echo "::set-output name=error_detected::no"
        else
          echo "::set-output name=error_detected::yes"
        fi

    - name: Create GitHub Check Run
      if: steps.check_error.outputs.error_detected == 'yes'
      id: create_check
      run: |
        echo "Creating check run..."
        RESPONSE=$(curl -s -X POST \
          -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
          -H "Accept: application/vnd.github.v3+json" \
          https://api.github.com/repos/${{ github.repository }}/check-runs \
          -d '{
          "name": "db-change-check",
          "head_sha": "${{ github.event.pull_request.head.sha }}",
          "status": "in_progress"
        }')
        CHECK_RUN_ID=$(echo "$RESPONSE" | jq .id)
        echo "CHECK_RUN_ID=$CHECK_RUN_ID" >> $GITHUB_ENV

    - name: Annotate GitHub Check
      if: steps.check_error.outputs.error_detected == 'yes'
      run: |
        # Parse the output of db-check.sh
        echo "Output from db-check.sh: ${{ steps.db_check.outputs.result }}"
        echo "${{ steps.db_check.outputs.result }}" | while read -r line; do
          FILE=$(echo "$line" | cut -d: -f1)
          LINE=$(echo "$line" | cut -d: -f2)
          MESSAGE=$(echo "$line" | cut -d: -f3-)

          LINE=$((LINE + 1))
          # Payload for the annotation
          PAYLOAD="{
            \"output\": {
              \"title\": \"DB Change Check\",
              \"summary\": \"Detected potential issues\",
              \"annotations\": [{
                \"path\": \"$FILE\",
                \"start_line\": $LINE,
                \"end_line\": $LINE,
                \"annotation_level\": \"warning\",
                \"message\": \"$MESSAGE\"
              }]
            }
          }"
          echo "$PAYLOAD"
          # Update the check run with the annotation
          curl -s -X PATCH \
            -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
            -H "Accept: application/vnd.github.v3+json" \
            https://api.github.com/repos/${{ github.repository }}/check-runs/$CHECK_RUN_ID \
            -d "$PAYLOAD"
        done

    - name: Complete GitHub Check Run
      if: steps.check_error.outputs.error_detected == 'yes'
      run: |
        curl -s -X PATCH \
          -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
          -H "Accept: application/vnd.github.v3+json" \
          https://api.github.com/repos/${{ github.repository }}/check-runs/$CHECK_RUN_ID \
          -d '{
          "status": "completed",
          "conclusion": "failure"
        }'
