imports:
  MerchantOperatingCity: Domain.Types.Merchant.MerchantOperatingCity
  SeatManagement: Domain.Types.SeatManagement
  TicketServiceCategory: Domain.Types.TicketServiceCategory
  BusinessHourType: Domain.Types.BusinessHourType
  Timings: Domain.Types.Timings
  SpecialDayType: Domain.Types.SpecialDatesType

TicketPlaceV1:
  tableName: ticker_place

  fields:
    id : Id TicketPlaceV1
    merchantOperatingCityId : Id MerchantOperatingCity
    name : Text
    description : Maybe Text
    lat : Maybe Double
    lon : Maybe Double
    gallery : "[Text]"
    shortDesc : Text
    iconUrl : Maybe Text
    mapImageUrl : Maybe Text
    openTimings : Maybe TimeOfDay
    closeTimings : Maybe TimeOfDay

  constraints:
    id: PrimaryKey|NotNull
    name: NotNull
    shortDesc: NotNull

  types:
    TicketServiceResp:
      id: Id TicketService
      placesId: Text
    TicketBooking:
      allTickets: "[TicketService]"
    TicketService:
      id: Text
      name: Text

TicketServiceV1:
  tableName : ticket_service

  fields :
    id : Id TicketServiceV1
    placeId : Text
    serviceName : Text
    shortDesc : Text
    operationalDays : "[Text]"
    maxVerification : Int
    allowFutureBooking : Bool
    expiry : Text #InstantExpiry Int | VistDateExpiry TimeOfDay
    bussinessHours : Text #Timings

  sqlType:
    bussinessHours: text

  constraints :
    id : PrimaryKey | NotNull
    serviceName : NotNull
    placeId : NotNull
    shortDesc : NotNull
    bussinessHours : NotNull
    operationalDays : NotNull

  queries:
    updateVerificationById:
      kvFunction: updateOneWithKV
      params: [maxVerification, allowFutureBooking]
      where:
        and:
          - id
          - or: [maxVerification, allowFutureBooking]

    getAllServices:
      kvFunction: findAllWithKV
      params: []
      where:
        and: [id, placeId]


SpecialOccasion:
  tableName : special_occasion

  fields :
    id : Id SpecialOccasion
    entityId : Text
    date : Maybe Day
    dayOfWeek : Maybe Text
    specialDays : Text #SpecialDayType
    description : Maybe Text
    businessHours : Text

  sqlType:
    businessHours : text

  constraints :
    id : PrimaryKey | NotNull
    date : NotNull
    specialDays : NotNull
    businessHours : NotNull
    entityId : NotNull


BusinessHour:
  tableName: business_hour

  fields:
    id: Id BusinessHour
    btype: Text
    categoryId: Id ServiceCategory

  constraints :
    id : PrimaryKey | NotNull
    btype : NotNull
    categoryId : NotNull

  sqlType:
    btype: text


ServiceCategory:
  tableName: service_category

  fields:
    id: Id ServiceCategory
    name: Text
    description: Text
    availableSeats: Int
    allowedSeats: Int

  constraints :
    id : PrimaryKey | NotNull
    name : NotNull
    description : NotNull
    availableSeats : NotNull


ServicePeopleCategory:
  tableName: service_people_category

  fields:
    id: Id ServicePeopleCategory
    serviceCategoryId: Id ServiceCategory
    name: Text
    pricePerUnit: Int

  constraints :
    id : PrimaryKey|NotNull
    serviceCategoryId : NotNull
    name : NotNull
    pricePerUnit : NotNull


SeatManagement:
  tableName: seat_management

  fields:
    id: Id SeatManagement
    date: Day
    ticketServiceCategoryId: Text
    booked: Int
    blocked: Int

  constraints :
    id : PrimaryKey|NotNull
    date : NotNull
    ticketServiceCategoryId : NotNull
    booked : NotNull
    blocked : NotNull