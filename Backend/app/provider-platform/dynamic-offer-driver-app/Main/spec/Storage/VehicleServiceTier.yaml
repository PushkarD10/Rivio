imports:
  Variant: Domain.Types.Vehicle
  MerchantOperatingCity: Domain.Types.MerchantOperatingCity
  Merchant: Domain.Types.Merchant
  Centesimal: Kernel.Types.Common
  ServiceTierType: Domain.Types.ServiceTierType

VehicleServiceTier:
  tableName: vehicle_service_tier

  fields:
    id: Id VehicleServiceTier
    serviceTierType: ServiceTierType|NoRelation
    name: Text
    shortDescription: Maybe Text
    longDescription: Maybe Text
    seatingCapacity: Maybe Int
    airConditioned: Maybe Double
    oxygen: Maybe Double
    ventilator: Maybe Int
    luggageCapacity: Maybe Int
    driverRating: Maybe Centesimal
    vehicleRating: Maybe Double
    merchantOperatingCityId: Id MerchantOperatingCity
    merchantId: Id Merchant
    allowedVehicleVariant: '[Variant]'
    autoSelectedVehicleVariant: '[Variant]'
    defaultForVehicleVariant: '[Variant]'
    priority: Int
  sqlType:
    allowedVehicleVariant: text[]
    defaultForVehicleVariant: text[]
    autoSelectedVehicleVariant: text[]
    driverRating: double precision
  default:
    priority: '0'
    autoSelectedVehicleVariant: "'{}'"
  constraints:
    id: PrimaryKey
    merchantOperatingCityId: SecondaryKey
  queries:
    findAllByMerchantOpCityId:
      kvFunction: findAllWithKV
      where: merchantOperatingCityId
    findByServiceTierTypeAndCityId:
      kvFunction: findOneWithKV
      where:
        and: [serviceTierType, merchantOperatingCityId]
