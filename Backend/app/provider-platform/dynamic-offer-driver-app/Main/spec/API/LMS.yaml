imports:
  LmsCategory: Domain.Types.LmsModule
  LmsModule: Domain.Types.LmsModule
  LmsBonus: Domain.Types.LmsModule
  Variant: Domain.Types.Vehicle.Variant
  Maybe: Data.Maybe
  Text: Data.Text
  Bool: Kernel.Prelude
  Language: Kernel.External.Types
  LmsModuleVideoInformation: Domain.Types.LmsModuleVideoInformation
  Int: Kernel.Prelude
  QuestionModuleMapping: Domain.Types.QuestionModuleMapping
  QuizQuestion: Domain.Types.QuestionInformation
  QuizOptions: Domain.Types.QuestionInformation
  QuestionInformation: Domain.Types.QuestionInformation
  MerchantOperatingCity: Domain.Types.Merchant.MerchantOperatingCity
  ModuleCompletionStatus: Domain.Types.DriverModuleCompletion
  UTCTime: Kernel.Prelude
  APISuccess: Kernel.Types.APISuccess
  ReelButtonConfig: Domain.Types.LmsVideoTranslation

module: LmsModule

types:
  LmsGetModuleRes:
    completed: "[LmsModuleRes]"
    remaining: "[LmsModuleRes]"

  LmsModuleRes:
    moduleId : Id LmsModule
    category : LmsCategory
    duration : Int
    noOfVideos : Int
    rank : Int
    variant : Maybe Variant
    name : Text
    description : Text
    thumbnailImage : Text
    moduleCompletionStatus : ModuleCompletionStatus
    completedAt :  Maybe UTCTime
    noOfVideosCompleted : Int
    languagesAvailableForQuiz : "[Language]"
    languagesAvailableForVideos : "[Language]"

  LmsGetVideosRes:
    completed: "[LmsVideoRes]"
    pending : "[LmsVideoRes]"
    quizEnabled : Bool
    quizStatus: LmsEntityCompletionStatus

  LmsEntityCompletionStatus:
    enum: "ENTITY_COMPLETED, ENTITY_INCOMPLETE"

  LmsVideoRes:
    videoId : Id LmsModuleVideoInformation
    moduleId : Id LmsModule
    language : Language
    url : Text
    ytVideoId : Text
    duration : Int
    completedWatchCount : Int
    viewCount : Int
    thumbnailImage : Text
    title : Text
    description : Text
    thresholdEnabled : Bool
    startThresholdInPercentage : Maybe Int
    completedThresholdInPercentage : Maybe Int
    videoCompletionStatus : LmsEntityCompletionStatus
    attemptNumber : Int
    rank : Int
    completedAt : UTCTime
    sideButtonConfig : "[[ReelButtonConfig]]"
    bottomButtonConfig : "[[ReelButtonConfig]]"

  LmsQuestionRes:
    questionId : Id QuestionModuleMapping
    moduleId : Id LmsModule
    language: Language
    question: QuizQuestion
    options: QuizOptions
    previousHistory: Maybe LmsQuizHistory

  LmsQuizHistory:
    attemptNumber: Int
    selectedOptions : "[Text]"
    status: LmsQuestionStatus

  LmsQuestionStatus:
    enum: "CORRECT, INCORRECT"

  VideoUpdateAPIReq:
    moduleId: Id LmsModule
    videoId: Id LmsModuleVideoInformation
    language: Language

  QuestionConfirmReq:
    questionId: Id QuestionModuleMapping
    moduleId : Id LmsModule
    language: Language
    selectedOption: SelectedOption

  SelectedOption:
    enum: "SingleSelectedOption Text, MultiSelectedOption [Text]"

  QuestionConfirmRes:
    validation: QuestionValidation
    validationRes: SelectedOptionValidation

  QuestionValidation:
    enum: "CORRECT_ANSWER, INCORRECT_ANSWER"

  SelectedOptionValidation:
    enum: "SingleSelectedOptionValidation ValidationResult, MultiSelectedOptionValidation [ValidationResult]"

  ValidationResult:
    id: Text
    isCorrect: Bool
    derive: "Show,Eq"

apis:
  - GET:
      endpoint: /lms/listAllModules
      auth: TokenAuth PROVIDER_TYPE
      query:
        variant: Variant
        language: Language
        limit: Int
        offset: Int
      response:
        type: API.Types.UI.LmsModule.LmsGetModuleRes

  - GET:
      endpoint: /lms/{moduleId}/listAllVideos
      auth: TokenAuth PROVIDER_TYPE
      params:
        moduleId: Id LmsModule
      query:
        language: Language
      response:
        type: API.Types.UI.LmsModule.LmsGetVideosRes

  - GET:
      endpoint: /lms/{moduleId}/listAllQuiz
      auth: TokenAuth PROVIDER_TYPE
      params:
        moduleId: Id LmsModule
      query:
        language: Language
      response:
        type: "[API.Types.UI.LmsModule.LmsQuestionRes]"

  - POST:
      endpoint: /lms/markVideoAsStarted
      auth: TokenAuth PROVIDER_TYPE
      request:
        type: API.Types.UI.LmsModule.VideoUpdateAPIReq
      response:
        type: APISuccess

  - POST:
      endpoint: /lms/markVideoAsCompleted
      auth: TokenAuth PROVIDER_TYPE
      request:
        type: API.Types.UI.LmsModule.VideoUpdateAPIReq
      response:
        type: APISuccess

  - POST:
      endpoint: /lms/question/confirm
      auth: TokenAuth PROVIDER_TYPE
      request:
        type: API.Types.UI.LmsModule.QuestionConfirmReq
      response:
        type: API.Types.UI.LmsModule.QuestionConfirmRes