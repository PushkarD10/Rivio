/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "/dist/";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = 0);
/******/ })
/************************************************************************/
/******/ ({

/***/ "./dist/pulp.js":
/*!**********************!*\
  !*** ./dist/pulp.js ***!
  \**********************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

/* WEBPACK VAR INJECTION */(function(setImmediate, clearImmediate) {function _typeof(obj) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, _typeof(obj); }

// Generated by purs bundle 0.12.5
var PS = {};

(function (exports) {
  function getLevel() {
    var log_level = 0; // TODO: Should be 0 by default

    if (window.__payload && window.__payload.payload != undefined) {
      innerPayload = window.__payload.payload;
      if (innerPayload.hasOwnProperty("logLevel")) return innerPayload.logLevel;
    }

    return log_level;
  }

  function getEmptyConfigSubtype() {
    var c = {
      "subcategory": [],
      "label": []
    };
    return c;
  }

  function masterConfig() {
    var config = {
      "lifecycle": {
        "subcategory": ["android", "ios"],
        "label": []
      },
      "action": {
        "subcategory": ["user", "system"],
        "label": []
      },
      "api_call": {
        "subcategory": ["network", "sdk", "microapp"],
        "label": []
      },
      "context": {
        "subcategory": ["device", "merchant", "hypersdk", "sdk", "network", "payment"],
        "label": []
      },
      "screen": {
        "subcategory": ["screen"],
        "label": []
      },
      "service": ["hyperpay", "in.juspay.hyperpay", "ec", "in.juspay.ec"]
    };
    return JSON.stringify(config);
  }

  function screenConfig() {
    var config = {
      "lifecycle": getEmptyConfigSubtype(),
      "action": getEmptyConfigSubtype(),
      "api_call": getEmptyConfigSubtype(),
      "context": getEmptyConfigSubtype(),
      "screen": {
        "subcategory": ["screen"],
        "label": []
      }
    };
    return JSON.stringify(config);
  }

  function level0Config() {
    var config = {
      "lifecycle": getEmptyConfigSubtype(),
      "action": getEmptyConfigSubtype(),
      "api_call": getEmptyConfigSubtype(),
      "context": getEmptyConfigSubtype(),
      "screen": getEmptyConfigSubtype(),
      "service": [],
      "acceptJsonValue": true
    };
    return JSON.stringify(config);
  }

  function level1Config() {
    var config = {
      "lifecycle": getEmptyConfigSubtype(),
      "action": {
        "subcategory": [],
        "label": ["button_clicked", "checkbox_clicked", "dialog_action", "dialog_rendered", "expiry_date_changed", "cvv_changed", "card_number_changed", "upi_id_changed", "otp_changed", "mobile_number_changed", "field_focussed", "nb_search_focused", "nb_search_cancelled", "field_focussed", "payment_instrument_group", "payment_method_quickpay", "payment_method", "stored_card_selected", "stored_vpa_selected", "card_selected", "bank_selected", "wallet_selected", "upi_apps", "mpin_transaction"]
      },
      "api_call": getEmptyConfigSubtype(),
      "context": getEmptyConfigSubtype(),
      "screen": {
        "subcategory": [],
        "label": ["current_screen"]
      },
      "service": ["hyperpay", "in.juspay.hyperpay", "in.juspay.godel", "godel"],
      "acceptJsonValue": true
    };
    return JSON.stringify(config);
  }

  function meeshoConfigLevel1() {
    var config = JSON.parse(level1Config());
    config["action"]["label"].push("eligibility");
    return JSON.stringify(config);
  }

  function zee5ConfigLevel1() {
    var config = {
      "lifecycle": getEmptyConfigSubtype(),
      "action": {
        "subcategory": [],
        "label": ["button_clicked", "payment_instrument_group"]
      },
      "api_call": getEmptyConfigSubtype(),
      "context": getEmptyConfigSubtype(),
      "screen": getEmptyConfigSubtype(),
      "service": ["hyperpay", "in.juspay.hyperpay"],
      "acceptJsonValue": true
    };
    return JSON.stringify(config);
  }

  function ixigoConfigLevel1() {
    var config = {
      "lifecycle": getEmptyConfigSubtype(),
      "action": {
        "subcategory": [],
        "label": ["button_clicked", "checkbox_clicked", "dialog_action", "dialog_rendered", "expiry_date_changed", "cvv_changed", "card_number_changed", "upi_id_changed", "otp_changed", "mobile_number_changed", "field_focussed", "nb_search_focused", "nb_search_cancelled", "field_focussed", "payment_instrument_group", "payment_method_quickpay", "stored_card_selected", "card_selected", "bank_selected", "wallet_selected", "upi_apps", "mpin_transaction", "card_fingerprint"]
      },
      "api_call": getEmptyConfigSubtype(),
      "context": getEmptyConfigSubtype(),
      "screen": {
        "subcategory": [],
        "label": ["current_screen"]
      },
      "service": ["hyperpay", "in.juspay.hyperpay", "in.juspay.godel", "godel"],
      "acceptJsonValue": true
    };
    return JSON.stringify(config);
  }

  function defaultConfig() {
    var config = level0Config();
    return config;
  }

  function swiggyInAPP() {
    var config = {
      "lifecycle": getEmptyConfigSubtype(),
      "action": {
        "subcategory": ["user", "system"],
        "label": ["DELETE_VPA_ACCOUNT", "DEREGISTERED_ACCOUNT", "LINKED_ACCOUNTS", "BACKPRESS", "BANK_SELECTED", "ON_CLICK", "BUTTON_CLICKED", "OVERLAY_CLICK", "ISSUE_SELECTED", "CATEGORY_SELECTED", "QUESTION_SELECTED", "STATUS", "USER_STATUS"]
      },
      "api_call": getEmptyConfigSubtype(),
      "context": getEmptyConfigSubtype(),
      "screen": {
        "subcategory": [],
        "label": ["current_screen", "upcoming_screen"]
      },
      "service": ["hyperupi", "in.juspay.hyperupi"],
      "acceptJsonValue": false
    };
    return JSON.stringify(config);
  }

  function inAppClickstreamBasic() {
    var config = {
      "lifecycle": getEmptyConfigSubtype(),
      "action": {
        "subcategory": [],
        "label": ["CHANGE_UPI_PIN", "SET_UPI_PIN", "ONBOARDING", "DEREGISTERED_ACCOUNT", "MANDATE_CREATED", "MANDATE_DECLINED", "MANDATE_REVOKED", "MANDATE_PAUSED", "MANDATE_RESUMED", "MANDATE_APPROVED"]
      },
      "api_call": getEmptyConfigSubtype(),
      "context": getEmptyConfigSubtype(),
      "screen": getEmptyConfigSubtype(),
      "service": ["hyperupi", "in.juspay.hyperupi"],
      "acceptJsonValue": false
    };
    return JSON.stringify(config);
  }

  exports["getConfig"] = function () {
    var clientId = window.__payload && window.__payload.payload && window.__payload.payload.clientId ? window.__payload.payload.clientId.split('_')[0] : "";
    var level = getLevel();

    if (level == 0) {
      return level0Config();
    } else if (level == 1) {
      switch (clientId.toLowerCase()) {
        case "zee5":
          return zee5ConfigLevel1();

        case "ixigo":
        case "ixigoprod":
          return ixigoConfigLevel1();

        case "meesho":
          return meeshoConfigLevel1();

        case "swiggy":
        case "swiggy-daily":
        case "swiggy-nf":
        case "swiggy-liquor":
        case "swiggy-wallet":
        case "swiggy-go":
        case "swiggy-dineout":
        case "com.swiggy":
        case "swiggy":
          return swiggyInAPP();

        case "okcredit":
          return inAppClickstreamBasic();

        case "groww":
          return inAppClickstreamBasic();

        default:
          return level1Config();
      }
    } else {
      // console.log("No Valid Level found. Defaulting to default Config.");
      return defaultConfig();
    }
  };
})(PS["Config"] = PS["Config"] || {});

(function ($PS) {
  // Generated by purs version 0.12.5
  "use strict";

  $PS["Control.Apply"] = $PS["Control.Apply"] || {};
  var exports = $PS["Control.Apply"];

  var Apply = function Apply(Functor0, apply) {
    this.Functor0 = Functor0;
    this.apply = apply;
  };

  var apply = function apply(dict) {
    return dict.apply;
  };

  exports["Apply"] = Apply;
  exports["apply"] = apply;
})(PS);

(function (exports) {
  "use strict";

  exports.unit = {};
})(PS["Data.Unit"] = PS["Data.Unit"] || {});

(function ($PS) {
  // Generated by purs version 0.12.5
  "use strict";

  $PS["Data.Unit"] = $PS["Data.Unit"] || {};
  var exports = $PS["Data.Unit"];
  var $foreign = $PS["Data.Unit"];
  exports["unit"] = $foreign.unit;
})(PS);

(function ($PS) {
  // Generated by purs version 0.12.5
  "use strict";

  $PS["Control.Applicative"] = $PS["Control.Applicative"] || {};
  var exports = $PS["Control.Applicative"];
  var Control_Apply = $PS["Control.Apply"];
  var Data_Unit = $PS["Data.Unit"];

  var Applicative = function Applicative(Apply0, pure) {
    this.Apply0 = Apply0;
    this.pure = pure;
  };

  var pure = function pure(dict) {
    return dict.pure;
  };

  var unless = function unless(dictApplicative) {
    return function (v) {
      return function (v1) {
        if (!v) {
          return v1;
        }

        ;

        if (v) {
          return pure(dictApplicative)(Data_Unit.unit);
        }

        ;
        throw new Error("Failed pattern match at Control.Applicative (line 62, column 1 - line 62, column 65): " + [v.constructor.name, v1.constructor.name]);
      };
    };
  };

  var liftA1 = function liftA1(dictApplicative) {
    return function (f) {
      return function (a) {
        return Control_Apply.apply(dictApplicative.Apply0())(pure(dictApplicative)(f))(a);
      };
    };
  };

  exports["Applicative"] = Applicative;
  exports["pure"] = pure;
  exports["liftA1"] = liftA1;
  exports["unless"] = unless;
})(PS);

(function ($PS) {
  // Generated by purs version 0.12.5
  "use strict";

  $PS["Data.Function"] = $PS["Data.Function"] || {};
  var exports = $PS["Data.Function"];

  var flip = function flip(f) {
    return function (b) {
      return function (a) {
        return f(a)(b);
      };
    };
  };

  var $$const = function $$const(a) {
    return function (v) {
      return a;
    };
  };

  exports["flip"] = flip;
  exports["const"] = $$const;
})(PS);

(function ($PS) {
  // Generated by purs version 0.12.5
  "use strict";

  $PS["Control.Bind"] = $PS["Control.Bind"] || {};
  var exports = $PS["Control.Bind"];
  var Data_Function = $PS["Data.Function"];

  var Discard = function Discard(discard) {
    this.discard = discard;
  };

  var Bind = function Bind(Apply0, bind) {
    this.Apply0 = Apply0;
    this.bind = bind;
  };

  var discard = function discard(dict) {
    return dict.discard;
  };

  var bind = function bind(dict) {
    return dict.bind;
  };

  var bindFlipped = function bindFlipped(dictBind) {
    return Data_Function.flip(bind(dictBind));
  };

  var composeKleisliFlipped = function composeKleisliFlipped(dictBind) {
    return function (f) {
      return function (g) {
        return function (a) {
          return bindFlipped(dictBind)(f)(g(a));
        };
      };
    };
  };

  var composeKleisli = function composeKleisli(dictBind) {
    return function (f) {
      return function (g) {
        return function (a) {
          return bind(dictBind)(f(a))(g);
        };
      };
    };
  };

  var discardUnit = new Discard(function (dictBind) {
    return bind(dictBind);
  });
  exports["Bind"] = Bind;
  exports["bind"] = bind;
  exports["bindFlipped"] = bindFlipped;
  exports["Discard"] = Discard;
  exports["discard"] = discard;
  exports["composeKleisli"] = composeKleisli;
  exports["composeKleisliFlipped"] = composeKleisliFlipped;
  exports["discardUnit"] = discardUnit;
})(PS);

(function ($PS) {
  // Generated by purs version 0.12.5
  "use strict";

  $PS["Control.Monad"] = $PS["Control.Monad"] || {};
  var exports = $PS["Control.Monad"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Control_Bind = $PS["Control.Bind"];

  var Monad = function Monad(Applicative0, Bind1) {
    this.Applicative0 = Applicative0;
    this.Bind1 = Bind1;
  };

  var ap = function ap(dictMonad) {
    return function (f) {
      return function (a) {
        return Control_Bind.bind(dictMonad.Bind1())(f)(function (v) {
          return Control_Bind.bind(dictMonad.Bind1())(a)(function (v1) {
            return Control_Applicative.pure(dictMonad.Applicative0())(v(v1));
          });
        });
      };
    };
  };

  exports["Monad"] = Monad;
  exports["ap"] = ap;
})(PS);

(function ($PS) {
  // Generated by purs version 0.12.5
  "use strict";

  $PS["Control.Monad.Error.Class"] = $PS["Control.Monad.Error.Class"] || {};
  var exports = $PS["Control.Monad.Error.Class"];

  var MonadThrow = function MonadThrow(Monad0, throwError) {
    this.Monad0 = Monad0;
    this.throwError = throwError;
  };

  var throwError = function throwError(dict) {
    return dict.throwError;
  };

  exports["throwError"] = throwError;
  exports["MonadThrow"] = MonadThrow;
})(PS);

(function ($PS) {
  // Generated by purs version 0.12.5
  "use strict";

  $PS["Control.Semigroupoid"] = $PS["Control.Semigroupoid"] || {};
  var exports = $PS["Control.Semigroupoid"];

  var Semigroupoid = function Semigroupoid(compose) {
    this.compose = compose;
  };

  var semigroupoidFn = new Semigroupoid(function (f) {
    return function (g) {
      return function (x) {
        return f(g(x));
      };
    };
  });

  var compose = function compose(dict) {
    return dict.compose;
  };

  var composeFlipped = function composeFlipped(dictSemigroupoid) {
    return function (f) {
      return function (g) {
        return compose(dictSemigroupoid)(g)(f);
      };
    };
  };

  exports["compose"] = compose;
  exports["Semigroupoid"] = Semigroupoid;
  exports["composeFlipped"] = composeFlipped;
  exports["semigroupoidFn"] = semigroupoidFn;
})(PS);

(function ($PS) {
  // Generated by purs version 0.12.5
  "use strict";

  $PS["Control.Category"] = $PS["Control.Category"] || {};
  var exports = $PS["Control.Category"];
  var Control_Semigroupoid = $PS["Control.Semigroupoid"];

  var Category = function Category(Semigroupoid0, identity) {
    this.Semigroupoid0 = Semigroupoid0;
    this.identity = identity;
  };

  var identity = function identity(dict) {
    return dict.identity;
  };

  var categoryFn = new Category(function () {
    return Control_Semigroupoid.semigroupoidFn;
  }, function (x) {
    return x;
  });
  exports["Category"] = Category;
  exports["identity"] = identity;
  exports["categoryFn"] = categoryFn;
})(PS);

(function ($PS) {
  // Generated by purs version 0.12.5
  "use strict";

  $PS["Data.Bifunctor"] = $PS["Data.Bifunctor"] || {};
  var exports = $PS["Data.Bifunctor"];
  var Control_Category = $PS["Control.Category"];

  var Bifunctor = function Bifunctor(bimap) {
    this.bimap = bimap;
  };

  var bimap = function bimap(dict) {
    return dict.bimap;
  };

  var lmap = function lmap(dictBifunctor) {
    return function (f) {
      return bimap(dictBifunctor)(f)(Control_Category.identity(Control_Category.categoryFn));
    };
  };

  exports["bimap"] = bimap;
  exports["Bifunctor"] = Bifunctor;
  exports["lmap"] = lmap;
})(PS);

(function (exports) {
  "use strict";

  exports.arrayMap = function (f) {
    return function (arr) {
      var l = arr.length;
      var result = new Array(l);

      for (var i = 0; i < l; i++) {
        result[i] = f(arr[i]);
      }

      return result;
    };
  };
})(PS["Data.Functor"] = PS["Data.Functor"] || {});

(function ($PS) {
  // Generated by purs version 0.12.5
  "use strict";

  $PS["Data.Functor"] = $PS["Data.Functor"] || {};
  var exports = $PS["Data.Functor"];
  var $foreign = $PS["Data.Functor"];
  var Control_Semigroupoid = $PS["Control.Semigroupoid"];
  var Data_Function = $PS["Data.Function"];
  var Data_Unit = $PS["Data.Unit"];

  var Functor = function Functor(map) {
    this.map = map;
  };

  var map = function map(dict) {
    return dict.map;
  };

  var mapFlipped = function mapFlipped(dictFunctor) {
    return function (fa) {
      return function (f) {
        return map(dictFunctor)(f)(fa);
      };
    };
  };

  var $$void = function $$void(dictFunctor) {
    return map(dictFunctor)(Data_Function["const"](Data_Unit.unit));
  };

  var functorFn = new Functor(Control_Semigroupoid.compose(Control_Semigroupoid.semigroupoidFn));
  var functorArray = new Functor($foreign.arrayMap);
  exports["Functor"] = Functor;
  exports["map"] = map;
  exports["mapFlipped"] = mapFlipped;
  exports["void"] = $$void;
  exports["functorFn"] = functorFn;
  exports["functorArray"] = functorArray;
})(PS);

(function ($PS) {
  // Generated by purs version 0.12.5
  "use strict";

  $PS["Data.Either"] = $PS["Data.Either"] || {};
  var exports = $PS["Data.Either"];
  var Data_Bifunctor = $PS["Data.Bifunctor"];
  var Data_Functor = $PS["Data.Functor"];

  var Left = function () {
    function Left(value0) {
      this.value0 = value0;
    }

    ;

    Left.create = function (value0) {
      return new Left(value0);
    };

    return Left;
  }();

  var Right = function () {
    function Right(value0) {
      this.value0 = value0;
    }

    ;

    Right.create = function (value0) {
      return new Right(value0);
    };

    return Right;
  }();

  var functorEither = new Data_Functor.Functor(function (f) {
    return function (m) {
      if (m instanceof Left) {
        return new Left(m.value0);
      }

      ;

      if (m instanceof Right) {
        return new Right(f(m.value0));
      }

      ;
      throw new Error("Failed pattern match at Data.Either (line 38, column 8 - line 38, column 52): " + [m.constructor.name]);
    };
  });

  var either = function either(v) {
    return function (v1) {
      return function (v2) {
        if (v2 instanceof Left) {
          return v(v2.value0);
        }

        ;

        if (v2 instanceof Right) {
          return v1(v2.value0);
        }

        ;
        throw new Error("Failed pattern match at Data.Either (line 238, column 1 - line 238, column 64): " + [v.constructor.name, v1.constructor.name, v2.constructor.name]);
      };
    };
  };

  var bifunctorEither = new Data_Bifunctor.Bifunctor(function (v) {
    return function (v1) {
      return function (v2) {
        if (v2 instanceof Left) {
          return new Left(v(v2.value0));
        }

        ;

        if (v2 instanceof Right) {
          return new Right(v1(v2.value0));
        }

        ;
        throw new Error("Failed pattern match at Data.Either (line 46, column 1 - line 46, column 45): " + [v.constructor.name, v1.constructor.name, v2.constructor.name]);
      };
    };
  });
  exports["Left"] = Left;
  exports["Right"] = Right;
  exports["either"] = either;
  exports["functorEither"] = functorEither;
  exports["bifunctorEither"] = bifunctorEither;
})(PS);

(function ($PS) {
  // Generated by purs version 0.12.5
  "use strict";

  $PS["Control.Monad.Except.Trans"] = $PS["Control.Monad.Except.Trans"] || {};
  var exports = $PS["Control.Monad.Except.Trans"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Control_Apply = $PS["Control.Apply"];
  var Control_Bind = $PS["Control.Bind"];
  var Control_Monad = $PS["Control.Monad"];
  var Control_Monad_Error_Class = $PS["Control.Monad.Error.Class"];
  var Data_Either = $PS["Data.Either"];
  var Data_Functor = $PS["Data.Functor"];

  var ExceptT = function ExceptT(x) {
    return x;
  };

  var runExceptT = function runExceptT(v) {
    return v;
  };

  var mapExceptT = function mapExceptT(f) {
    return function (v) {
      return f(v);
    };
  };

  var functorExceptT = function functorExceptT(dictFunctor) {
    return new Data_Functor.Functor(function (f) {
      return mapExceptT(Data_Functor.map(dictFunctor)(Data_Functor.map(Data_Either.functorEither)(f)));
    });
  };

  var monadExceptT = function monadExceptT(dictMonad) {
    return new Control_Monad.Monad(function () {
      return applicativeExceptT(dictMonad);
    }, function () {
      return bindExceptT(dictMonad);
    });
  };

  var bindExceptT = function bindExceptT(dictMonad) {
    return new Control_Bind.Bind(function () {
      return applyExceptT(dictMonad);
    }, function (v) {
      return function (k) {
        return Control_Bind.bind(dictMonad.Bind1())(v)(Data_Either.either(function ($97) {
          return Control_Applicative.pure(dictMonad.Applicative0())(Data_Either.Left.create($97));
        })(function (a) {
          var v1 = k(a);
          return v1;
        }));
      };
    });
  };

  var applyExceptT = function applyExceptT(dictMonad) {
    return new Control_Apply.Apply(function () {
      return functorExceptT(dictMonad.Bind1().Apply0().Functor0());
    }, Control_Monad.ap(monadExceptT(dictMonad)));
  };

  var applicativeExceptT = function applicativeExceptT(dictMonad) {
    return new Control_Applicative.Applicative(function () {
      return applyExceptT(dictMonad);
    }, function ($98) {
      return ExceptT(Control_Applicative.pure(dictMonad.Applicative0())(Data_Either.Right.create($98)));
    });
  };

  var monadThrowExceptT = function monadThrowExceptT(dictMonad) {
    return new Control_Monad_Error_Class.MonadThrow(function () {
      return monadExceptT(dictMonad);
    }, function ($102) {
      return ExceptT(Control_Applicative.pure(dictMonad.Applicative0())(Data_Either.Left.create($102)));
    });
  };

  exports["ExceptT"] = ExceptT;
  exports["runExceptT"] = runExceptT;
  exports["mapExceptT"] = mapExceptT;
  exports["functorExceptT"] = functorExceptT;
  exports["applyExceptT"] = applyExceptT;
  exports["applicativeExceptT"] = applicativeExceptT;
  exports["bindExceptT"] = bindExceptT;
  exports["monadExceptT"] = monadExceptT;
  exports["monadThrowExceptT"] = monadThrowExceptT;
})(PS);

(function (exports) {
  "use strict";

  exports.boolConj = function (b1) {
    return function (b2) {
      return b1 && b2;
    };
  };

  exports.boolDisj = function (b1) {
    return function (b2) {
      return b1 || b2;
    };
  };

  exports.boolNot = function (b) {
    return !b;
  };
})(PS["Data.HeytingAlgebra"] = PS["Data.HeytingAlgebra"] || {});

(function ($PS) {
  // Generated by purs version 0.12.5
  "use strict";

  $PS["Data.HeytingAlgebra"] = $PS["Data.HeytingAlgebra"] || {};
  var exports = $PS["Data.HeytingAlgebra"];
  var $foreign = $PS["Data.HeytingAlgebra"];

  var HeytingAlgebra = function HeytingAlgebra(conj, disj, ff, implies, not, tt) {
    this.conj = conj;
    this.disj = disj;
    this.ff = ff;
    this.implies = implies;
    this.not = not;
    this.tt = tt;
  };

  var tt = function tt(dict) {
    return dict.tt;
  };

  var not = function not(dict) {
    return dict.not;
  };

  var implies = function implies(dict) {
    return dict.implies;
  };

  var ff = function ff(dict) {
    return dict.ff;
  };

  var disj = function disj(dict) {
    return dict.disj;
  };

  var heytingAlgebraBoolean = new HeytingAlgebra($foreign.boolConj, $foreign.boolDisj, false, function (a) {
    return function (b) {
      return disj(heytingAlgebraBoolean)(not(heytingAlgebraBoolean)(a))(b);
    };
  }, $foreign.boolNot, true);

  var conj = function conj(dict) {
    return dict.conj;
  };

  exports["HeytingAlgebra"] = HeytingAlgebra;
  exports["tt"] = tt;
  exports["ff"] = ff;
  exports["implies"] = implies;
  exports["conj"] = conj;
  exports["disj"] = disj;
  exports["not"] = not;
  exports["heytingAlgebraBoolean"] = heytingAlgebraBoolean;
})(PS);

(function ($PS) {
  // Generated by purs version 0.12.5
  "use strict";

  $PS["Data.Monoid"] = $PS["Data.Monoid"] || {};
  var exports = $PS["Data.Monoid"];

  var Monoid = function Monoid(Semigroup0, mempty) {
    this.Semigroup0 = Semigroup0;
    this.mempty = mempty;
  };

  var mempty = function mempty(dict) {
    return dict.mempty;
  };

  exports["Monoid"] = Monoid;
  exports["mempty"] = mempty;
})(PS);

(function ($PS) {
  // Generated by purs version 0.12.5
  "use strict";

  $PS["Data.Semigroup"] = $PS["Data.Semigroup"] || {};
  var exports = $PS["Data.Semigroup"];

  var Semigroup = function Semigroup(append) {
    this.append = append;
  };

  var append = function append(dict) {
    return dict.append;
  };

  exports["Semigroup"] = Semigroup;
  exports["append"] = append;
})(PS);

(function ($PS) {
  // Generated by purs version 0.12.5
  "use strict";

  $PS["Data.Monoid.Disj"] = $PS["Data.Monoid.Disj"] || {};
  var exports = $PS["Data.Monoid.Disj"];
  var Data_HeytingAlgebra = $PS["Data.HeytingAlgebra"];
  var Data_Monoid = $PS["Data.Monoid"];
  var Data_Semigroup = $PS["Data.Semigroup"];

  var Disj = function Disj(x) {
    return x;
  };

  var semigroupDisj = function semigroupDisj(dictHeytingAlgebra) {
    return new Data_Semigroup.Semigroup(function (v) {
      return function (v1) {
        return Data_HeytingAlgebra.disj(dictHeytingAlgebra)(v)(v1);
      };
    });
  };

  var monoidDisj = function monoidDisj(dictHeytingAlgebra) {
    return new Data_Monoid.Monoid(function () {
      return semigroupDisj(dictHeytingAlgebra);
    }, Data_HeytingAlgebra.ff(dictHeytingAlgebra));
  };

  exports["Disj"] = Disj;
  exports["semigroupDisj"] = semigroupDisj;
  exports["monoidDisj"] = monoidDisj;
})(PS);

(function ($PS) {
  // Generated by purs version 0.12.5
  "use strict";

  $PS["Data.Newtype"] = $PS["Data.Newtype"] || {};
  var exports = $PS["Data.Newtype"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_Monoid_Disj = $PS["Data.Monoid.Disj"];

  var Newtype = function Newtype(unwrap, wrap) {
    this.unwrap = unwrap;
    this.wrap = wrap;
  };

  var wrap = function wrap(dict) {
    return dict.wrap;
  };

  var unwrap = function unwrap(dict) {
    return dict.unwrap;
  };

  var newtypeDisj = new Newtype(function (v) {
    return v;
  }, Data_Monoid_Disj.Disj);

  var alaF = function alaF(dictFunctor) {
    return function (dictFunctor1) {
      return function (dictNewtype) {
        return function (dictNewtype1) {
          return function (v) {
            return function (f) {
              return function ($80) {
                return Data_Functor.map(dictFunctor1)(unwrap(dictNewtype1))(f(Data_Functor.map(dictFunctor)(wrap(dictNewtype))($80)));
              };
            };
          };
        };
      };
    };
  };

  exports["unwrap"] = unwrap;
  exports["wrap"] = wrap;
  exports["Newtype"] = Newtype;
  exports["alaF"] = alaF;
  exports["newtypeDisj"] = newtypeDisj;
})(PS);

(function ($PS) {
  // Generated by purs version 0.12.5
  "use strict";

  $PS["Data.Identity"] = $PS["Data.Identity"] || {};
  var exports = $PS["Data.Identity"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Control_Apply = $PS["Control.Apply"];
  var Control_Bind = $PS["Control.Bind"];
  var Control_Monad = $PS["Control.Monad"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_Newtype = $PS["Data.Newtype"];

  var Identity = function Identity(x) {
    return x;
  };

  var newtypeIdentity = new Data_Newtype.Newtype(function (n) {
    return n;
  }, Identity);
  var functorIdentity = new Data_Functor.Functor(function (f) {
    return function (m) {
      return f(m);
    };
  });
  var applyIdentity = new Control_Apply.Apply(function () {
    return functorIdentity;
  }, function (v) {
    return function (v1) {
      return v(v1);
    };
  });
  var bindIdentity = new Control_Bind.Bind(function () {
    return applyIdentity;
  }, function (v) {
    return function (f) {
      return f(v);
    };
  });
  var applicativeIdentity = new Control_Applicative.Applicative(function () {
    return applyIdentity;
  }, Identity);
  var monadIdentity = new Control_Monad.Monad(function () {
    return applicativeIdentity;
  }, function () {
    return bindIdentity;
  });
  exports["Identity"] = Identity;
  exports["newtypeIdentity"] = newtypeIdentity;
  exports["functorIdentity"] = functorIdentity;
  exports["applyIdentity"] = applyIdentity;
  exports["applicativeIdentity"] = applicativeIdentity;
  exports["bindIdentity"] = bindIdentity;
  exports["monadIdentity"] = monadIdentity;
})(PS);

(function ($PS) {
  // Generated by purs version 0.12.5
  "use strict";

  $PS["Control.Monad.Except"] = $PS["Control.Monad.Except"] || {};
  var exports = $PS["Control.Monad.Except"];
  var Control_Monad_Except_Trans = $PS["Control.Monad.Except.Trans"];
  var Data_Identity = $PS["Data.Identity"];
  var Data_Newtype = $PS["Data.Newtype"];

  var runExcept = function runExcept($0) {
    return Data_Newtype.unwrap(Data_Identity.newtypeIdentity)(Control_Monad_Except_Trans.runExceptT($0));
  };

  var mapExcept = function mapExcept(f) {
    return Control_Monad_Except_Trans.mapExceptT(function ($1) {
      return Data_Identity.Identity(f(Data_Newtype.unwrap(Data_Identity.newtypeIdentity)($1)));
    });
  };

  exports["runExcept"] = runExcept;
  exports["mapExcept"] = mapExcept;
})(PS);

(function ($PS) {
  // Generated by purs version 0.12.5
  "use strict";

  $PS["Data.Symbol"] = $PS["Data.Symbol"] || {};
  var exports = $PS["Data.Symbol"];

  var SProxy = function () {
    function SProxy() {}

    ;
    SProxy.value = new SProxy();
    return SProxy;
  }();

  var IsSymbol = function IsSymbol(reflectSymbol) {
    this.reflectSymbol = reflectSymbol;
  };

  var reflectSymbol = function reflectSymbol(dict) {
    return dict.reflectSymbol;
  };

  exports["IsSymbol"] = IsSymbol;
  exports["reflectSymbol"] = reflectSymbol;
  exports["SProxy"] = SProxy;
})(PS);

(function ($PS) {
  // Generated by purs version 0.12.5
  "use strict";

  $PS["Data.Generic.Rep"] = $PS["Data.Generic.Rep"] || {};
  var exports = $PS["Data.Generic.Rep"];

  var Constructor = function Constructor(x) {
    return x;
  };

  var Generic = function Generic(from, to) {
    this.from = from;
    this.to = to;
  };

  var to = function to(dict) {
    return dict.to;
  };

  var from = function from(dict) {
    return dict.from;
  };

  exports["Generic"] = Generic;
  exports["to"] = to;
  exports["from"] = from;
  exports["Constructor"] = Constructor;
})(PS);

(function (exports) {
  "use strict"; //------------------------------------------------------------------------------
  // Array creation --------------------------------------------------------------
  //------------------------------------------------------------------------------

  exports.range = function (start) {
    return function (end) {
      var step = start > end ? -1 : 1;
      var result = new Array(step * (end - start) + 1);
      var i = start,
          n = 0;

      while (i !== end) {
        result[n++] = i;
        i += step;
      }

      result[n] = i;
      return result;
    };
  }; //------------------------------------------------------------------------------
  // Array size ------------------------------------------------------------------
  //------------------------------------------------------------------------------


  exports.length = function (xs) {
    return xs.length;
  };

  exports.findIndexImpl = function (just) {
    return function (nothing) {
      return function (f) {
        return function (xs) {
          for (var i = 0, l = xs.length; i < l; i++) {
            if (f(xs[i])) return just(i);
          }

          return nothing;
        };
      };
    };
  }; //------------------------------------------------------------------------------
  // Zipping ---------------------------------------------------------------------
  //------------------------------------------------------------------------------


  exports.zipWith = function (f) {
    return function (xs) {
      return function (ys) {
        var l = xs.length < ys.length ? xs.length : ys.length;
        var result = new Array(l);

        for (var i = 0; i < l; i++) {
          result[i] = f(xs[i])(ys[i]);
        }

        return result;
      };
    };
  };
})(PS["Data.Array"] = PS["Data.Array"] || {});

(function (exports) {
  "use strict";

  var refEq = function refEq(r1) {
    return function (r2) {
      return r1 === r2;
    };
  };

  exports.eqStringImpl = refEq;
})(PS["Data.Eq"] = PS["Data.Eq"] || {});

(function ($PS) {
  // Generated by purs version 0.12.5
  "use strict";

  $PS["Data.Eq"] = $PS["Data.Eq"] || {};
  var exports = $PS["Data.Eq"];
  var $foreign = $PS["Data.Eq"];

  var Eq = function Eq(eq) {
    this.eq = eq;
  };

  var eqString = new Eq($foreign.eqStringImpl);

  var eq = function eq(dict) {
    return dict.eq;
  };

  exports["Eq"] = Eq;
  exports["eq"] = eq;
  exports["eqString"] = eqString;
})(PS);

(function ($PS) {
  // Generated by purs version 0.12.5
  "use strict";

  $PS["Data.Maybe"] = $PS["Data.Maybe"] || {};
  var exports = $PS["Data.Maybe"];
  var Data_Function = $PS["Data.Function"];

  var Nothing = function () {
    function Nothing() {}

    ;
    Nothing.value = new Nothing();
    return Nothing;
  }();

  var Just = function () {
    function Just(value0) {
      this.value0 = value0;
    }

    ;

    Just.create = function (value0) {
      return new Just(value0);
    };

    return Just;
  }();

  var maybe = function maybe(v) {
    return function (v1) {
      return function (v2) {
        if (v2 instanceof Nothing) {
          return v;
        }

        ;

        if (v2 instanceof Just) {
          return v1(v2.value0);
        }

        ;
        throw new Error("Failed pattern match at Data.Maybe (line 217, column 1 - line 217, column 51): " + [v.constructor.name, v1.constructor.name, v2.constructor.name]);
      };
    };
  };

  var isJust = maybe(false)(Data_Function["const"](true));
  exports["Nothing"] = Nothing;
  exports["Just"] = Just;
  exports["maybe"] = maybe;
  exports["isJust"] = isJust;
})(PS);

(function ($PS) {
  // Generated by purs version 0.12.5
  "use strict";

  $PS["Data.Array"] = $PS["Data.Array"] || {};
  var exports = $PS["Data.Array"];
  var $foreign = $PS["Data.Array"];
  var Data_Eq = $PS["Data.Eq"];
  var Data_Maybe = $PS["Data.Maybe"];
  var findIndex = $foreign.findIndexImpl(Data_Maybe.Just.create)(Data_Maybe.Nothing.value);

  var elemIndex = function elemIndex(dictEq) {
    return function (x) {
      return findIndex(function (v) {
        return Data_Eq.eq(dictEq)(v)(x);
      });
    };
  };

  exports["elemIndex"] = elemIndex;
  exports["findIndex"] = findIndex;
  exports["range"] = $foreign.range;
  exports["length"] = $foreign.length;
  exports["zipWith"] = $foreign.zipWith;
})(PS);

(function (exports) {
  "use strict";

  exports.foldrArray = function (f) {
    return function (init) {
      return function (xs) {
        var acc = init;
        var len = xs.length;

        for (var i = len - 1; i >= 0; i--) {
          acc = f(xs[i])(acc);
        }

        return acc;
      };
    };
  };

  exports.foldlArray = function (f) {
    return function (init) {
      return function (xs) {
        var acc = init;
        var len = xs.length;

        for (var i = 0; i < len; i++) {
          acc = f(acc)(xs[i]);
        }

        return acc;
      };
    };
  };
})(PS["Data.Foldable"] = PS["Data.Foldable"] || {});

(function ($PS) {
  // Generated by purs version 0.12.5
  "use strict";

  $PS["Data.Foldable"] = $PS["Data.Foldable"] || {};
  var exports = $PS["Data.Foldable"];
  var $foreign = $PS["Data.Foldable"];
  var Data_Eq = $PS["Data.Eq"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_HeytingAlgebra = $PS["Data.HeytingAlgebra"];
  var Data_Monoid = $PS["Data.Monoid"];
  var Data_Monoid_Disj = $PS["Data.Monoid.Disj"];
  var Data_Newtype = $PS["Data.Newtype"];
  var Data_Semigroup = $PS["Data.Semigroup"];

  var Foldable = function Foldable(foldMap, foldl, foldr) {
    this.foldMap = foldMap;
    this.foldl = foldl;
    this.foldr = foldr;
  };

  var foldr = function foldr(dict) {
    return dict.foldr;
  };

  var foldl = function foldl(dict) {
    return dict.foldl;
  };

  var foldMapDefaultR = function foldMapDefaultR(dictFoldable) {
    return function (dictMonoid) {
      return function (f) {
        return foldr(dictFoldable)(function (x) {
          return function (acc) {
            return Data_Semigroup.append(dictMonoid.Semigroup0())(f(x))(acc);
          };
        })(Data_Monoid.mempty(dictMonoid));
      };
    };
  };

  var foldableArray = new Foldable(function (dictMonoid) {
    return foldMapDefaultR(foldableArray)(dictMonoid);
  }, $foreign.foldlArray, $foreign.foldrArray);

  var foldMap = function foldMap(dict) {
    return dict.foldMap;
  };

  var any = function any(dictFoldable) {
    return function (dictHeytingAlgebra) {
      return Data_Newtype.alaF(Data_Functor.functorFn)(Data_Functor.functorFn)(Data_Newtype.newtypeDisj)(Data_Newtype.newtypeDisj)(Data_Monoid_Disj.Disj)(foldMap(dictFoldable)(Data_Monoid_Disj.monoidDisj(dictHeytingAlgebra)));
    };
  };

  var elem = function elem(dictFoldable) {
    return function (dictEq) {
      return function ($199) {
        return any(dictFoldable)(Data_HeytingAlgebra.heytingAlgebraBoolean)(Data_Eq.eq(dictEq)($199));
      };
    };
  };

  exports["Foldable"] = Foldable;
  exports["foldr"] = foldr;
  exports["foldl"] = foldl;
  exports["foldMap"] = foldMap;
  exports["foldMapDefaultR"] = foldMapDefaultR;
  exports["any"] = any;
  exports["elem"] = elem;
  exports["foldableArray"] = foldableArray;
})(PS);

(function ($PS) {
  // Generated by purs version 0.12.5
  "use strict";

  $PS["Control.Alt"] = $PS["Control.Alt"] || {};
  var exports = $PS["Control.Alt"];

  var Alt = function Alt(Functor0, alt) {
    this.Functor0 = Functor0;
    this.alt = alt;
  };

  var alt = function alt(dict) {
    return dict.alt;
  };

  exports["Alt"] = Alt;
  exports["alt"] = alt;
})(PS);

(function ($PS) {
  // Generated by purs version 0.12.5
  "use strict";

  $PS["Control.Plus"] = $PS["Control.Plus"] || {};
  var exports = $PS["Control.Plus"];

  var Plus = function Plus(Alt0, empty) {
    this.Alt0 = Alt0;
    this.empty = empty;
  };

  var empty = function empty(dict) {
    return dict.empty;
  };

  exports["Plus"] = Plus;
  exports["empty"] = empty;
})(PS);

(function ($PS) {
  // Generated by purs version 0.12.5
  "use strict";

  $PS["Data.NonEmpty"] = $PS["Data.NonEmpty"] || {};
  var exports = $PS["Data.NonEmpty"];
  var Control_Plus = $PS["Control.Plus"];
  var Data_Functor = $PS["Data.Functor"];

  var NonEmpty = function () {
    function NonEmpty(value0, value1) {
      this.value0 = value0;
      this.value1 = value1;
    }

    ;

    NonEmpty.create = function (value0) {
      return function (value1) {
        return new NonEmpty(value0, value1);
      };
    };

    return NonEmpty;
  }();

  var singleton = function singleton(dictPlus) {
    return function (a) {
      return new NonEmpty(a, Control_Plus.empty(dictPlus));
    };
  };

  var functorNonEmpty = function functorNonEmpty(dictFunctor) {
    return new Data_Functor.Functor(function (f) {
      return function (m) {
        return new NonEmpty(f(m.value0), Data_Functor.map(dictFunctor)(f)(m.value1));
      };
    });
  };

  exports["NonEmpty"] = NonEmpty;
  exports["singleton"] = singleton;
  exports["functorNonEmpty"] = functorNonEmpty;
})(PS);

(function ($PS) {
  // Generated by purs version 0.12.5
  "use strict";

  $PS["Data.List.Types"] = $PS["Data.List.Types"] || {};
  var exports = $PS["Data.List.Types"];
  var Control_Alt = $PS["Control.Alt"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Control_Apply = $PS["Control.Apply"];
  var Control_Plus = $PS["Control.Plus"];
  var Data_Foldable = $PS["Data.Foldable"];
  var Data_Function = $PS["Data.Function"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_Monoid = $PS["Data.Monoid"];
  var Data_NonEmpty = $PS["Data.NonEmpty"];
  var Data_Semigroup = $PS["Data.Semigroup"];

  var Nil = function () {
    function Nil() {}

    ;
    Nil.value = new Nil();
    return Nil;
  }();

  var Cons = function () {
    function Cons(value0, value1) {
      this.value0 = value0;
      this.value1 = value1;
    }

    ;

    Cons.create = function (value0) {
      return function (value1) {
        return new Cons(value0, value1);
      };
    };

    return Cons;
  }();

  var NonEmptyList = function NonEmptyList(x) {
    return x;
  };

  var listMap = function listMap(f) {
    var chunkedRevMap = function chunkedRevMap($copy_chunksAcc) {
      return function ($copy_v) {
        var $tco_var_chunksAcc = $copy_chunksAcc;
        var $tco_done = false;
        var $tco_result;

        function $tco_loop(chunksAcc, v) {
          if (v instanceof Cons && v.value1 instanceof Cons && v.value1.value1 instanceof Cons) {
            $tco_var_chunksAcc = new Cons(v, chunksAcc);
            $copy_v = v.value1.value1.value1;
            return;
          }

          ;

          var unrolledMap = function unrolledMap(v1) {
            if (v1 instanceof Cons && v1.value1 instanceof Cons && v1.value1.value1 instanceof Nil) {
              return new Cons(f(v1.value0), new Cons(f(v1.value1.value0), Nil.value));
            }

            ;

            if (v1 instanceof Cons && v1.value1 instanceof Nil) {
              return new Cons(f(v1.value0), Nil.value);
            }

            ;
            return Nil.value;
          };

          var reverseUnrolledMap = function reverseUnrolledMap($copy_v1) {
            return function ($copy_acc) {
              var $tco_var_v1 = $copy_v1;
              var $tco_done = false;
              var $tco_result;

              function $tco_loop(v1, acc) {
                if (v1 instanceof Cons && v1.value0 instanceof Cons && v1.value0.value1 instanceof Cons && v1.value0.value1.value1 instanceof Cons) {
                  $tco_var_v1 = v1.value1;
                  $copy_acc = new Cons(f(v1.value0.value0), new Cons(f(v1.value0.value1.value0), new Cons(f(v1.value0.value1.value1.value0), acc)));
                  return;
                }

                ;
                $tco_done = true;
                return acc;
              }

              ;

              while (!$tco_done) {
                $tco_result = $tco_loop($tco_var_v1, $copy_acc);
              }

              ;
              return $tco_result;
            };
          };

          $tco_done = true;
          return reverseUnrolledMap(chunksAcc)(unrolledMap(v));
        }

        ;

        while (!$tco_done) {
          $tco_result = $tco_loop($tco_var_chunksAcc, $copy_v);
        }

        ;
        return $tco_result;
      };
    };

    return chunkedRevMap(Nil.value);
  };

  var functorList = new Data_Functor.Functor(listMap);
  var functorNonEmptyList = Data_NonEmpty.functorNonEmpty(functorList);
  var foldableList = new Data_Foldable.Foldable(function (dictMonoid) {
    return function (f) {
      return Data_Foldable.foldl(foldableList)(function (acc) {
        return function ($202) {
          return Data_Semigroup.append(dictMonoid.Semigroup0())(acc)(f($202));
        };
      })(Data_Monoid.mempty(dictMonoid));
    };
  }, function (f) {
    var go = function go($copy_b) {
      return function ($copy_v) {
        var $tco_var_b = $copy_b;
        var $tco_done = false;
        var $tco_result;

        function $tco_loop(b, v) {
          if (v instanceof Nil) {
            $tco_done = true;
            return b;
          }

          ;

          if (v instanceof Cons) {
            $tco_var_b = f(b)(v.value0);
            $copy_v = v.value1;
            return;
          }

          ;
          throw new Error("Failed pattern match at Data.List.Types (line 109, column 12 - line 111, column 30): " + [v.constructor.name]);
        }

        ;

        while (!$tco_done) {
          $tco_result = $tco_loop($tco_var_b, $copy_v);
        }

        ;
        return $tco_result;
      };
    };

    return go;
  }, function (f) {
    return function (b) {
      var rev = Data_Foldable.foldl(foldableList)(Data_Function.flip(Cons.create))(Nil.value);
      return function ($203) {
        return Data_Foldable.foldl(foldableList)(Data_Function.flip(f))(b)(rev($203));
      };
    };
  });
  var semigroupList = new Data_Semigroup.Semigroup(function (xs) {
    return function (ys) {
      return Data_Foldable.foldr(foldableList)(Cons.create)(ys)(xs);
    };
  });
  var applyList = new Control_Apply.Apply(function () {
    return functorList;
  }, function (v) {
    return function (v1) {
      if (v instanceof Nil) {
        return Nil.value;
      }

      ;

      if (v instanceof Cons) {
        return Data_Semigroup.append(semigroupList)(Data_Functor.map(functorList)(v.value0)(v1))(Control_Apply.apply(applyList)(v.value1)(v1));
      }

      ;
      throw new Error("Failed pattern match at Data.List.Types (line 155, column 1 - line 155, column 33): " + [v.constructor.name, v1.constructor.name]);
    };
  });
  var applyNonEmptyList = new Control_Apply.Apply(function () {
    return functorNonEmptyList;
  }, function (v) {
    return function (v1) {
      return new Data_NonEmpty.NonEmpty(v.value0(v1.value0), Data_Semigroup.append(semigroupList)(Control_Apply.apply(applyList)(v.value1)(new Cons(v1.value0, Nil.value)))(Control_Apply.apply(applyList)(new Cons(v.value0, v.value1))(v1.value1)));
    };
  });
  var altList = new Control_Alt.Alt(function () {
    return functorList;
  }, Data_Semigroup.append(semigroupList));
  var plusList = new Control_Plus.Plus(function () {
    return altList;
  }, Nil.value);
  var applicativeNonEmptyList = new Control_Applicative.Applicative(function () {
    return applyNonEmptyList;
  }, function ($216) {
    return NonEmptyList(Data_NonEmpty.singleton(plusList)($216));
  });
  exports["Nil"] = Nil;
  exports["Cons"] = Cons;
  exports["NonEmptyList"] = NonEmptyList;
  exports["semigroupList"] = semigroupList;
  exports["functorList"] = functorList;
  exports["foldableList"] = foldableList;
  exports["applyList"] = applyList;
  exports["altList"] = altList;
  exports["plusList"] = plusList;
  exports["functorNonEmptyList"] = functorNonEmptyList;
  exports["applyNonEmptyList"] = applyNonEmptyList;
  exports["applicativeNonEmptyList"] = applicativeNonEmptyList;
})(PS);

(function ($PS) {
  // Generated by purs version 0.12.5
  "use strict";

  $PS["Data.List"] = $PS["Data.List"] || {};
  var exports = $PS["Data.List"];
  var Data_Foldable = $PS["Data.Foldable"];
  var Data_List_Types = $PS["Data.List.Types"];

  var singleton = function singleton(a) {
    return new Data_List_Types.Cons(a, Data_List_Types.Nil.value);
  };

  var $$null = function $$null(v) {
    if (v instanceof Data_List_Types.Nil) {
      return true;
    }

    ;
    return false;
  };

  var fromFoldable = function fromFoldable(dictFoldable) {
    return Data_Foldable.foldr(dictFoldable)(Data_List_Types.Cons.create)(Data_List_Types.Nil.value);
  };

  exports["fromFoldable"] = fromFoldable;
  exports["singleton"] = singleton;
  exports["null"] = $$null;
})(PS);

(function (exports) {
  "use strict";

  exports.showIntImpl = function (n) {
    return n.toString();
  };

  exports.showStringImpl = function (s) {
    var l = s.length;
    return "\"" + s.replace(/[\0-\x1F\x7F"\\]/g, // eslint-disable-line no-control-regex
    function (c, i) {
      switch (c) {
        case "\"":
        case "\\":
          return "\\" + c;

        case "\x07":
          return "\\a";

        case "\b":
          return "\\b";

        case "\f":
          return "\\f";

        case "\n":
          return "\\n";

        case "\r":
          return "\\r";

        case "\t":
          return "\\t";

        case "\v":
          return "\\v";
      }

      var k = i + 1;
      var empty = k < l && s[k] >= "0" && s[k] <= "9" ? "\\&" : "";
      return "\\" + c.charCodeAt(0).toString(10) + empty;
    }) + "\"";
  };
})(PS["Data.Show"] = PS["Data.Show"] || {});

(function ($PS) {
  // Generated by purs version 0.12.5
  "use strict";

  $PS["Data.Show"] = $PS["Data.Show"] || {};
  var exports = $PS["Data.Show"];
  var $foreign = $PS["Data.Show"];

  var Show = function Show(show) {
    this.show = show;
  };

  var showString = new Show($foreign.showStringImpl);
  var showInt = new Show($foreign.showIntImpl);

  var show = function show(dict) {
    return dict.show;
  };

  exports["Show"] = Show;
  exports["show"] = show;
  exports["showInt"] = showInt;
  exports["showString"] = showString;
})(PS);

(function (exports) {
  "use strict"; // jshint maxparams: 3

  exports.traverseArrayImpl = function () {
    function array1(a) {
      return [a];
    }

    function array2(a) {
      return function (b) {
        return [a, b];
      };
    }

    function array3(a) {
      return function (b) {
        return function (c) {
          return [a, b, c];
        };
      };
    }

    function concat2(xs) {
      return function (ys) {
        return xs.concat(ys);
      };
    }

    return function (apply) {
      return function (map) {
        return function (pure) {
          return function (f) {
            return function (array) {
              function go(bot, top) {
                switch (top - bot) {
                  case 0:
                    return pure([]);

                  case 1:
                    return map(array1)(f(array[bot]));

                  case 2:
                    return apply(map(array2)(f(array[bot])))(f(array[bot + 1]));

                  case 3:
                    return apply(apply(map(array3)(f(array[bot])))(f(array[bot + 1])))(f(array[bot + 2]));

                  default:
                    // This slightly tricky pivot selection aims to produce two
                    // even-length partitions where possible.
                    var pivot = bot + Math.floor((top - bot) / 4) * 2;
                    return apply(map(concat2)(go(bot, pivot)))(go(pivot, top));
                }
              }

              return go(0, array.length);
            };
          };
        };
      };
    };
  }();
})(PS["Data.Traversable"] = PS["Data.Traversable"] || {});

(function ($PS) {
  // Generated by purs version 0.12.5
  "use strict";

  $PS["Data.Traversable"] = $PS["Data.Traversable"] || {};
  var exports = $PS["Data.Traversable"];
  var $foreign = $PS["Data.Traversable"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Control_Apply = $PS["Control.Apply"];
  var Control_Category = $PS["Control.Category"];
  var Data_Foldable = $PS["Data.Foldable"];
  var Data_Functor = $PS["Data.Functor"];

  var Traversable = function Traversable(Foldable1, Functor0, sequence, traverse) {
    this.Foldable1 = Foldable1;
    this.Functor0 = Functor0;
    this.sequence = sequence;
    this.traverse = traverse;
  };

  var traverse = function traverse(dict) {
    return dict.traverse;
  };

  var sequenceDefault = function sequenceDefault(dictTraversable) {
    return function (dictApplicative) {
      return traverse(dictTraversable)(dictApplicative)(Control_Category.identity(Control_Category.categoryFn));
    };
  };

  var traversableArray = new Traversable(function () {
    return Data_Foldable.foldableArray;
  }, function () {
    return Data_Functor.functorArray;
  }, function (dictApplicative) {
    return sequenceDefault(traversableArray)(dictApplicative);
  }, function (dictApplicative) {
    return $foreign.traverseArrayImpl(Control_Apply.apply(dictApplicative.Apply0()))(Data_Functor.map(dictApplicative.Apply0().Functor0()))(Control_Applicative.pure(dictApplicative));
  });

  var sequence = function sequence(dict) {
    return dict.sequence;
  };

  exports["Traversable"] = Traversable;
  exports["traverse"] = traverse;
  exports["sequence"] = sequence;
  exports["sequenceDefault"] = sequenceDefault;
  exports["traversableArray"] = traversableArray;
})(PS);

(function (exports) {
  "use strict";

  exports.unsafeToForeign = function (value) {
    return value;
  };

  exports.unsafeFromForeign = function (value) {
    return value;
  };

  exports.typeOf = function (value) {
    return _typeof(value);
  };

  exports.tagOf = function (value) {
    return Object.prototype.toString.call(value).slice(8, -1);
  };

  exports.isNull = function (value) {
    return value === null;
  };

  exports.isUndefined = function (value) {
    return value === undefined;
  };

  exports.isArray = Array.isArray || function (value) {
    return Object.prototype.toString.call(value) === "[object Array]";
  };
})(PS["Foreign"] = PS["Foreign"] || {});

(function ($PS) {
  // Generated by purs version 0.12.5
  "use strict";

  $PS["Data.Boolean"] = $PS["Data.Boolean"] || {};
  var exports = $PS["Data.Boolean"];
  var otherwise = true;
  exports["otherwise"] = otherwise;
})(PS);

(function ($PS) {
  // Generated by purs version 0.12.5
  "use strict";

  $PS["Data.List.NonEmpty"] = $PS["Data.List.NonEmpty"] || {};
  var exports = $PS["Data.List.NonEmpty"];
  var Data_List_Types = $PS["Data.List.Types"];
  var Data_NonEmpty = $PS["Data.NonEmpty"];

  var singleton = function singleton($165) {
    return Data_List_Types.NonEmptyList(Data_NonEmpty.singleton(Data_List_Types.plusList)($165));
  };

  exports["singleton"] = singleton;
})(PS);

(function ($PS) {
  // Generated by purs version 0.12.5
  "use strict";

  $PS["Foreign"] = $PS["Foreign"] || {};
  var exports = $PS["Foreign"];
  var $foreign = $PS["Foreign"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Control_Monad_Error_Class = $PS["Control.Monad.Error.Class"];
  var Control_Monad_Except_Trans = $PS["Control.Monad.Except.Trans"];
  var Data_Boolean = $PS["Data.Boolean"];
  var Data_Identity = $PS["Data.Identity"];
  var Data_List_NonEmpty = $PS["Data.List.NonEmpty"];

  var ForeignError = function () {
    function ForeignError(value0) {
      this.value0 = value0;
    }

    ;

    ForeignError.create = function (value0) {
      return new ForeignError(value0);
    };

    return ForeignError;
  }();

  var TypeMismatch = function () {
    function TypeMismatch(value0, value1) {
      this.value0 = value0;
      this.value1 = value1;
    }

    ;

    TypeMismatch.create = function (value0) {
      return function (value1) {
        return new TypeMismatch(value0, value1);
      };
    };

    return TypeMismatch;
  }();

  var ErrorAtIndex = function () {
    function ErrorAtIndex(value0, value1) {
      this.value0 = value0;
      this.value1 = value1;
    }

    ;

    ErrorAtIndex.create = function (value0) {
      return function (value1) {
        return new ErrorAtIndex(value0, value1);
      };
    };

    return ErrorAtIndex;
  }();

  var ErrorAtProperty = function () {
    function ErrorAtProperty(value0, value1) {
      this.value0 = value0;
      this.value1 = value1;
    }

    ;

    ErrorAtProperty.create = function (value0) {
      return function (value1) {
        return new ErrorAtProperty(value0, value1);
      };
    };

    return ErrorAtProperty;
  }();

  var fail = function fail($107) {
    return Control_Monad_Error_Class.throwError(Control_Monad_Except_Trans.monadThrowExceptT(Data_Identity.monadIdentity))(Data_List_NonEmpty.singleton($107));
  };

  var readArray = function readArray(value) {
    if ($foreign.isArray(value)) {
      return Control_Applicative.pure(Control_Monad_Except_Trans.applicativeExceptT(Data_Identity.monadIdentity))($foreign.unsafeFromForeign(value));
    }

    ;

    if (Data_Boolean.otherwise) {
      return fail(new TypeMismatch("array", $foreign.tagOf(value)));
    }

    ;
    throw new Error("Failed pattern match at Foreign (line 147, column 1 - line 147, column 42): " + [value.constructor.name]);
  };

  var unsafeReadTagged = function unsafeReadTagged(tag) {
    return function (value) {
      if ($foreign.tagOf(value) === tag) {
        return Control_Applicative.pure(Control_Monad_Except_Trans.applicativeExceptT(Data_Identity.monadIdentity))($foreign.unsafeFromForeign(value));
      }

      ;

      if (Data_Boolean.otherwise) {
        return fail(new TypeMismatch(tag, $foreign.tagOf(value)));
      }

      ;
      throw new Error("Failed pattern match at Foreign (line 106, column 1 - line 106, column 55): " + [tag.constructor.name, value.constructor.name]);
    };
  };

  var readBoolean = unsafeReadTagged("Boolean");
  var readString = unsafeReadTagged("String");
  exports["ForeignError"] = ForeignError;
  exports["TypeMismatch"] = TypeMismatch;
  exports["ErrorAtIndex"] = ErrorAtIndex;
  exports["ErrorAtProperty"] = ErrorAtProperty;
  exports["unsafeReadTagged"] = unsafeReadTagged;
  exports["readString"] = readString;
  exports["readBoolean"] = readBoolean;
  exports["readArray"] = readArray;
  exports["fail"] = fail;
  exports["unsafeToForeign"] = $foreign.unsafeToForeign;
  exports["unsafeFromForeign"] = $foreign.unsafeFromForeign;
  exports["typeOf"] = $foreign.typeOf;
  exports["isNull"] = $foreign.isNull;
  exports["isUndefined"] = $foreign.isUndefined;
})(PS);

(function (exports) {
  "use strict";

  exports.unsafeReadPropImpl = function (f, s, key, value) {
    return value == null ? f : s(value[key]);
  };

  exports.unsafeHasOwnProperty = function (prop, value) {
    return Object.prototype.hasOwnProperty.call(value, prop);
  };

  exports.unsafeHasProperty = function (prop, value) {
    return prop in value;
  };
})(PS["Foreign.Index"] = PS["Foreign.Index"] || {});

(function ($PS) {
  // Generated by purs version 0.12.5
  "use strict";

  $PS["Foreign.Index"] = $PS["Foreign.Index"] || {};
  var exports = $PS["Foreign.Index"];
  var $foreign = $PS["Foreign.Index"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Control_Monad_Except_Trans = $PS["Control.Monad.Except.Trans"];
  var Data_Function = $PS["Data.Function"];
  var Data_Identity = $PS["Data.Identity"];
  var Foreign = $PS["Foreign"];

  var Index = function Index(errorAt, hasOwnProperty, hasProperty, index) {
    this.errorAt = errorAt;
    this.hasOwnProperty = hasOwnProperty;
    this.hasProperty = hasProperty;
    this.index = index;
  };

  var unsafeReadProp = function unsafeReadProp(k) {
    return function (value) {
      return $foreign.unsafeReadPropImpl(Foreign.fail(new Foreign.TypeMismatch("object", Foreign.typeOf(value))), Control_Applicative.pure(Control_Monad_Except_Trans.applicativeExceptT(Data_Identity.monadIdentity)), k, value);
    };
  };

  var readProp = unsafeReadProp;

  var index = function index(dict) {
    return dict.index;
  };

  var hasPropertyImpl = function hasPropertyImpl(v) {
    return function (value) {
      if (Foreign.isNull(value)) {
        return false;
      }

      ;

      if (Foreign.isUndefined(value)) {
        return false;
      }

      ;

      if (Foreign.typeOf(value) === "object" || Foreign.typeOf(value) === "function") {
        return $foreign.unsafeHasProperty(v, value);
      }

      ;
      return false;
    };
  };

  var hasProperty = function hasProperty(dict) {
    return dict.hasProperty;
  };

  var hasOwnPropertyImpl = function hasOwnPropertyImpl(v) {
    return function (value) {
      if (Foreign.isNull(value)) {
        return false;
      }

      ;

      if (Foreign.isUndefined(value)) {
        return false;
      }

      ;

      if (Foreign.typeOf(value) === "object" || Foreign.typeOf(value) === "function") {
        return $foreign.unsafeHasOwnProperty(v, value);
      }

      ;
      return false;
    };
  };

  var indexString = new Index(Foreign.ErrorAtProperty.create, hasOwnPropertyImpl, hasPropertyImpl, Data_Function.flip(readProp));

  var hasOwnProperty = function hasOwnProperty(dict) {
    return dict.hasOwnProperty;
  };

  var errorAt = function errorAt(dict) {
    return dict.errorAt;
  };

  exports["Index"] = Index;
  exports["readProp"] = readProp;
  exports["index"] = index;
  exports["hasProperty"] = hasProperty;
  exports["hasOwnProperty"] = hasOwnProperty;
  exports["errorAt"] = errorAt;
  exports["indexString"] = indexString;
})(PS);

(function (exports) {
  "use strict";

  exports._copyST = function (m) {
    return function () {
      var r = {};

      for (var k in m) {
        if (hasOwnProperty.call(m, k)) {
          r[k] = m[k];
        }
      }

      return r;
    };
  };

  exports.empty = {};

  exports.runST = function (f) {
    return f();
  };

  function toArrayWithKey(f) {
    return function (m) {
      var r = [];

      for (var k in m) {
        if (hasOwnProperty.call(m, k)) {
          r.push(f(k)(m[k]));
        }
      }

      return r;
    };
  }
})(PS["Foreign.Object"] = PS["Foreign.Object"] || {});

(function (exports) {
  "use strict";

  exports.poke = function (k) {
    return function (v) {
      return function (m) {
        return function () {
          m[k] = v;
          return m;
        };
      };
    };
  };
})(PS["Foreign.Object.ST"] = PS["Foreign.Object.ST"] || {});

(function ($PS) {
  // Generated by purs version 0.12.5
  "use strict";

  $PS["Foreign.Object.ST"] = $PS["Foreign.Object.ST"] || {};
  var exports = $PS["Foreign.Object.ST"];
  var $foreign = $PS["Foreign.Object.ST"];
  exports["poke"] = $foreign.poke;
})(PS);

(function ($PS) {
  // Generated by purs version 0.12.5
  "use strict";

  $PS["Foreign.Object"] = $PS["Foreign.Object"] || {};
  var exports = $PS["Foreign.Object"];
  var $foreign = $PS["Foreign.Object"];
  var Foreign_Object_ST = $PS["Foreign.Object.ST"];
  var thawST = $foreign["_copyST"];

  var mutate = function mutate(f) {
    return function (m) {
      return $foreign.runST(function __do() {
        var v = thawST(m)();
        var v1 = f(v)();
        return v;
      });
    };
  };

  var insert = function insert(k) {
    return function (v) {
      return mutate(Foreign_Object_ST.poke(k)(v));
    };
  };

  exports["insert"] = insert;
  exports["thawST"] = thawST;
  exports["empty"] = $foreign.empty;
})(PS);

(function (exports) {
  "use strict";

  exports.unsafeGet = function (label) {
    return function (rec) {
      return rec[label];
    };
  };
})(PS["Record.Unsafe"] = PS["Record.Unsafe"] || {});

(function ($PS) {
  // Generated by purs version 0.12.5
  "use strict";

  $PS["Record.Unsafe"] = $PS["Record.Unsafe"] || {};
  var exports = $PS["Record.Unsafe"];
  var $foreign = $PS["Record.Unsafe"];
  exports["unsafeGet"] = $foreign.unsafeGet;
})(PS);

(function ($PS) {
  // Generated by purs version 0.12.5
  "use strict";

  $PS["Record"] = $PS["Record"] || {};
  var exports = $PS["Record"];
  var Data_Symbol = $PS["Data.Symbol"];
  var Record_Unsafe = $PS["Record.Unsafe"];

  var get = function get(dictIsSymbol) {
    return function (dictCons) {
      return function (l) {
        return function (r) {
          return Record_Unsafe.unsafeGet(Data_Symbol.reflectSymbol(dictIsSymbol)(l))(r);
        };
      };
    };
  };

  exports["get"] = get;
})(PS);

(function (exports) {
  "use strict";

  exports.copyRecord = function (rec) {
    var copy = {};

    for (var key in rec) {
      if ({}.hasOwnProperty.call(rec, key)) {
        copy[key] = rec[key];
      }
    }

    return copy;
  };

  exports.unsafeInsert = function (l) {
    return function (a) {
      return function (rec) {
        rec[l] = a;
        return rec;
      };
    };
  };
})(PS["Record.Builder"] = PS["Record.Builder"] || {});

(function ($PS) {
  // Generated by purs version 0.12.5
  "use strict";

  $PS["Record.Builder"] = $PS["Record.Builder"] || {};
  var exports = $PS["Record.Builder"];
  var $foreign = $PS["Record.Builder"];
  var Control_Category = $PS["Control.Category"];
  var Control_Semigroupoid = $PS["Control.Semigroupoid"];
  var Data_Symbol = $PS["Data.Symbol"];
  var semigroupoidBuilder = Control_Semigroupoid.semigroupoidFn;

  var insert = function insert(dictCons) {
    return function (dictLacks) {
      return function (dictIsSymbol) {
        return function (l) {
          return function (a) {
            return function (r1) {
              return $foreign.unsafeInsert(Data_Symbol.reflectSymbol(dictIsSymbol)(l))(a)(r1);
            };
          };
        };
      };
    };
  };

  var categoryBuilder = Control_Category.categoryFn;

  var build = function build(v) {
    return function (r1) {
      return v($foreign.copyRecord(r1));
    };
  };

  exports["build"] = build;
  exports["insert"] = insert;
  exports["semigroupoidBuilder"] = semigroupoidBuilder;
  exports["categoryBuilder"] = categoryBuilder;
})(PS);

(function ($PS) {
  // Generated by purs version 0.12.5
  "use strict";

  $PS["Type.Data.RowList"] = $PS["Type.Data.RowList"] || {};
  var exports = $PS["Type.Data.RowList"];

  var RLProxy = function () {
    function RLProxy() {}

    ;
    RLProxy.value = new RLProxy();
    return RLProxy;
  }();

  exports["RLProxy"] = RLProxy;
})(PS);

(function ($PS) {
  // Generated by purs version 0.12.5
  "use strict";

  $PS["Type.Proxy"] = $PS["Type.Proxy"] || {};
  var exports = $PS["Type.Proxy"];

  var $$Proxy = function () {
    function $$Proxy() {}

    ;
    $$Proxy.value = new $$Proxy();
    return $$Proxy;
  }();

  exports["Proxy"] = $$Proxy;
})(PS);

(function ($PS) {
  // Generated by purs version 0.12.5
  "use strict";

  $PS["Foreign.Generic.Class"] = $PS["Foreign.Generic.Class"] || {};
  var exports = $PS["Foreign.Generic.Class"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Control_Bind = $PS["Control.Bind"];
  var Control_Category = $PS["Control.Category"];
  var Control_Monad_Except = $PS["Control.Monad.Except"];
  var Control_Monad_Except_Trans = $PS["Control.Monad.Except.Trans"];
  var Control_Semigroupoid = $PS["Control.Semigroupoid"];
  var Data_Array = $PS["Data.Array"];
  var Data_Bifunctor = $PS["Data.Bifunctor"];
  var Data_Either = $PS["Data.Either"];
  var Data_Foldable = $PS["Data.Foldable"];
  var Data_Function = $PS["Data.Function"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_Generic_Rep = $PS["Data.Generic.Rep"];
  var Data_Identity = $PS["Data.Identity"];
  var Data_List = $PS["Data.List"];
  var Data_List_Types = $PS["Data.List.Types"];
  var Data_Show = $PS["Data.Show"];
  var Data_Symbol = $PS["Data.Symbol"];
  var Data_Traversable = $PS["Data.Traversable"];
  var Foreign = $PS["Foreign"];
  var Foreign_Index = $PS["Foreign.Index"];
  var Foreign_Object = $PS["Foreign.Object"];
  var Record = $PS["Record"];
  var Record_Builder = $PS["Record.Builder"];
  var Type_Data_RowList = $PS["Type.Data.RowList"];
  var Type_Proxy = $PS["Type.Proxy"];

  var TaggedObject = function () {
    function TaggedObject(value0) {
      this.value0 = value0;
    }

    ;

    TaggedObject.create = function (value0) {
      return new TaggedObject(value0);
    };

    return TaggedObject;
  }();

  var GenericDecodeArgs = function GenericDecodeArgs(decodeArgs) {
    this.decodeArgs = decodeArgs;
  };

  var GenericDecode = function GenericDecode(decodeOpts) {
    this.decodeOpts = decodeOpts;
  };

  var GenericCountArgs = function GenericCountArgs(countArgs) {
    this.countArgs = countArgs;
  };

  var EncodeWithOptions = function EncodeWithOptions(encodeWithOptions) {
    this.encodeWithOptions = encodeWithOptions;
  };

  var EncodeRecord = function EncodeRecord(encodeRecordWithOptions) {
    this.encodeRecordWithOptions = encodeRecordWithOptions;
  };

  var Encode = function Encode(encode) {
    this.encode = encode;
  };

  var DecodeWithOptions = function DecodeWithOptions(decodeWithOptions) {
    this.decodeWithOptions = decodeWithOptions;
  };

  var DecodeRecord = function DecodeRecord(decodeRecordWithOptions) {
    this.decodeRecordWithOptions = decodeRecordWithOptions;
  };

  var Decode = function Decode(decode) {
    this.decode = decode;
  };

  var stringEncode = new Encode(Foreign.unsafeToForeign);
  var stringDecode = new Decode(Foreign.readString);
  var intEncode = new Encode(Foreign.unsafeToForeign);
  var genericCountArgsArgument = new GenericCountArgs(function (v) {
    return new Data_Either.Right(1);
  });
  var foreignEncode = new Encode(Control_Category.identity(Control_Category.categoryFn));

  var encodeWithOptions = function encodeWithOptions(dict) {
    return dict.encodeWithOptions;
  };

  var encodeRecordWithOptions = function encodeRecordWithOptions(dict) {
    return dict.encodeRecordWithOptions;
  };

  var encodeWithOptionsRecord = function encodeWithOptionsRecord(dictRowToList) {
    return function (dictEncodeRecord) {
      return new EncodeWithOptions(function (opts) {
        return function ($164) {
          return Foreign.unsafeToForeign(encodeRecordWithOptions(dictEncodeRecord)(Type_Data_RowList.RLProxy.value)(opts)($164));
        };
      });
    };
  };

  var encodeRecordNil = new EncodeRecord(function (v) {
    return function (v1) {
      return function (v2) {
        return Foreign_Object.empty;
      };
    };
  });

  var encodeRecordCons = function encodeRecordCons(dictCons) {
    return function (dictEncodeRecord) {
      return function (dictIsSymbol) {
        return function (dictEncodeWithOptions) {
          return new EncodeRecord(function (v) {
            return function (opts) {
              return function (rec) {
                var obj = encodeRecordWithOptions(dictEncodeRecord)(Type_Data_RowList.RLProxy.value)(opts)(rec);
                var l = Data_Symbol.reflectSymbol(dictIsSymbol)(Data_Symbol.SProxy.value);
                return Foreign_Object.insert(opts.fieldTransform(l))(encodeWithOptions(dictEncodeWithOptions)(opts)(Record.get(dictIsSymbol)(dictCons)(Data_Symbol.SProxy.value)(rec)))(obj);
              };
            };
          });
        };
      };
    };
  };

  var encode = function encode(dict) {
    return dict.encode;
  };

  var encodeWithOptionsOther = function encodeWithOptionsOther(dictEncode) {
    return new EncodeWithOptions(function (v) {
      return encode(dictEncode);
    });
  };

  var defaultOptions = {
    sumEncoding: new TaggedObject({
      tagFieldName: "tag",
      contentsFieldName: "contents",
      constructorTagTransform: Control_Category.identity(Control_Category.categoryFn)
    }),
    unwrapSingleConstructors: false,
    unwrapSingleArguments: true,
    fieldTransform: Control_Category.identity(Control_Category.categoryFn)
  };

  var recordEncode = function recordEncode(dictRowToList) {
    return function (dictEncodeRecord) {
      return new Encode(encodeWithOptions(encodeWithOptionsRecord(dictRowToList)(dictEncodeRecord))(defaultOptions));
    };
  };

  var decodeWithOptions = function decodeWithOptions(dict) {
    return dict.decodeWithOptions;
  };

  var genericDecodeArgsArgument = function genericDecodeArgsArgument(dictDecodeWithOptions) {
    return new GenericDecodeArgs(function (v) {
      return function (v1) {
        return function (v2) {
          if (v2 instanceof Data_List_Types.Cons) {
            return Control_Bind.bind(Control_Monad_Except_Trans.bindExceptT(Data_Identity.monadIdentity))(Control_Monad_Except.mapExcept(Data_Bifunctor.lmap(Data_Either.bifunctorEither)(Data_Functor.map(Data_List_Types.functorNonEmptyList)(Foreign.ErrorAtIndex.create(v1))))(decodeWithOptions(dictDecodeWithOptions)(v)(v2.value0)))(function (v3) {
              return Control_Applicative.pure(Control_Monad_Except_Trans.applicativeExceptT(Data_Identity.monadIdentity))({
                result: v3,
                rest: v2.value1,
                next: v1 + 1 | 0
              });
            });
          }

          ;
          return Foreign.fail(new Foreign.ForeignError("Not enough constructor arguments"));
        };
      };
    });
  };

  var decodeRecordWithOptions = function decodeRecordWithOptions(dict) {
    return dict.decodeRecordWithOptions;
  };

  var decodeWithOptionsRecord = function decodeWithOptionsRecord(dictRowToList) {
    return function (dictDecodeRecord) {
      return new DecodeWithOptions(function (opts) {
        return Data_Functor.map(Data_Functor.functorFn)(Data_Functor.map(Control_Monad_Except_Trans.functorExceptT(Data_Identity.functorIdentity))(Data_Function.flip(Record_Builder.build)({})))(decodeRecordWithOptions(dictDecodeRecord)(Type_Data_RowList.RLProxy.value)(opts));
      });
    };
  };

  var decodeRecordNil = new DecodeRecord(function (v) {
    return function (v1) {
      return function (v2) {
        return Control_Applicative.pure(Control_Monad_Except_Trans.applicativeExceptT(Data_Identity.monadIdentity))(Control_Category.identity(Record_Builder.categoryBuilder));
      };
    };
  });

  var decodeRecordCons = function decodeRecordCons(dictCons) {
    return function (dictDecodeRecord) {
      return function (dictIsSymbol) {
        return function (dictDecodeWithOptions) {
          return function (dictLacks) {
            return new DecodeRecord(function (v) {
              return function (opts) {
                return function (f) {
                  return Control_Bind.bind(Control_Monad_Except_Trans.bindExceptT(Data_Identity.monadIdentity))(decodeRecordWithOptions(dictDecodeRecord)(Type_Data_RowList.RLProxy.value)(opts)(f))(function (v1) {
                    var l = Data_Symbol.reflectSymbol(dictIsSymbol)(Data_Symbol.SProxy.value);
                    var l_transformed = opts.fieldTransform(l);
                    return Control_Bind.bind(Control_Monad_Except_Trans.bindExceptT(Data_Identity.monadIdentity))(Foreign_Index.index(Foreign_Index.indexString)(f)(l_transformed))(function (v2) {
                      return Control_Bind.bind(Control_Monad_Except_Trans.bindExceptT(Data_Identity.monadIdentity))(Control_Monad_Except.mapExcept(Data_Bifunctor.lmap(Data_Either.bifunctorEither)(Data_Functor.map(Data_List_Types.functorNonEmptyList)(Foreign.ErrorAtProperty.create(l_transformed))))(decodeWithOptions(dictDecodeWithOptions)(opts)(v2)))(function (v3) {
                        return Control_Applicative.pure(Control_Monad_Except_Trans.applicativeExceptT(Data_Identity.monadIdentity))(Control_Semigroupoid.composeFlipped(Record_Builder.semigroupoidBuilder)(v1)(Record_Builder.insert(dictCons)(dictLacks)(dictIsSymbol)(Data_Symbol.SProxy.value)(v3)));
                      });
                    });
                  });
                };
              };
            });
          };
        };
      };
    };
  };

  var decodeOpts = function decodeOpts(dict) {
    return dict.decodeOpts;
  };

  var decodeArgs = function decodeArgs(dict) {
    return dict.decodeArgs;
  };

  var decode = function decode(dict) {
    return dict.decode;
  };

  var decodeWithOptionsOther = function decodeWithOptionsOther(dictDecode) {
    return new DecodeWithOptions(function (v) {
      return decode(dictDecode);
    });
  };

  var countArgs = function countArgs(dict) {
    return dict.countArgs;
  };

  var genericDecodeConstructor = function genericDecodeConstructor(dictIsSymbol) {
    return function (dictGenericDecodeArgs) {
      return function (dictGenericCountArgs) {
        return new GenericDecode(function (opts) {
          return function (f) {
            var numArgs = countArgs(dictGenericCountArgs)(Type_Proxy["Proxy"].value);

            var readArguments = function readArguments(args) {
              if (numArgs instanceof Data_Either.Left) {
                return Control_Applicative.pure(Control_Monad_Except_Trans.applicativeExceptT(Data_Identity.monadIdentity))(numArgs.value0);
              }

              ;

              if (numArgs instanceof Data_Either.Right && numArgs.value0 === 1 && opts.unwrapSingleArguments) {
                return Control_Bind.bind(Control_Monad_Except_Trans.bindExceptT(Data_Identity.monadIdentity))(decodeArgs(dictGenericDecodeArgs)(opts)(0)(Data_List.singleton(args)))(function (v) {
                  return Control_Bind.discard(Control_Bind.discardUnit)(Control_Monad_Except_Trans.bindExceptT(Data_Identity.monadIdentity))(Control_Applicative.unless(Control_Monad_Except_Trans.applicativeExceptT(Data_Identity.monadIdentity))(Data_List["null"](v.rest))(Foreign.fail(new Foreign.ForeignError("Expected a single argument"))))(function () {
                    return Control_Applicative.pure(Control_Monad_Except_Trans.applicativeExceptT(Data_Identity.monadIdentity))(v.result);
                  });
                });
              }

              ;

              if (numArgs instanceof Data_Either.Right) {
                return Control_Bind.bind(Control_Monad_Except_Trans.bindExceptT(Data_Identity.monadIdentity))(Foreign.readArray(args))(function (v) {
                  return Control_Bind.bind(Control_Monad_Except_Trans.bindExceptT(Data_Identity.monadIdentity))(decodeArgs(dictGenericDecodeArgs)(opts)(0)(Data_List.fromFoldable(Data_Foldable.foldableArray)(v)))(function (v1) {
                    return Control_Bind.discard(Control_Bind.discardUnit)(Control_Monad_Except_Trans.bindExceptT(Data_Identity.monadIdentity))(Control_Applicative.unless(Control_Monad_Except_Trans.applicativeExceptT(Data_Identity.monadIdentity))(Data_List["null"](v1.rest))(Foreign.fail(new Foreign.ForeignError("Expected " + (Data_Show.show(Data_Show.showInt)(numArgs.value0) + " constructor arguments")))))(function () {
                      return Control_Applicative.pure(Control_Monad_Except_Trans.applicativeExceptT(Data_Identity.monadIdentity))(v1.result);
                    });
                  });
                });
              }

              ;
              throw new Error("Failed pattern match at Foreign.Generic.Class (line 307, column 9 - line 319, column 24): " + [numArgs.constructor.name]);
            };

            var ctorName = Data_Symbol.reflectSymbol(dictIsSymbol)(Data_Symbol.SProxy.value);

            if (opts.unwrapSingleConstructors) {
              return Data_Functor.map(Control_Monad_Except_Trans.functorExceptT(Data_Identity.functorIdentity))(Data_Generic_Rep.Constructor)(readArguments(f));
            }

            ;
            return Control_Bind.bind(Control_Monad_Except_Trans.bindExceptT(Data_Identity.monadIdentity))(Control_Monad_Except.mapExcept(Data_Bifunctor.lmap(Data_Either.bifunctorEither)(Data_Functor.map(Data_List_Types.functorNonEmptyList)(Foreign.ErrorAtProperty.create(opts.sumEncoding.value0.tagFieldName))))(Control_Bind.bind(Control_Monad_Except_Trans.bindExceptT(Data_Identity.monadIdentity))(Control_Bind.bind(Control_Monad_Except_Trans.bindExceptT(Data_Identity.monadIdentity))(Foreign_Index.index(Foreign_Index.indexString)(f)(opts.sumEncoding.value0.tagFieldName))(Foreign.readString))(function (v) {
              var expected = opts.sumEncoding.value0.constructorTagTransform(ctorName);
              return Control_Bind.discard(Control_Bind.discardUnit)(Control_Monad_Except_Trans.bindExceptT(Data_Identity.monadIdentity))(Control_Applicative.unless(Control_Monad_Except_Trans.applicativeExceptT(Data_Identity.monadIdentity))(v === expected)(Foreign.fail(new Foreign.ForeignError("Expected " + (Data_Show.show(Data_Show.showString)(expected) + " tag")))))(function () {
                return Control_Applicative.pure(Control_Monad_Except_Trans.applicativeExceptT(Data_Identity.monadIdentity))(v);
              });
            })))(function (v) {
              return Control_Bind.bind(Control_Monad_Except_Trans.bindExceptT(Data_Identity.monadIdentity))(Control_Monad_Except.mapExcept(Data_Bifunctor.lmap(Data_Either.bifunctorEither)(Data_Functor.map(Data_List_Types.functorNonEmptyList)(Foreign.ErrorAtProperty.create(opts.sumEncoding.value0.contentsFieldName))))(Control_Bind.bind(Control_Monad_Except_Trans.bindExceptT(Data_Identity.monadIdentity))(Foreign_Index.index(Foreign_Index.indexString)(f)(opts.sumEncoding.value0.contentsFieldName))(readArguments)))(function (v1) {
                return Control_Applicative.pure(Control_Monad_Except_Trans.applicativeExceptT(Data_Identity.monadIdentity))(v1);
              });
            });
          };
        });
      };
    };
  };

  var booleanDecode = new Decode(Foreign.readBoolean);

  var arrayDecode = function arrayDecode(dictDecode) {
    return new Decode(function () {
      var readElement = function readElement(i) {
        return function (value) {
          return Control_Monad_Except.mapExcept(Data_Bifunctor.lmap(Data_Either.bifunctorEither)(Data_Functor.map(Data_List_Types.functorNonEmptyList)(Foreign.ErrorAtIndex.create(i))))(decode(dictDecode)(value));
        };
      };

      var readElements = function readElements(arr) {
        return Data_Traversable.sequence(Data_Traversable.traversableArray)(Control_Monad_Except_Trans.applicativeExceptT(Data_Identity.monadIdentity))(Data_Array.zipWith(readElement)(Data_Array.range(0)(Data_Array.length(arr)))(arr));
      };

      return Control_Bind.composeKleisli(Control_Monad_Except_Trans.bindExceptT(Data_Identity.monadIdentity))(Foreign.readArray)(readElements);
    }());
  };

  exports["countArgs"] = countArgs;
  exports["decode"] = decode;
  exports["decodeArgs"] = decodeArgs;
  exports["decodeOpts"] = decodeOpts;
  exports["decodeRecordWithOptions"] = decodeRecordWithOptions;
  exports["decodeWithOptions"] = decodeWithOptions;
  exports["encode"] = encode;
  exports["encodeRecordWithOptions"] = encodeRecordWithOptions;
  exports["encodeWithOptions"] = encodeWithOptions;
  exports["TaggedObject"] = TaggedObject;
  exports["defaultOptions"] = defaultOptions;
  exports["Decode"] = Decode;
  exports["Encode"] = Encode;
  exports["DecodeWithOptions"] = DecodeWithOptions;
  exports["EncodeWithOptions"] = EncodeWithOptions;
  exports["DecodeRecord"] = DecodeRecord;
  exports["EncodeRecord"] = EncodeRecord;
  exports["GenericDecode"] = GenericDecode;
  exports["GenericDecodeArgs"] = GenericDecodeArgs;
  exports["GenericCountArgs"] = GenericCountArgs;
  exports["stringDecode"] = stringDecode;
  exports["booleanDecode"] = booleanDecode;
  exports["arrayDecode"] = arrayDecode;
  exports["foreignEncode"] = foreignEncode;
  exports["stringEncode"] = stringEncode;
  exports["intEncode"] = intEncode;
  exports["recordEncode"] = recordEncode;
  exports["decodeWithOptionsRecord"] = decodeWithOptionsRecord;
  exports["decodeWithOptionsOther"] = decodeWithOptionsOther;
  exports["encodeWithOptionsRecord"] = encodeWithOptionsRecord;
  exports["encodeWithOptionsOther"] = encodeWithOptionsOther;
  exports["decodeRecordNil"] = decodeRecordNil;
  exports["encodeRecordNil"] = encodeRecordNil;
  exports["decodeRecordCons"] = decodeRecordCons;
  exports["encodeRecordCons"] = encodeRecordCons;
  exports["genericDecodeConstructor"] = genericDecodeConstructor;
  exports["genericDecodeArgsArgument"] = genericDecodeArgsArgument;
  exports["genericCountArgsArgument"] = genericCountArgsArgument;
})(PS);

(function (exports) {
  "use strict";

  exports.parseJSONImpl = function (str) {
    return JSON.parse(str);
  };
})(PS["Foreign.JSON"] = PS["Foreign.JSON"] || {});

(function (exports) {
  "use strict";

  exports.message = function (e) {
    return e.message;
  };

  exports.catchException = function (c) {
    return function (t) {
      return function () {
        try {
          return t();
        } catch (e) {
          if (e instanceof Error || Object.prototype.toString.call(e) === "[object Error]") {
            return c(e)();
          } else {
            return c(new Error(e.toString()))();
          }
        }
      };
    };
  };
})(PS["Effect.Exception"] = PS["Effect.Exception"] || {});

(function (exports) {
  "use strict";

  exports.pureE = function (a) {
    return function () {
      return a;
    };
  };

  exports.bindE = function (a) {
    return function (f) {
      return function () {
        return f(a())();
      };
    };
  };
})(PS["Effect"] = PS["Effect"] || {});

(function ($PS) {
  // Generated by purs version 0.12.5
  "use strict";

  $PS["Effect"] = $PS["Effect"] || {};
  var exports = $PS["Effect"];
  var $foreign = $PS["Effect"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Control_Apply = $PS["Control.Apply"];
  var Control_Bind = $PS["Control.Bind"];
  var Control_Monad = $PS["Control.Monad"];
  var Data_Functor = $PS["Data.Functor"];
  var monadEffect = new Control_Monad.Monad(function () {
    return applicativeEffect;
  }, function () {
    return bindEffect;
  });
  var bindEffect = new Control_Bind.Bind(function () {
    return applyEffect;
  }, $foreign.bindE);
  var applyEffect = new Control_Apply.Apply(function () {
    return functorEffect;
  }, Control_Monad.ap(monadEffect));
  var applicativeEffect = new Control_Applicative.Applicative(function () {
    return applyEffect;
  }, $foreign.pureE);
  var functorEffect = new Data_Functor.Functor(Control_Applicative.liftA1(applicativeEffect));
  exports["functorEffect"] = functorEffect;
  exports["applyEffect"] = applyEffect;
  exports["applicativeEffect"] = applicativeEffect;
  exports["bindEffect"] = bindEffect;
  exports["monadEffect"] = monadEffect;
})(PS);

(function ($PS) {
  // Generated by purs version 0.12.5
  "use strict";

  $PS["Effect.Exception"] = $PS["Effect.Exception"] || {};
  var exports = $PS["Effect.Exception"];
  var $foreign = $PS["Effect.Exception"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Data_Either = $PS["Data.Either"];
  var Data_Functor = $PS["Data.Functor"];
  var Effect = $PS["Effect"];

  var $$try = function $$try(action) {
    return $foreign.catchException(function ($0) {
      return Control_Applicative.pure(Effect.applicativeEffect)(Data_Either.Left.create($0));
    })(Data_Functor.map(Effect.functorEffect)(Data_Either.Right.create)(action));
  };

  exports["try"] = $$try;
  exports["message"] = $foreign.message;
})(PS);

(function (exports) {
  "use strict";

  exports.unsafePerformEffect = function (f) {
    return f();
  };
})(PS["Effect.Unsafe"] = PS["Effect.Unsafe"] || {});

(function ($PS) {
  // Generated by purs version 0.12.5
  "use strict";

  $PS["Effect.Unsafe"] = $PS["Effect.Unsafe"] || {};
  var exports = $PS["Effect.Unsafe"];
  var $foreign = $PS["Effect.Unsafe"];
  exports["unsafePerformEffect"] = $foreign.unsafePerformEffect;
})(PS);

(function ($PS) {
  // Generated by purs version 0.12.5
  "use strict";

  $PS["Foreign.JSON"] = $PS["Foreign.JSON"] || {};
  var exports = $PS["Foreign.JSON"];
  var $foreign = $PS["Foreign.JSON"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Control_Monad_Except_Trans = $PS["Control.Monad.Except.Trans"];
  var Data_Bifunctor = $PS["Data.Bifunctor"];
  var Data_Either = $PS["Data.Either"];
  var Data_Identity = $PS["Data.Identity"];
  var Data_List_Types = $PS["Data.List.Types"];
  var Effect_Exception = $PS["Effect.Exception"];
  var Effect_Unsafe = $PS["Effect.Unsafe"];
  var Foreign = $PS["Foreign"];

  var parseJSON = function parseJSON($0) {
    return Control_Monad_Except_Trans.ExceptT(Data_Identity.Identity(Data_Bifunctor.lmap(Data_Either.bifunctorEither)(function ($1) {
      return Control_Applicative.pure(Data_List_Types.applicativeNonEmptyList)(Foreign.ForeignError.create(Effect_Exception.message($1)));
    })(Effect_Unsafe.unsafePerformEffect(Effect_Exception["try"](function () {
      return $foreign.parseJSONImpl($0);
    })))));
  };

  exports["parseJSON"] = parseJSON;
})(PS);

(function (exports) {
  /* globals exports, JSON */
  "use strict";

  exports.unsafeStringify = function (x) {
    return JSON.stringify(x);
  };
})(PS["Global.Unsafe"] = PS["Global.Unsafe"] || {});

(function ($PS) {
  // Generated by purs version 0.12.5
  "use strict";

  $PS["Global.Unsafe"] = $PS["Global.Unsafe"] || {};
  var exports = $PS["Global.Unsafe"];
  var $foreign = $PS["Global.Unsafe"];
  exports["unsafeStringify"] = $foreign.unsafeStringify;
})(PS);

(function ($PS) {
  // Generated by purs version 0.12.5
  "use strict";

  $PS["Foreign.Generic"] = $PS["Foreign.Generic"] || {};
  var exports = $PS["Foreign.Generic"];
  var Control_Bind = $PS["Control.Bind"];
  var Control_Monad_Except_Trans = $PS["Control.Monad.Except.Trans"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_Generic_Rep = $PS["Data.Generic.Rep"];
  var Data_Identity = $PS["Data.Identity"];
  var Foreign_Generic_Class = $PS["Foreign.Generic.Class"];
  var Foreign_JSON = $PS["Foreign.JSON"];
  var Global_Unsafe = $PS["Global.Unsafe"];

  var genericDecode = function genericDecode(dictGeneric) {
    return function (dictGenericDecode) {
      return function (opts) {
        return function ($12) {
          return Data_Functor.map(Control_Monad_Except_Trans.functorExceptT(Data_Identity.functorIdentity))(Data_Generic_Rep.to(dictGeneric))(Foreign_Generic_Class.decodeOpts(dictGenericDecode)(opts)($12));
        };
      };
    };
  };

  var genericDecodeJSON = function genericDecodeJSON(dictGeneric) {
    return function (dictGenericDecode) {
      return function (opts) {
        return Control_Bind.composeKleisliFlipped(Control_Monad_Except_Trans.bindExceptT(Data_Identity.monadIdentity))(genericDecode(dictGeneric)(dictGenericDecode)(opts))(Foreign_JSON.parseJSON);
      };
    };
  };

  var encodeJSON = function encodeJSON(dictEncode) {
    return function ($13) {
      return Global_Unsafe.unsafeStringify(Foreign_Generic_Class.encode(dictEncode)($13));
    };
  };

  exports["genericDecode"] = genericDecode;
  exports["encodeJSON"] = encodeJSON;
  exports["genericDecodeJSON"] = genericDecodeJSON;
})(PS);

(function ($PS) {
  // Generated by purs version 0.12.5
  "use strict";

  $PS["Types.Config"] = $PS["Types.Config"] || {};
  var exports = $PS["Types.Config"];
  var Data_Generic_Rep = $PS["Data.Generic.Rep"];
  var Data_Symbol = $PS["Data.Symbol"];
  var Foreign_Generic = $PS["Foreign.Generic"];
  var Foreign_Generic_Class = $PS["Foreign.Generic.Class"];
  var configSubtype = new Data_Generic_Rep.Generic(function (x) {
    return x;
  }, function (x) {
    return x;
  });
  var configSubtypeDecode = new Foreign_Generic_Class.Decode(Foreign_Generic.genericDecode(configSubtype)(Foreign_Generic_Class.genericDecodeConstructor(new Data_Symbol.IsSymbol(function () {
    return "ConfigSubtype";
  }))(Foreign_Generic_Class.genericDecodeArgsArgument(Foreign_Generic_Class.decodeWithOptionsRecord()(Foreign_Generic_Class.decodeRecordCons()(Foreign_Generic_Class.decodeRecordCons()(Foreign_Generic_Class.decodeRecordNil)(new Data_Symbol.IsSymbol(function () {
    return "subcategory";
  }))(Foreign_Generic_Class.decodeWithOptionsOther(Foreign_Generic_Class.arrayDecode(Foreign_Generic_Class.stringDecode)))())(new Data_Symbol.IsSymbol(function () {
    return "label";
  }))(Foreign_Generic_Class.decodeWithOptionsOther(Foreign_Generic_Class.arrayDecode(Foreign_Generic_Class.stringDecode)))())))(Foreign_Generic_Class.genericCountArgsArgument))({
    sumEncoding: Foreign_Generic_Class.defaultOptions.sumEncoding,
    unwrapSingleConstructors: true,
    unwrapSingleArguments: Foreign_Generic_Class.defaultOptions.unwrapSingleArguments,
    fieldTransform: Foreign_Generic_Class.defaultOptions.fieldTransform
  }));
  var config = new Data_Generic_Rep.Generic(function (x) {
    return x;
  }, function (x) {
    return x;
  });
  exports["config"] = config;
  exports["configSubtypeDecode"] = configSubtypeDecode;
  exports["configSubtype"] = configSubtype;
})(PS);

(function ($PS) {
  // Generated by purs version 0.12.5
  "use strict";

  $PS["Config"] = $PS["Config"] || {};
  var exports = $PS["Config"];
  var $foreign = $PS["Config"];
  var Control_Monad_Except = $PS["Control.Monad.Except"];
  var Data_Either = $PS["Data.Either"];
  var Data_Symbol = $PS["Data.Symbol"];
  var Foreign_Generic = $PS["Foreign.Generic"];
  var Foreign_Generic_Class = $PS["Foreign.Generic.Class"];
  var Types_Config = $PS["Types.Config"];
  var defaultConfig = {
    lifecycle: {
      subcategory: [],
      label: []
    },
    action: {
      subcategory: [],
      label: []
    },
    api_call: {
      subcategory: [],
      label: []
    },
    context: {
      subcategory: [],
      label: []
    },
    screen: {
      subcategory: [],
      label: []
    },
    service: [],
    acceptJsonValue: true
  };

  var getLogConfig = function __do() {
    var v = $foreign.getConfig();
    var response = Control_Monad_Except.runExcept(Foreign_Generic.genericDecodeJSON(Types_Config.config)(Foreign_Generic_Class.genericDecodeConstructor(new Data_Symbol.IsSymbol(function () {
      return "Config";
    }))(Foreign_Generic_Class.genericDecodeArgsArgument(Foreign_Generic_Class.decodeWithOptionsRecord()(Foreign_Generic_Class.decodeRecordCons()(Foreign_Generic_Class.decodeRecordCons()(Foreign_Generic_Class.decodeRecordCons()(Foreign_Generic_Class.decodeRecordCons()(Foreign_Generic_Class.decodeRecordCons()(Foreign_Generic_Class.decodeRecordCons()(Foreign_Generic_Class.decodeRecordCons()(Foreign_Generic_Class.decodeRecordNil)(new Data_Symbol.IsSymbol(function () {
      return "service";
    }))(Foreign_Generic_Class.decodeWithOptionsOther(Foreign_Generic_Class.arrayDecode(Foreign_Generic_Class.stringDecode)))())(new Data_Symbol.IsSymbol(function () {
      return "screen";
    }))(Foreign_Generic_Class.decodeWithOptionsOther(Types_Config.configSubtypeDecode))())(new Data_Symbol.IsSymbol(function () {
      return "lifecycle";
    }))(Foreign_Generic_Class.decodeWithOptionsOther(Types_Config.configSubtypeDecode))())(new Data_Symbol.IsSymbol(function () {
      return "context";
    }))(Foreign_Generic_Class.decodeWithOptionsOther(Types_Config.configSubtypeDecode))())(new Data_Symbol.IsSymbol(function () {
      return "api_call";
    }))(Foreign_Generic_Class.decodeWithOptionsOther(Types_Config.configSubtypeDecode))())(new Data_Symbol.IsSymbol(function () {
      return "action";
    }))(Foreign_Generic_Class.decodeWithOptionsOther(Types_Config.configSubtypeDecode))())(new Data_Symbol.IsSymbol(function () {
      return "acceptJsonValue";
    }))(Foreign_Generic_Class.decodeWithOptionsOther(Foreign_Generic_Class.booleanDecode))())))(Foreign_Generic_Class.genericCountArgsArgument))({
      sumEncoding: Foreign_Generic_Class.defaultOptions.sumEncoding,
      unwrapSingleConstructors: true,
      unwrapSingleArguments: Foreign_Generic_Class.defaultOptions.unwrapSingleArguments,
      fieldTransform: Foreign_Generic_Class.defaultOptions.fieldTransform
    })(v));

    if (response instanceof Data_Either.Right) {
      return response.value0;
    }

    ;

    if (response instanceof Data_Either.Left) {
      return defaultConfig;
    }

    ;
    throw new Error("Failed pattern match at Config (line 41, column 7 - line 43, column 21): " + [response.constructor.name]);
  };

  exports["defaultConfig"] = defaultConfig;
  exports["getLogConfig"] = getLogConfig;
})(PS);

(function (exports) {
  "use strict";

  exports.toLower = function (s) {
    return s.toLowerCase();
  };
})(PS["Data.String.Common"] = PS["Data.String.Common"] || {});

(function ($PS) {
  // Generated by purs version 0.12.5
  "use strict";

  $PS["Data.String.Common"] = $PS["Data.String.Common"] || {};
  var exports = $PS["Data.String.Common"];
  var $foreign = $PS["Data.String.Common"];
  exports["toLower"] = $foreign.toLower;
})(PS);

(function (exports) {
  /* globals setImmediate, clearImmediate, setTimeout, clearTimeout */

  /* jshint -W083, -W098, -W003 */
  "use strict";

  var Aff = function () {
    // A unique value for empty.
    var EMPTY = {};
    /*
    An awkward approximation. We elide evidence we would otherwise need in PS for
    efficiency sake.
    data Aff eff a
    = Pure a
    | Throw Error
    | Catch (Aff eff a) (Error -> Aff eff a)
    | Sync (Eff eff a)
    | Async ((Either Error a -> Eff eff Unit) -> Eff eff (Canceler eff))
    | forall b. Bind (Aff eff b) (b -> Aff eff a)
    | forall b. Bracket (Aff eff b) (BracketConditions eff b) (b -> Aff eff a)
    | forall b. Fork Boolean (Aff eff b) ?(Fiber eff b -> a)
    | Sequential (ParAff aff a)
    */

    var PURE = "Pure";
    var THROW = "Throw";
    var CATCH = "Catch";
    var SYNC = "Sync";
    var ASYNC = "Async";
    var BIND = "Bind";
    var BRACKET = "Bracket";
    var FORK = "Fork";
    var SEQ = "Sequential";
    /*
    data ParAff eff a
    = forall b. Map (b -> a) (ParAff eff b)
    | forall b. Apply (ParAff eff (b -> a)) (ParAff eff b)
    | Alt (ParAff eff a) (ParAff eff a)
    | ?Par (Aff eff a)
    */

    var MAP = "Map";
    var APPLY = "Apply";
    var ALT = "Alt"; // Various constructors used in interpretation

    var CONS = "Cons"; // Cons-list, for stacks

    var RESUME = "Resume"; // Continue indiscriminately

    var RELEASE = "Release"; // Continue with bracket finalizers

    var FINALIZER = "Finalizer"; // A non-interruptible effect

    var FINALIZED = "Finalized"; // Marker for finalization

    var FORKED = "Forked"; // Reference to a forked fiber, with resumption stack

    var FIBER = "Fiber"; // Actual fiber reference

    var THUNK = "Thunk"; // Primed effect, ready to invoke

    function Aff(tag, _1, _2, _3) {
      this.tag = tag;
      this._1 = _1;
      this._2 = _2;
      this._3 = _3;
    }

    function AffCtr(tag) {
      var fn = function fn(_1, _2, _3) {
        return new Aff(tag, _1, _2, _3);
      };

      fn.tag = tag;
      return fn;
    }

    function nonCanceler(error) {
      return new Aff(PURE, void 0);
    }

    function runEff(eff) {
      try {
        eff();
      } catch (error) {
        setTimeout(function () {
          throw error;
        }, 0);
      }
    }

    function runSync(left, right, eff) {
      try {
        return right(eff());
      } catch (error) {
        return left(error);
      }
    }

    function runAsync(left, eff, k) {
      try {
        return eff(k)();
      } catch (error) {
        k(left(error))();
        return nonCanceler;
      }
    }

    var Scheduler = function () {
      var limit = 1024;
      var size = 0;
      var ix = 0;
      var queue = new Array(limit);
      var draining = false;

      function drain() {
        var thunk;
        draining = true;

        while (size !== 0) {
          size--;
          thunk = queue[ix];
          queue[ix] = void 0;
          ix = (ix + 1) % limit;
          thunk();
        }

        draining = false;
      }

      return {
        isDraining: function isDraining() {
          return draining;
        },
        enqueue: function enqueue(cb) {
          var i, tmp;

          if (size === limit) {
            tmp = draining;
            drain();
            draining = tmp;
          }

          queue[(ix + size) % limit] = cb;
          size++;

          if (!draining) {
            drain();
          }
        }
      };
    }();

    function Supervisor(util) {
      var fibers = {};
      var fiberId = 0;
      var count = 0;
      return {
        register: function register(fiber) {
          var fid = fiberId++;
          fiber.onComplete({
            rethrow: true,
            handler: function handler(result) {
              return function () {
                count--;
                delete fibers[fid];
              };
            }
          })();
          fibers[fid] = fiber;
          count++;
        },
        isEmpty: function isEmpty() {
          return count === 0;
        },
        killAll: function killAll(killError, cb) {
          return function () {
            if (count === 0) {
              return cb();
            }

            var killCount = 0;
            var kills = {};

            function kill(fid) {
              kills[fid] = fibers[fid].kill(killError, function (result) {
                return function () {
                  delete kills[fid];
                  killCount--;

                  if (util.isLeft(result) && util.fromLeft(result)) {
                    setTimeout(function () {
                      throw util.fromLeft(result);
                    }, 0);
                  }

                  if (killCount === 0) {
                    cb();
                  }
                };
              })();
            }

            for (var k in fibers) {
              if (fibers.hasOwnProperty(k)) {
                killCount++;
                kill(k);
              }
            }

            fibers = {};
            fiberId = 0;
            count = 0;
            return function (error) {
              return new Aff(SYNC, function () {
                for (var k in kills) {
                  if (kills.hasOwnProperty(k)) {
                    kills[k]();
                  }
                }
              });
            };
          };
        }
      };
    } // Fiber state machine


    var SUSPENDED = 0; // Suspended, pending a join.

    var CONTINUE = 1; // Interpret the next instruction.

    var STEP_BIND = 2; // Apply the next bind.

    var STEP_RESULT = 3; // Handle potential failure from a result.

    var PENDING = 4; // An async effect is running.

    var RETURN = 5; // The current stack has returned.

    var COMPLETED = 6; // The entire fiber has completed.

    function Fiber(util, supervisor, aff) {
      // Monotonically increasing tick, increased on each asynchronous turn.
      var runTick = 0; // The current branch of the state machine.

      var status = SUSPENDED; // The current point of interest for the state machine branch.

      var step = aff; // Successful step

      var fail = null; // Failure step

      var interrupt = null; // Asynchronous interrupt
      // Stack of continuations for the current fiber.

      var bhead = null;
      var btail = null; // Stack of attempts and finalizers for error recovery. Every `Cons` is also
      // tagged with current `interrupt` state. We use this to track which items
      // should be ignored or evaluated as a result of a kill.

      var attempts = null; // A special state is needed for Bracket, because it cannot be killed. When
      // we enter a bracket acquisition or finalizer, we increment the counter,
      // and then decrement once complete.

      var bracketCount = 0; // Each join gets a new id so they can be revoked.

      var joinId = 0;
      var joins = null;
      var rethrow = true; // Each invocation of `run` requires a tick. When an asynchronous effect is
      // resolved, we must check that the local tick coincides with the fiber
      // tick before resuming. This prevents multiple async continuations from
      // accidentally resuming the same fiber. A common example may be invoking
      // the provided callback in `makeAff` more than once, but it may also be an
      // async effect resuming after the fiber was already cancelled.

      function _run(localRunTick) {
        var tmp, result, attempt;

        while (true) {
          tmp = null;
          result = null;
          attempt = null;

          switch (status) {
            case STEP_BIND:
              status = CONTINUE;

              try {
                step = bhead(step);

                if (btail === null) {
                  bhead = null;
                } else {
                  bhead = btail._1;
                  btail = btail._2;
                }
              } catch (e) {
                status = RETURN;
                fail = util.left(e);
                step = null;
              }

              break;

            case STEP_RESULT:
              if (util.isLeft(step)) {
                status = RETURN;
                fail = step;
                step = null;
              } else if (bhead === null) {
                status = RETURN;
              } else {
                status = STEP_BIND;
                step = util.fromRight(step);
              }

              break;

            case CONTINUE:
              switch (step.tag) {
                case BIND:
                  if (bhead) {
                    btail = new Aff(CONS, bhead, btail);
                  }

                  bhead = step._2;
                  status = CONTINUE;
                  step = step._1;
                  break;

                case PURE:
                  if (bhead === null) {
                    status = RETURN;
                    step = util.right(step._1);
                  } else {
                    status = STEP_BIND;
                    step = step._1;
                  }

                  break;

                case SYNC:
                  status = STEP_RESULT;
                  step = runSync(util.left, util.right, step._1);
                  break;

                case ASYNC:
                  status = PENDING;
                  step = runAsync(util.left, step._1, function (result) {
                    return function () {
                      if (runTick !== localRunTick) {
                        return;
                      }

                      runTick++;
                      Scheduler.enqueue(function () {
                        // It's possible to interrupt the fiber between enqueuing and
                        // resuming, so we need to check that the runTick is still
                        // valid.
                        if (runTick !== localRunTick + 1) {
                          return;
                        }

                        status = STEP_RESULT;
                        step = result;

                        _run(runTick);
                      });
                    };
                  });
                  return;

                case THROW:
                  status = RETURN;
                  fail = util.left(step._1);
                  step = null;
                  break;
                // Enqueue the Catch so that we can call the error handler later on
                // in case of an exception.

                case CATCH:
                  if (bhead === null) {
                    attempts = new Aff(CONS, step, attempts, interrupt);
                  } else {
                    attempts = new Aff(CONS, step, new Aff(CONS, new Aff(RESUME, bhead, btail), attempts, interrupt), interrupt);
                  }

                  bhead = null;
                  btail = null;
                  status = CONTINUE;
                  step = step._1;
                  break;
                // Enqueue the Bracket so that we can call the appropriate handlers
                // after resource acquisition.

                case BRACKET:
                  bracketCount++;

                  if (bhead === null) {
                    attempts = new Aff(CONS, step, attempts, interrupt);
                  } else {
                    attempts = new Aff(CONS, step, new Aff(CONS, new Aff(RESUME, bhead, btail), attempts, interrupt), interrupt);
                  }

                  bhead = null;
                  btail = null;
                  status = CONTINUE;
                  step = step._1;
                  break;

                case FORK:
                  status = STEP_RESULT;
                  tmp = Fiber(util, supervisor, step._2);

                  if (supervisor) {
                    supervisor.register(tmp);
                  }

                  if (step._1) {
                    tmp.run();
                  }

                  step = util.right(tmp);
                  break;

                case SEQ:
                  status = CONTINUE;
                  step = sequential(util, supervisor, step._1);
                  break;
              }

              break;

            case RETURN:
              bhead = null;
              btail = null; // If the current stack has returned, and we have no other stacks to
              // resume or finalizers to run, the fiber has halted and we can
              // invoke all join callbacks. Otherwise we need to resume.

              if (attempts === null) {
                status = COMPLETED;
                step = interrupt || fail || step;
              } else {
                // The interrupt status for the enqueued item.
                tmp = attempts._3;
                attempt = attempts._1;
                attempts = attempts._2;

                switch (attempt.tag) {
                  // We cannot recover from an unmasked interrupt. Otherwise we should
                  // continue stepping, or run the exception handler if an exception
                  // was raised.
                  case CATCH:
                    // We should compare the interrupt status as well because we
                    // only want it to apply if there has been an interrupt since
                    // enqueuing the catch.
                    if (interrupt && interrupt !== tmp && bracketCount === 0) {
                      status = RETURN;
                    } else if (fail) {
                      status = CONTINUE;
                      step = attempt._2(util.fromLeft(fail));
                      fail = null;
                    }

                    break;
                  // We cannot resume from an unmasked interrupt or exception.

                  case RESUME:
                    // As with Catch, we only want to ignore in the case of an
                    // interrupt since enqueing the item.
                    if (interrupt && interrupt !== tmp && bracketCount === 0 || fail) {
                      status = RETURN;
                    } else {
                      bhead = attempt._1;
                      btail = attempt._2;
                      status = STEP_BIND;
                      step = util.fromRight(step);
                    }

                    break;
                  // If we have a bracket, we should enqueue the handlers,
                  // and continue with the success branch only if the fiber has
                  // not been interrupted. If the bracket acquisition failed, we
                  // should not run either.

                  case BRACKET:
                    bracketCount--;

                    if (fail === null) {
                      result = util.fromRight(step); // We need to enqueue the Release with the same interrupt
                      // status as the Bracket that is initiating it.

                      attempts = new Aff(CONS, new Aff(RELEASE, attempt._2, result), attempts, tmp); // We should only coninue as long as the interrupt status has not changed or
                      // we are currently within a non-interruptable finalizer.

                      if (interrupt === tmp || bracketCount > 0) {
                        status = CONTINUE;
                        step = attempt._3(result);
                      }
                    }

                    break;
                  // Enqueue the appropriate handler. We increase the bracket count
                  // because it should not be cancelled.

                  case RELEASE:
                    attempts = new Aff(CONS, new Aff(FINALIZED, step, fail), attempts, interrupt);
                    status = CONTINUE; // It has only been killed if the interrupt status has changed
                    // since we enqueued the item, and the bracket count is 0. If the
                    // bracket count is non-zero then we are in a masked state so it's
                    // impossible to be killed.

                    if (interrupt && interrupt !== tmp && bracketCount === 0) {
                      step = attempt._1.killed(util.fromLeft(interrupt))(attempt._2);
                    } else if (fail) {
                      step = attempt._1.failed(util.fromLeft(fail))(attempt._2);
                    } else {
                      step = attempt._1.completed(util.fromRight(step))(attempt._2);
                    }

                    fail = null;
                    bracketCount++;
                    break;

                  case FINALIZER:
                    bracketCount++;
                    attempts = new Aff(CONS, new Aff(FINALIZED, step, fail), attempts, interrupt);
                    status = CONTINUE;
                    step = attempt._1;
                    break;

                  case FINALIZED:
                    bracketCount--;
                    status = RETURN;
                    step = attempt._1;
                    fail = attempt._2;
                    break;
                }
              }

              break;

            case COMPLETED:
              for (var k in joins) {
                if (joins.hasOwnProperty(k)) {
                  rethrow = rethrow && joins[k].rethrow;
                  runEff(joins[k].handler(step));
                }
              }

              joins = null; // If we have an interrupt and a fail, then the thread threw while
              // running finalizers. This should always rethrow in a fresh stack.

              if (interrupt && fail) {
                setTimeout(function () {
                  throw util.fromLeft(fail);
                }, 0); // If we have an unhandled exception, and no other fiber has joined
                // then we need to throw the exception in a fresh stack.
              } else if (util.isLeft(step) && rethrow) {
                setTimeout(function () {
                  // Guard on reathrow because a completely synchronous fiber can
                  // still have an observer which was added after-the-fact.
                  if (rethrow) {
                    throw util.fromLeft(step);
                  }
                }, 0);
              }

              return;

            case SUSPENDED:
              status = CONTINUE;
              break;

            case PENDING:
              return;
          }
        }
      }

      function onComplete(join) {
        return function () {
          if (status === COMPLETED) {
            rethrow = rethrow && join.rethrow;
            join.handler(step)();
            return function () {};
          }

          var jid = joinId++;
          joins = joins || {};
          joins[jid] = join;
          return function () {
            if (joins !== null) {
              delete joins[jid];
            }
          };
        };
      }

      function kill(error, cb) {
        return function () {
          if (status === COMPLETED) {
            cb(util.right(void 0))();
            return function () {};
          }

          var canceler = onComplete({
            rethrow: false,
            handler: function
              /* unused */
            handler() {
              return cb(util.right(void 0));
            }
          })();

          switch (status) {
            case SUSPENDED:
              interrupt = util.left(error);
              status = COMPLETED;
              step = interrupt;

              _run(runTick);

              break;

            case PENDING:
              if (interrupt === null) {
                interrupt = util.left(error);
              }

              if (bracketCount === 0) {
                if (status === PENDING) {
                  attempts = new Aff(CONS, new Aff(FINALIZER, step(error)), attempts, interrupt);
                }

                status = RETURN;
                step = null;
                fail = null;

                _run(++runTick);
              }

              break;

            default:
              if (interrupt === null) {
                interrupt = util.left(error);
              }

              if (bracketCount === 0) {
                status = RETURN;
                step = null;
                fail = null;
              }

          }

          return canceler;
        };
      }

      function join(cb) {
        return function () {
          var canceler = onComplete({
            rethrow: false,
            handler: cb
          })();

          if (status === SUSPENDED) {
            _run(runTick);
          }

          return canceler;
        };
      }

      return {
        kill: kill,
        join: join,
        onComplete: onComplete,
        isSuspended: function isSuspended() {
          return status === SUSPENDED;
        },
        run: function run() {
          if (status === SUSPENDED) {
            if (!Scheduler.isDraining()) {
              Scheduler.enqueue(function () {
                _run(runTick);
              });
            } else {
              _run(runTick);
            }
          }
        }
      };
    }

    function runPar(util, supervisor, par, cb) {
      // Table of all forked fibers.
      var fiberId = 0;
      var fibers = {}; // Table of currently running cancelers, as a product of `Alt` behavior.

      var killId = 0;
      var kills = {}; // Error used for early cancelation on Alt branches.

      var early = new Error("[ParAff] Early exit"); // Error used to kill the entire tree.

      var interrupt = null; // The root pointer of the tree.

      var root = EMPTY; // Walks a tree, invoking all the cancelers. Returns the table of pending
      // cancellation fibers.

      function kill(error, par, cb) {
        var step = par;
        var head = null;
        var tail = null;
        var count = 0;
        var kills = {};
        var tmp, kid;

        loop: while (true) {
          tmp = null;

          switch (step.tag) {
            case FORKED:
              if (step._3 === EMPTY) {
                tmp = fibers[step._1];
                kills[count++] = tmp.kill(error, function (result) {
                  return function () {
                    count--;

                    if (count === 0) {
                      cb(result)();
                    }
                  };
                });
              } // Terminal case.


              if (head === null) {
                break loop;
              } // Go down the right side of the tree.


              step = head._2;

              if (tail === null) {
                head = null;
              } else {
                head = tail._1;
                tail = tail._2;
              }

              break;

            case MAP:
              step = step._2;
              break;

            case APPLY:
            case ALT:
              if (head) {
                tail = new Aff(CONS, head, tail);
              }

              head = step;
              step = step._1;
              break;
          }
        }

        if (count === 0) {
          cb(util.right(void 0))();
        } else {
          // Run the cancelation effects. We alias `count` because it's mutable.
          kid = 0;
          tmp = count;

          for (; kid < tmp; kid++) {
            kills[kid] = kills[kid]();
          }
        }

        return kills;
      } // When a fiber resolves, we need to bubble back up the tree with the
      // result, computing the applicative nodes.


      function join(result, head, tail) {
        var fail, step, lhs, rhs, tmp, kid;

        if (util.isLeft(result)) {
          fail = result;
          step = null;
        } else {
          step = result;
          fail = null;
        }

        loop: while (true) {
          lhs = null;
          rhs = null;
          tmp = null;
          kid = null; // We should never continue if the entire tree has been interrupted.

          if (interrupt !== null) {
            return;
          } // We've made it all the way to the root of the tree, which means
          // the tree has fully evaluated.


          if (head === null) {
            cb(fail || step)();
            return;
          } // The tree has already been computed, so we shouldn't try to do it
          // again. This should never happen.
          // TODO: Remove this?


          if (head._3 !== EMPTY) {
            return;
          }

          switch (head.tag) {
            case MAP:
              if (fail === null) {
                head._3 = util.right(head._1(util.fromRight(step)));
                step = head._3;
              } else {
                head._3 = fail;
              }

              break;

            case APPLY:
              lhs = head._1._3;
              rhs = head._2._3; // If we have a failure we should kill the other side because we
              // can't possible yield a result anymore.

              if (fail) {
                head._3 = fail;
                tmp = true;
                kid = killId++;
                kills[kid] = kill(early, fail === lhs ? head._2 : head._1, function
                  /* unused */
                () {
                  return function () {
                    delete kills[kid];

                    if (tmp) {
                      tmp = false;
                    } else if (tail === null) {
                      join(fail, null, null);
                    } else {
                      join(fail, tail._1, tail._2);
                    }
                  };
                });

                if (tmp) {
                  tmp = false;
                  return;
                }
              } else if (lhs === EMPTY || rhs === EMPTY) {
                // We can only proceed if both sides have resolved.
                return;
              } else {
                step = util.right(util.fromRight(lhs)(util.fromRight(rhs)));
                head._3 = step;
              }

              break;

            case ALT:
              lhs = head._1._3;
              rhs = head._2._3; // We can only proceed if both have resolved or we have a success

              if (lhs === EMPTY && util.isLeft(rhs) || rhs === EMPTY && util.isLeft(lhs)) {
                return;
              } // If both sides resolve with an error, we should continue with the
              // first error


              if (lhs !== EMPTY && util.isLeft(lhs) && rhs !== EMPTY && util.isLeft(rhs)) {
                fail = step === lhs ? rhs : lhs;
                step = null;
                head._3 = fail;
              } else {
                head._3 = step;
                tmp = true;
                kid = killId++; // Once a side has resolved, we need to cancel the side that is still
                // pending before we can continue.

                kills[kid] = kill(early, step === lhs ? head._2 : head._1, function
                  /* unused */
                () {
                  return function () {
                    delete kills[kid];

                    if (tmp) {
                      tmp = false;
                    } else if (tail === null) {
                      join(step, null, null);
                    } else {
                      join(step, tail._1, tail._2);
                    }
                  };
                });

                if (tmp) {
                  tmp = false;
                  return;
                }
              }

              break;
          }

          if (tail === null) {
            head = null;
          } else {
            head = tail._1;
            tail = tail._2;
          }
        }
      }

      function resolve(fiber) {
        return function (result) {
          return function () {
            delete fibers[fiber._1];
            fiber._3 = result;
            join(result, fiber._2._1, fiber._2._2);
          };
        };
      } // Walks the applicative tree, substituting non-applicative nodes with
      // `FORKED` nodes. In this tree, all applicative nodes use the `_3` slot
      // as a mutable slot for memoization. In an unresolved state, the `_3`
      // slot is `EMPTY`. In the cases of `ALT` and `APPLY`, we always walk
      // the left side first, because both operations are left-associative. As
      // we `RETURN` from those branches, we then walk the right side.


      function run() {
        var status = CONTINUE;
        var step = par;
        var head = null;
        var tail = null;
        var tmp, fid;

        loop: while (true) {
          tmp = null;
          fid = null;

          switch (status) {
            case CONTINUE:
              switch (step.tag) {
                case MAP:
                  if (head) {
                    tail = new Aff(CONS, head, tail);
                  }

                  head = new Aff(MAP, step._1, EMPTY, EMPTY);
                  step = step._2;
                  break;

                case APPLY:
                  if (head) {
                    tail = new Aff(CONS, head, tail);
                  }

                  head = new Aff(APPLY, EMPTY, step._2, EMPTY);
                  step = step._1;
                  break;

                case ALT:
                  if (head) {
                    tail = new Aff(CONS, head, tail);
                  }

                  head = new Aff(ALT, EMPTY, step._2, EMPTY);
                  step = step._1;
                  break;

                default:
                  // When we hit a leaf value, we suspend the stack in the `FORKED`.
                  // When the fiber resolves, it can bubble back up the tree.
                  fid = fiberId++;
                  status = RETURN;
                  tmp = step;
                  step = new Aff(FORKED, fid, new Aff(CONS, head, tail), EMPTY);
                  tmp = Fiber(util, supervisor, tmp);
                  tmp.onComplete({
                    rethrow: false,
                    handler: resolve(step)
                  })();
                  fibers[fid] = tmp;

                  if (supervisor) {
                    supervisor.register(tmp);
                  }

              }

              break;

            case RETURN:
              // Terminal case, we are back at the root.
              if (head === null) {
                break loop;
              } // If we are done with the right side, we need to continue down the
              // left. Otherwise we should continue up the stack.


              if (head._1 === EMPTY) {
                head._1 = step;
                status = CONTINUE;
                step = head._2;
                head._2 = EMPTY;
              } else {
                head._2 = step;
                step = head;

                if (tail === null) {
                  head = null;
                } else {
                  head = tail._1;
                  tail = tail._2;
                }
              }

          }
        } // Keep a reference to the tree root so it can be cancelled.


        root = step;

        for (fid = 0; fid < fiberId; fid++) {
          fibers[fid].run();
        }
      } // Cancels the entire tree. If there are already subtrees being canceled,
      // we need to first cancel those joins. We will then add fresh joins for
      // all pending branches including those that were in the process of being
      // canceled.


      function cancel(error, cb) {
        interrupt = util.left(error);
        var innerKills;

        for (var kid in kills) {
          if (kills.hasOwnProperty(kid)) {
            innerKills = kills[kid];

            for (kid in innerKills) {
              if (innerKills.hasOwnProperty(kid)) {
                innerKills[kid]();
              }
            }
          }
        }

        kills = null;
        var newKills = kill(error, root, cb);
        return function (killError) {
          return new Aff(ASYNC, function (killCb) {
            return function () {
              for (var kid in newKills) {
                if (newKills.hasOwnProperty(kid)) {
                  newKills[kid]();
                }
              }

              return nonCanceler;
            };
          });
        };
      }

      run();
      return function (killError) {
        return new Aff(ASYNC, function (killCb) {
          return function () {
            return cancel(killError, killCb);
          };
        });
      };
    }

    function sequential(util, supervisor, par) {
      return new Aff(ASYNC, function (cb) {
        return function () {
          return runPar(util, supervisor, par, cb);
        };
      });
    }

    Aff.EMPTY = EMPTY;
    Aff.Pure = AffCtr(PURE);
    Aff.Throw = AffCtr(THROW);
    Aff.Catch = AffCtr(CATCH);
    Aff.Sync = AffCtr(SYNC);
    Aff.Async = AffCtr(ASYNC);
    Aff.Bind = AffCtr(BIND);
    Aff.Bracket = AffCtr(BRACKET);
    Aff.Fork = AffCtr(FORK);
    Aff.Seq = AffCtr(SEQ);
    Aff.ParMap = AffCtr(MAP);
    Aff.ParApply = AffCtr(APPLY);
    Aff.ParAlt = AffCtr(ALT);
    Aff.Fiber = Fiber;
    Aff.Supervisor = Supervisor;
    Aff.Scheduler = Scheduler;
    Aff.nonCanceler = nonCanceler;
    return Aff;
  }();

  exports._pure = Aff.Pure;

  exports._map = function (f) {
    return function (aff) {
      if (aff.tag === Aff.Pure.tag) {
        return Aff.Pure(f(aff._1));
      } else {
        return Aff.Bind(aff, function (value) {
          return Aff.Pure(f(value));
        });
      }
    };
  };

  exports._bind = function (aff) {
    return function (k) {
      return Aff.Bind(aff, k);
    };
  };

  exports._liftEffect = Aff.Sync;
  exports.makeAff = Aff.Async;

  exports._makeFiber = function (util, aff) {
    return function () {
      return Aff.Fiber(util, null, aff);
    };
  };

  exports._delay = function () {
    function setDelay(n, k) {
      if (n === 0 && typeof setImmediate !== "undefined") {
        return setImmediate(k);
      } else {
        return setTimeout(k, n);
      }
    }

    function clearDelay(n, t) {
      if (n === 0 && typeof clearImmediate !== "undefined") {
        return clearImmediate(t);
      } else {
        return clearTimeout(t);
      }
    }

    return function (right, ms) {
      return Aff.Async(function (cb) {
        return function () {
          var timer = setDelay(ms, cb(right()));
          return function () {
            return Aff.Sync(function () {
              return right(clearDelay(ms, timer));
            });
          };
        };
      });
    };
  }();
})(PS["Effect.Aff"] = PS["Effect.Aff"] || {});

(function ($PS) {
  // Generated by purs version 0.12.5
  "use strict";

  $PS["Effect.Class"] = $PS["Effect.Class"] || {};
  var exports = $PS["Effect.Class"];

  var MonadEffect = function MonadEffect(Monad0, liftEffect) {
    this.Monad0 = Monad0;
    this.liftEffect = liftEffect;
  };

  var liftEffect = function liftEffect(dict) {
    return dict.liftEffect;
  };

  exports["liftEffect"] = liftEffect;
  exports["MonadEffect"] = MonadEffect;
})(PS);

(function (exports) {
  "use strict"; // module Partial.Unsafe

  exports.unsafePartial = function (f) {
    return f();
  };
})(PS["Partial.Unsafe"] = PS["Partial.Unsafe"] || {});

(function (exports) {
  "use strict"; // module Partial

  exports.crashWith = function () {
    return function (msg) {
      throw new Error(msg);
    };
  };
})(PS["Partial"] = PS["Partial"] || {});

(function ($PS) {
  // Generated by purs version 0.12.5
  "use strict";

  $PS["Partial"] = $PS["Partial"] || {};
  var exports = $PS["Partial"];
  var $foreign = $PS["Partial"];
  exports["crashWith"] = $foreign.crashWith;
})(PS);

(function ($PS) {
  // Generated by purs version 0.12.5
  "use strict";

  $PS["Partial.Unsafe"] = $PS["Partial.Unsafe"] || {};
  var exports = $PS["Partial.Unsafe"];
  var $foreign = $PS["Partial.Unsafe"];
  var Partial = $PS["Partial"];

  var unsafeCrashWith = function unsafeCrashWith(msg) {
    return $foreign.unsafePartial(function (dictPartial) {
      return Partial.crashWith(dictPartial)(msg);
    });
  };

  exports["unsafeCrashWith"] = unsafeCrashWith;
})(PS);

(function ($PS) {
  // Generated by purs version 0.12.5
  "use strict";

  $PS["Effect.Aff"] = $PS["Effect.Aff"] || {};
  var exports = $PS["Effect.Aff"];
  var $foreign = $PS["Effect.Aff"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Control_Apply = $PS["Control.Apply"];
  var Control_Bind = $PS["Control.Bind"];
  var Control_Monad = $PS["Control.Monad"];
  var Data_Either = $PS["Data.Either"];
  var Data_Function = $PS["Data.Function"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_Unit = $PS["Data.Unit"];
  var Effect = $PS["Effect"];
  var Effect_Class = $PS["Effect.Class"];
  var Partial_Unsafe = $PS["Partial.Unsafe"];
  var functorAff = new Data_Functor.Functor($foreign["_map"]);

  var ffiUtil = function () {
    var unsafeFromRight = function unsafeFromRight(v) {
      if (v instanceof Data_Either.Right) {
        return v.value0;
      }

      ;

      if (v instanceof Data_Either.Left) {
        return Partial_Unsafe.unsafeCrashWith("unsafeFromRight: Left");
      }

      ;
      throw new Error("Failed pattern match at Effect.Aff (line 400, column 21 - line 402, column 31): " + [v.constructor.name]);
    };

    var unsafeFromLeft = function unsafeFromLeft(v) {
      if (v instanceof Data_Either.Left) {
        return v.value0;
      }

      ;

      if (v instanceof Data_Either.Right) {
        return Partial_Unsafe.unsafeCrashWith("unsafeFromLeft: Right");
      }

      ;
      throw new Error("Failed pattern match at Effect.Aff (line 395, column 20 - line 399, column 3): " + [v.constructor.name]);
    };

    var isLeft = function isLeft(v) {
      if (v instanceof Data_Either.Left) {
        return true;
      }

      ;

      if (v instanceof Data_Either.Right) {
        return false;
      }

      ;
      throw new Error("Failed pattern match at Effect.Aff (line 390, column 12 - line 392, column 20): " + [v.constructor.name]);
    };

    return {
      isLeft: isLeft,
      fromLeft: unsafeFromLeft,
      fromRight: unsafeFromRight,
      left: Data_Either.Left.create,
      right: Data_Either.Right.create
    };
  }();

  var makeFiber = function makeFiber(aff) {
    return $foreign["_makeFiber"](ffiUtil, aff);
  };

  var launchAff = function launchAff(aff) {
    return function __do() {
      var v = makeFiber(aff)();
      v.run();
      return v;
    };
  };

  var launchAff_ = function launchAff_($49) {
    return Data_Functor["void"](Effect.functorEffect)(launchAff($49));
  };

  var delay = function delay(v) {
    return $foreign["_delay"](Data_Either.Right.create, v);
  };

  var monadAff = new Control_Monad.Monad(function () {
    return applicativeAff;
  }, function () {
    return bindAff;
  });
  var bindAff = new Control_Bind.Bind(function () {
    return applyAff;
  }, $foreign["_bind"]);
  var applyAff = new Control_Apply.Apply(function () {
    return functorAff;
  }, Control_Monad.ap(monadAff));
  var applicativeAff = new Control_Applicative.Applicative(function () {
    return applyAff;
  }, $foreign["_pure"]);
  var monadEffectAff = new Effect_Class.MonadEffect(function () {
    return monadAff;
  }, $foreign["_liftEffect"]);
  var nonCanceler = Data_Function["const"](Control_Applicative.pure(applicativeAff)(Data_Unit.unit));
  exports["launchAff"] = launchAff;
  exports["launchAff_"] = launchAff_;
  exports["delay"] = delay;
  exports["nonCanceler"] = nonCanceler;
  exports["functorAff"] = functorAff;
  exports["applyAff"] = applyAff;
  exports["applicativeAff"] = applicativeAff;
  exports["bindAff"] = bindAff;
  exports["monadAff"] = monadAff;
  exports["monadEffectAff"] = monadEffectAff;
  exports["makeAff"] = $foreign.makeAff;
})(PS);

(function (exports) {
  var forcedBlackListedLabels = ["mystique", "mystique_error", "mystique_log", "mystique_log_error", "auto_fallback", "remote_asset_service", "session_info_error", "file_provider_service_error", "config_fetch", "shoulddownload_exception", "micro_app_boot_complete"];

  var loopedFunction = function loopedFunction() {
    return loopedFunction;
  };

  var dumpJsonKeys = function dumpJsonKeys(obj) {
    var object = {};

    for (key in obj) {
      var value = obj[key];
      if (_typeof(value) == "object" && value != null) object[key] = "status string";else object[key] = value;
    }

    return object;
  };

  exports.logger = function (expose) {
    return function (acceptJson) {
      return function (rootFgn) {
        return function (log_payload) {
          return function () {
            if (expose) {
              try {
                var obj = JSON.parse(log_payload);
                var merchantLog = {};
                merchantLog["category"] = obj["category"];
                merchantLog["subcategory"] = obj["subcategory"];
                merchantLog["label"] = obj["label"];
                merchantLog["value"] = acceptJson ? obj["value"] : dumpJsonKeys(obj["value"]);
                var merchantEvent = {};
                merchantEvent["event"] = "log_stream";
                merchantEvent["payload"] = merchantLog;
                JBridge.runInJuspayBrowser("onEvent", JSON.stringify(merchantEvent), null);
              } catch (e) {
                console.error(e);
              }
            }

            if (!window.sdkDetails) {
              try {
                window.sdkDetails = {
                  "godel_build_version": JBridge.getResourceByName("godel_build_version"),
                  "godel_version": JBridge.getResourceByName("godel_version"),
                  "hyper_sdk_version": JBridge.getResourceByName("hyper_sdk_version")
                };
              } catch (e) {
                // Ignored
                window.sdkDetails = {
                  "godel_build_version": "not available",
                  "godel_version": "not available",
                  "hyper_sdk_version": "not available"
                };
              }
            }

            if (JBridge.addToLogList && typeof JBridge.addToLogList == "function") {
              try {
                if (window.__payload && window.__payload.payload && (window.__payload.payload.clientId || window.__payload.payload.client_id)) {
                  var obj = JSON.parse(log_payload);

                  if (forcedBlackListedLabels.indexOf(obj.label) != -1) {
                    return loopedFunction;
                  }

                  obj.client_id = window.__payload.payload.clientId ? window.__payload.payload.clientId : window.__payload.payload.client_id;
                  obj.godel_build_version = window.sdkDetails.godel_build_version;
                  obj.godel_version = window.sdkDetails.godel_version;
                  obj.hyper_sdk_version = window.sdkDetails.hyper_sdk_version;
                  obj.tracker_version = window.tracker_version;

                  if (rootFgn != "" && rootFgn != "{}") {
                    var val = JSON.parse(rootFgn);

                    for (var key in val) {
                      if (val[key] != "") {
                        obj[key] = val[key];
                      }
                    }
                  }

                  log_payload = JSON.stringify(obj);
                } else if (_jbridge && _jbridge.getSessionAttribute) {
                  var payload = JSON.parse(_jbridge.getSessionAttribute("bundleParams", "{}"));

                  if (payload.payload && (payload.payload.clientId || payload.payload.client_id)) {
                    var obj = JSON.parse(log_payload);

                    if (forcedBlackListedLabels.indexOf(obj.label) != -1) {
                      return loopedFunction;
                    }

                    obj.client_id = payload.payload.clientId ? payload.payload.clientId : payload.payload.client_id;
                    obj.godel_build_version = window.sdkDetails.godel_build_version;
                    obj.godel_version = window.sdkDetails.godel_version;
                    obj.hyper_sdk_version = window.sdkDetails.hyper_sdk_version;
                    obj.tracker_version = window.tracker_version;

                    if (rootFgn != "" && rootFgn != "{}") {
                      var val = JSON.parse(rootFgn);

                      for (var key in val) {
                        if (val[key] != "") {
                          obj[key] = val[key];
                        }
                      }
                    }

                    log_payload = JSON.stringify(obj);
                  }
                }
              } catch (e) {// IGNORE THIS
              }

              JBridge.addToLogList(log_payload);
            } else {
              console.error("Your logs will not get pushed this session, JBridge.addToLogList is not available as an interface");
            }

            return loopedFunction;
          };
        };
      };
    };
  };

  var callLogVersion = function callLogVersion() {
    try {
      var logVersion = JBridge.getResourceByName("log_version");
      console.log("Log Version: " + logVersion);
      return logVersion;
    } catch (e) {
      console.log(e.message + ". Defaulting to Log Version: 1.0.0");
      return "1.0.0";
    }
  };

  exports.getLogVersion = callLogVersion();

  var callSDKVersion = function callSDKVersion() {
    try {
      var sdkVersion = "";

      if (window.__OS == "IOS") {
        sdkVersion = JBridge.getResourceByName("hyper_sdk_version");
      } else {
        var godelVersion = JBridge.getResourceByName("godel_version");
        var godelBuildVersion = JBridge.getResourceByName("godel_build_version");
        sdkVersion = godelVersion.concat("-", godelBuildVersion);
      }

      console.error("SDK Version: " + sdkVersion);
      return sdkVersion;
    } catch (e) {
      console.log(e.message, "Default SDK verion to be set");
      return "";
    }
  };

  exports.getSDKVersion = callSDKVersion;

  exports.requestPendingLogs = function (requestId) {
    return function (callack) {
      return function () {
        window.callbackMap[requestId] = function (value) {
          var response = JSON.parse(value);
          response.error = response.error || false;
          response.logs = response.logs || {};
          callack(response)();
        };

        JBridge.requestPendingLogs(JSON.stringify({
          requestId: requestId,
          sessionId: typeof JBridge.getSessionId == "function" ? JBridge.getSessionId() : ""
        }));
      };
    };
  };

  exports.sessioniseLogs = function (request) {
    return function () {
      request.sessionId = typeof JBridge.getSessionId == "function" ? JBridge.getSessionId() : "";
      return JBridge.sessioniseLogs(JSON.stringify(request));
    };
  };
})(PS["JBridge"] = PS["JBridge"] || {});

(function ($PS) {
  // Generated by purs version 0.12.5
  "use strict";

  $PS["JBridge"] = $PS["JBridge"] || {};
  var exports = $PS["JBridge"];
  var $foreign = $PS["JBridge"];
  exports["logger"] = $foreign.logger;
  exports["getLogVersion"] = $foreign.getLogVersion;
  exports["getSDKVersion"] = $foreign.getSDKVersion;
  exports["requestPendingLogs"] = $foreign.requestPendingLogs;
  exports["sessioniseLogs"] = $foreign.sessioniseLogs;
})(PS);

(function (exports) {
  /**
  * Known bug; Adds one extra X for cards with space or %20 formatting
  * Trade off taken to allow this bug; since it is not worth complicating 
  * the logic to fix this issue
  * 
  * Using Value with no space to extract 6 digits; else might occassionally send
  * 5 digits and one space; which is not helpful for analytics
  */
  var maskCardNumber = function maskCardNumber(value) {
    // Value with spaces
    var value = value.replace(/%20/g, " "); // Value without spaces; to be used to extract first 6 digits

    var vns = value.replace(/%20/g, ""); // Using value with space here in order to get X's 

    var xs = value.slice(6, value.length);
    var xs = xs.replace(/\d/g, "X");
    return vns.slice(0, 6) + xs;
  };

  var maskDigits = function maskDigits(value) {
    return value.replace(/\d/g, "X");
  };

  var config = {
    logBufferLimitMaxCount: 1000,
    whiteListedLabels: [],
    whiteListedLevels: [],
    whiteListedCategory: [],
    whiteListedSubcategory: [],
    forcedBlackListedLabels: ["mystique", "mystique_error", "mystique_log", "mystique_log_error", "auto_fallback", "remote_asset_service", "session_info_error", "file_provider_service_error", "config_fetch", "shoulddownload_exception", "micro_app_boot_complete"],
    blackListedLabels: ["staged_rollout", "is_sr_enabled"],
    errorLevels: ["exception", "critical", "error"]
  };
  /*
    Service name to version key config
  */

  var serviceNameToVersionKey = {
    "os": "in.juspay.hyperos",
    "hyperos": "in.juspay.hyperos",
    "ec": "in.juspay.ec",
    "upiintent": "in.juspay.upiintent",
    "dotp": "in.juspay.dotp",
    "hyperpay": "in.juspay.hyperpay",
    "hyperupi": "in.juspay.hyperupi",
    "vies": "in.juspay.vies",
    "flyer": "in.juspay.flyer",
    "inappupi": "in.juspay.inappupi"
  };
  /**
  * rule syntax
  * 1. match : checks if key matches rule. default replaces all rules
  * 2. replaceFunction : replaces content with sessionised log
  * 3. searchIn : keys in root to search to replace
  * 4. deepSearch : flag to search recursive
  * 5. attemptStringSearch : try to parse contents and log recursively for stringified JSONs
  * 6. matchKey : check for key to run replace function
  */

  var rules = [{
    match: /^((\d{4}[ ]?){4,5}|(\d{6}[ ]?){3,4})$/,
    replaceFunction: maskCardNumber,
    matchKey: ["cardNumber", "card_number", "card_num", "cardNum"],
    searchIn: ["value"],
    deepSearch: true,
    attemptStringSearch: true,
    log: false,
    "debugger": false
  }, {
    replaceFunction: parseInt,
    searchIn: ["sn"],
    deepSearch: false
  }, {
    replaceFunction: function replaceFunction(value) {
      if (typeof value == "string" && /^(true|false)$/.test(value)) {
        return "true" == value;
      }

      return value;
    },
    deepSearch: true,
    log: false,
    "debugger": false
  }, {
    replaceFunction: maskDigits,
    deepSearch: true,
    attemptStringSearch: true,
    searchIn: ["value"],
    matchKey: ["card_security_code", "cardSecurityCode", "cvv", "cvv_field", "cardExpMonth", "cardExpYear"],
    log: false,
    "debugger": false
  }, {
    match: /(cardNumber|card_number|card_num|cardNum)[^:=\d\w]*(:|=)[^:=\d\w]*((\d{4}([ ]|%20)?){4,5}|(\d{6}([ ]|%20)?){3,4})/g,
    replaceFunction: function replaceFunction(value) {
      return value.replace(/(cardNumber|card_number|card_num|cardNum)[^:\d\w]*(:|=)[^:\d\w]*((\d{4}([ ]|%20)?){4,5}|(\d{6}([ ]|%20)?){3,4})/g, function (cardNumber) {
        return cardNumber.replace(/((\d{4}([ ]|%20)?){4,5}|(\d{6}([ ]|%20)?){3,4})/g, maskCardNumber);
      });
    },
    searchIn: ["value"],
    deepSearch: true,
    attemptStringSearch: true,
    log: false,
    "debugger": false
  }, {
    match: /card_security_code=\d{3,4}/,
    replaceFunction: function replaceFunction(value) {
      return value.replace(/card_security_code=\d{3,4}/g, maskDigits);
    },
    searchIn: ["value"],
    deepSearch: true,
    attemptStringSearch: true,
    log: false,
    "debugger": false
  }, {
    match: /card_exp_year=\d{2,4}/,
    replaceFunction: function replaceFunction(value) {
      return value.replace(/card_exp_year=\d{2,4}/g, maskDigits);
    },
    searchIn: ["value"],
    deepSearch: true,
    attemptStringSearch: true,
    log: false,
    "debugger": false
  }, {
    match: /card_exp_month=\d{2}/,
    replaceFunction: function replaceFunction(value) {
      return value.replace(/card_exp_month=\d{2}/g, maskDigits);
    },
    searchIn: ["value"],
    deepSearch: true,
    attemptStringSearch: true,
    log: false,
    "debugger": false
  }, {
    match: /(ftp|http|https):\/\/(\w+:{0,1}\w*@)?(\S+)(:[0-9]+)?(\/|\/([\w#!:.?+=&%@!\-\/]))?/,
    replaceFunction: function replaceFunction(value) {
      return value.split('?')[0];
    },
    deepSearch: true,
    log: false,
    "debugger": false
  }, {
    match: /[@]+/,
    replaceFunction: function replaceFunction(value) {
      /**
      * operates on both vpa and email
      * converts ".... test@upi ..." to ".... xxxx@upi ..."
      * also converts ".... test@mail.com ..." to ".... xxxx@mail.com ..."
      */
      var result = value.replace(/[a-zA-Z0-9]([a-zA-Z0-9\\.\\-]{1,23})[a-zA-Z0-9]@[a-zA-Z0-9]{3,25}/g, function (match) {
        var a = match.split('@');
        return "x".repeat(a[0].length) + "@" + a[1];
      });
      return result;
    },
    deepSearch: true,
    log: false,
    "debugger": false
  }, {
    searchIn: ["value"],
    deepSearch: true,
    matchKey: ["mac_address"],
    "delete": true,
    log: false,
    "debugger": false,
    attemptStringSearch: true
  }]; // function goes reccurssive per rule
  // this needs to be changed to identify all points
  // where deep parse is required and unify those rules
  // as much as possible

  var runRules = function runRules(logLine, applicableRules, skipSearchIn) {
    var isString = typeof logLine == "string";
    logLine = isString ? JSON.parse(logLine) : logLine;
    applicableRules.forEach(function (rule) {
      keys = skipSearchIn ? Object.keys(logLine) : rule.searchIn || Object.keys(logLine);
      keys.forEach(function (key) {
        if (rule["debugger"]) {
          debugger;
        }

        if (rule.log) {
          console.log("In rule", rule, "with logline ", logLine[key]);
        }

        if (!logLine[key]) {
          return;
        } else if (_typeof(logLine[key]) == "object" && rule.deepSearch) {
          logLine[key] = runRules(logLine[key], [rule], true);
        } else if (!rule.matchKey || rule.matchKey.indexOf(key) != -1) {
          if (!rule.match || rule.match.test(logLine[key])) {
            logLine[key] = typeof rule.replaceFunction == "function" ? rule.replaceFunction(logLine[key]) : logLine[key];

            if (rule["delete"]) {
              delete logLine[key];
            }
          }
        }

        if (typeof logLine[key] == "string" && rule.attemptStringSearch && rule.deepSearch) {
          try {
            var stringLogLine = logLine[key];

            while (typeof stringLogLine == "string") {
              stringLogLine = JSON.parse(logLine[key]);
            }

            if (_typeof(stringLogLine) == "object") {
              logLine[key] = runRules(logLine[key], [rule], true);
            }
          } catch (e) {//SKIP NOT REQUIRED
          }
        }
      });
    });
    return isString ? JSON.stringify(logLine) : logLine;
  };

  var shouldStoreLogInBuffer = function shouldStoreLogInBuffer(log) {
    var whiteListedLabels = config.whiteListedLabels ? config.whiteListedLabels : [];
    var whiteListedLevels = config.whiteListedLevels ? config.whiteListedLevels : [];
    var whiteListedCategory = config.whiteListedCategory ? config.whiteListedCategory : [];
    var whiteListedSubcategory = config.whiteListedSubcategory ? config.whiteListedSubcategory : [];

    if (log && (whiteListedLabels.indexOf(log.label) != -1 || whiteListedLevels.indexOf(log.level) != -1 || whiteListedCategory.indexOf(log.category) != -1 || whiteListedSubcategory.indexOf(log.subcategory) != -1)) {
      return false;
    }

    return true;
  };

  var shouldBlackListLog = function shouldBlackListLog(log) {
    if (log == null || log == undefined) {
      return true;
    }

    if (config.forcedBlackListedLabels.indexOf(log.label) != -1 || config.blackListedLabels.indexOf(log.label) != -1 && config.errorLevels.indexOf(log.level) == -1) {
      return true;
    }

    return false;
  };

  var hasInitiateFailed = function hasInitiateFailed(log) {
    return _typeof(log) == "object" && log.label == "initiate" && _typeof(log.value) == "object" && _typeof(log.value.ended) == "object" && log.value.ended.error == true;
  };

  var addMappVersionAndMappConfigVersion = function addMappVersionAndMappConfigVersion(log) {
    try {
      if (log == null || log == undefined) {
        return log;
      }

      if (window.version && serviceNameToVersionKey && _typeof(serviceNameToVersionKey) == "object") {
        var versionConfig = window.version[serviceNameToVersionKey[log.service]];

        if (versionConfig) {
          if (log.mapp_version == null || log.mapp_version == undefined) log.mapp_version = versionConfig.app ? versionConfig.app : "NA";
          if (log.mapp_config_version == null || log.mapp_config_version == undefined) log.mapp_config_version = versionConfig.config ? versionConfig.config : "NA";
        }
      }
    } catch (e) {
      console.log("Error while adding mapp and mapp_config_version");
    }

    try {
      if (window.version && serviceNameToVersionKey && _typeof(serviceNameToVersionKey) == "object") {
        var blackListedServices = ["hyperos"];

        if (log.label == "network_call") {
          for (var serviceName in serviceNameToVersionKey) {
            var versionConfig = window.version[serviceNameToVersionKey[serviceName]];

            if (blackListedServices.indexOf(serviceName) == -1 && versionConfig) {
              log[serviceName + "_mapp_version"] = versionConfig.app ? versionConfig.app : "NA";
              log[serviceName + "_mapp_config_version"] = versionConfig.config ? versionConfig.config : "NA";
            }
          }
        }
      }
    } catch (e) {
      console.log("Error while adding mapp and mapp_config_version in network call");
    }

    return log;
  };

  exports.generateRequestId = function () {
    function s4() {
      return Math.floor((1 + Math.random()) * 0x10000).toString(16).substring(1);
    }

    return s4() + s4() + '-' + s4() + '-' + s4() + '-' + s4() + '-' + s4() + s4() + s4();
  };

  exports.shouldStoreInBuffer = function () {
    return window.shouldBufferLogs == true;
  };

  exports.fetchAllLogsAndClearLogBuffer = function (logs) {
    return function () {
      try {
        var finalLogs = [];

        for (var i = 0; i < logs.length; i++) {
          var uLog = addMappVersionAndMappConfigVersion(logs[i]);

          if (!shouldBlackListLog(uLog)) {
            finalLogs.push(uLog);
          }
        }

        if (window.logBufferWithLimit && window.logBufferWithLimit.length) {
          finalLogs = window.logBufferWithLimit.concat(finalLogs);
        }

        window.logBufferWithLimit = [];
        return finalLogs;
      } catch (e) {
        console.log("Error in fetching and clearing logs from buffer");
        return logs;
      }
    };
  };

  exports.bufferLogs = function (logs) {
    return function () {
      try {
        var logsToBuffer = [];
        var logsToSendToSdk = [];
        var initiateFailed = false; // Filtering the logs that are required to be pushed to SDK even if process did not start

        for (var i = 0; i < logs.length; i++) {
          if (hasInitiateFailed(logs[i])) {
            initiateFailed = true;
          }

          if (!shouldBlackListLog(logs[i])) {
            var uLog = addMappVersionAndMappConfigVersion(logs[i]);

            if (shouldStoreLogInBuffer(uLog)) {
              logsToBuffer.push(uLog);
            } else {
              logsToSendToSdk.push(uLog);
            }
          }
        }

        if (initiateFailed) {
          window.shouldBufferLogs = false;
          logsToSendToSdk = logsToSendToSdk.concat(logsToBuffer);
          logsToBuffer = [];

          if (window.logBufferWithLimit && window.logBufferWithLimit > 0) {
            logsToSendToSdk = window.logBufferWithLimit.concat(logsToSendToSdk);
          }

          window.logBufferWithLimit = [];
          return logsToSendToSdk;
        }

        if (window.logBufferWithLimit) {
          // If the number of log lines in buffer exceeds logBufferLimitMaxCount, no more logs will be added to buffer  
          if (window.logBufferWithLimit.length + logsToBuffer.length <= config.logBufferLimitMaxCount) {
            window.logBufferWithLimit = window.logBufferWithLimit.concat(logsToBuffer);
          }
        } else {
          window.logBufferWithLimit = [];
          window.logBufferWithLimit = window.logBufferWithLimit.concat(logsToBuffer);
        }

        return logsToSendToSdk;
      } catch (e) {
        console.log("Error Caching Logs");
        return logs;
      }
    };
  };
})(PS["Sessioniser"] = PS["Sessioniser"] || {});

(function ($PS) {
  // Generated by purs version 0.12.5
  "use strict";

  $PS["Sessioniser"] = $PS["Sessioniser"] || {};
  var exports = $PS["Sessioniser"];
  var $foreign = $PS["Sessioniser"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Control_Bind = $PS["Control.Bind"];
  var Data_Either = $PS["Data.Either"];
  var Data_Unit = $PS["Data.Unit"];
  var Effect_Aff = $PS["Effect.Aff"];
  var Effect_Class = $PS["Effect.Class"];
  var JBridge = $PS["JBridge"];
  var sessioniserAlter = Control_Bind.bind(Effect_Aff.bindAff)(Effect_Class.liftEffect(Effect_Aff.monadEffectAff)($foreign.generateRequestId))(function (v) {
    return Control_Bind.bind(Effect_Aff.bindAff)(Effect_Aff.makeAff(function (cb) {
      return function __do() {
        JBridge.requestPendingLogs(v)(function ($19) {
          return cb(Data_Either.Right.create($19));
        })();
        return Effect_Aff.nonCanceler;
      };
    }))(function (v1) {
      var $10 = !v1.error;

      if ($10) {
        return Control_Bind.bind(Effect_Aff.bindAff)(Effect_Class.liftEffect(Effect_Aff.monadEffectAff)($foreign.shouldStoreInBuffer))(function (v2) {
          if (v2) {
            return Control_Bind.bind(Effect_Aff.bindAff)(Effect_Class.liftEffect(Effect_Aff.monadEffectAff)($foreign.bufferLogs(v1.logs)))(function (v3) {
              return Effect_Class.liftEffect(Effect_Aff.monadEffectAff)(JBridge.sessioniseLogs({
                requestId: v,
                logs: v3
              }));
            });
          }

          ;
          return Control_Bind.bind(Effect_Aff.bindAff)(Effect_Class.liftEffect(Effect_Aff.monadEffectAff)($foreign.fetchAllLogsAndClearLogBuffer(v1.logs)))(function (v3) {
            return Effect_Class.liftEffect(Effect_Aff.monadEffectAff)(JBridge.sessioniseLogs({
              requestId: v,
              logs: v3
            }));
          });
        });
      }

      ;
      return Control_Applicative.pure(Effect_Aff.applicativeAff)(Data_Unit.unit);
    });
  });
  var startAlter = Control_Bind.discard(Control_Bind.discardUnit)(Effect_Aff.bindAff)(sessioniserAlter)(function () {
    return Control_Bind.discard(Control_Bind.discardUnit)(Effect_Aff.bindAff)(Effect_Aff.delay(5000.0))(function () {
      return startAlter;
    });
  });
  exports["startAlter"] = startAlter;
  exports["sessioniserAlter"] = sessioniserAlter;
})(PS);

(function (exports) {
  exports.getTime = Date.now;

  exports.getTimeRFC = function () {
    return new Date().toISOString();
  };

  exports.timeToRFC = function (t) {
    return new Date(t).toISOString();
  };

  exports.getId = function () {
    window.id = window.id || 1;
    return window.id;
  };

  exports.getScreenEntryId = function (screenName) {
    return function () {
      window.id = window.id || 1;
      window[screenName] = window[screenName] ? window[screenName] : window.id;
      return window[screenName];
    };
  };

  exports.getScreenExitId = function (screenName) {
    return function () {
      var res = window[screenName];
      delete window[screenName];
      return res;
    };
  };

  exports.incId = function () {
    window.id = window.id || 0;
    window.id++;
  };

  exports.getValue = function (key) {
    return function (value) {
      var obj = {};
      obj[key] = value;
      return obj;
    };
  };

  exports.pushLogOnTop = function (value_payload) {
    return function (log_payload) {
      try {
        var obj = JSON.parse(log_payload);

        for (var key in value_payload) {
          obj[key] = value_payload[key];
        }

        log_payload = JSON.stringify(obj);
      } catch (e) {
        console.warn("merge failed, returning without value", e);
      }

      return log_payload;
    };
  };

  exports.os = function () {
    if (window.__OS) {
      return window.__OS.toUpperCase();
    }

    var getOS = function getOS() {
      var userAgent = navigator.userAgent;
      var os = "WEB";

      if (userAgent.indexOf("Android") != -1 && userAgent.indexOf("Version") != -1) {
        os = "ANDROID";
      } else if ((userAgent.indexOf("iPhone") != -1 || userAgent.indexOf("iPad") != -1 || userAgent.indexOf("Macintosh") != -1) && userAgent.indexOf("Version") == -1) {
        os = "IOS";
      }

      return typeof window.__OS == "string" ? window.__OS.toUpperCase() : os;
    };

    return getOS();
  };
})(PS["Utils"] = PS["Utils"] || {});

(function ($PS) {
  // Generated by purs version 0.12.5
  "use strict";

  $PS["Utils"] = $PS["Utils"] || {};
  var exports = $PS["Utils"];
  var $foreign = $PS["Utils"];
  var Config = $PS["Config"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Control_Bind = $PS["Control.Bind"];
  var Data_Array = $PS["Data.Array"];
  var Data_Eq = $PS["Data.Eq"];
  var Data_Foldable = $PS["Data.Foldable"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_Unit = $PS["Data.Unit"];
  var Effect = $PS["Effect"];
  var Foreign_Generic = $PS["Foreign.Generic"];
  var Foreign_Generic_Class = $PS["Foreign.Generic.Class"];
  var JBridge = $PS["JBridge"];

  var stringifyLogs = function stringifyLogs(dictEncode) {
    return Foreign_Generic.encodeJSON(dictEncode);
  };

  var matchService = function matchService(service) {
    return function (supportedServices) {
      return Data_Maybe.isJust(Data_Array.elemIndex(Data_Eq.eqString)(service)(supportedServices));
    };
  };

  var match = function match(subc) {
    return function (label) {
      return function (v) {
        return Data_Maybe.isJust(Data_Array.elemIndex(Data_Eq.eqString)(subc)(v.subcategory)) || Data_Maybe.isJust(Data_Array.elemIndex(Data_Eq.eqString)(label)(v.label));
      };
    };
  };

  var logContext = function logContext(dictEncode) {
    return function (toExpose) {
      return function (acceptJson) {
        return function (valueP) {
          return function (rootFgn) {
            return function ($84) {
              return JBridge.logger(toExpose)(acceptJson)(rootFgn)($foreign.pushLogOnTop(valueP)(stringifyLogs(dictEncode)($84)));
            };
          };
        };
      };
    };
  };

  var log = function log(dictEncode) {
    return function (toExpose) {
      return function (acceptJson) {
        return function (rootFgn) {
          return function ($85) {
            return JBridge.logger(toExpose)(acceptJson)(rootFgn)(stringifyLogs(dictEncode)($85));
          };
        };
      };
    };
  };

  var incrementId = function incrementId(value) {
    return function __do() {
      var v = $foreign.incId();
      return value();
    };
  };

  var getNewSDKVersions = ["2.0.0-rc.74", "2.0.0-rc.85", "2.0.0-rc.99", "2.0.1-rc.15", "2.0.1-rc.23"];

  var expose = function expose(v) {
    return function (v1) {
      return function (v2) {
        return function (v3) {
          if (v === "lifecycle") {
            return function __do() {
              var v4 = Config.getLogConfig();
              return match(v1)(v2)(v4.lifecycle) && matchService(v3)(v4.service);
            };
          }

          ;

          if (v === "context") {
            return function __do() {
              var v4 = Config.getLogConfig();
              return match(v1)(v2)(v4.context) && matchService(v3)(v4.service);
            };
          }

          ;

          if (v === "api_call") {
            return function __do() {
              var v4 = Config.getLogConfig();
              return match(v1)(v2)(v4.api_call) && matchService(v3)(v4.service);
            };
          }

          ;

          if (v === "action") {
            return function __do() {
              var v4 = Config.getLogConfig();
              return match(v1)(v2)(v4.action) && matchService(v3)(v4.service);
            };
          }

          ;

          if (v === "screen") {
            return function __do() {
              var v4 = Config.getLogConfig();
              return match(v1)(v2)(v4.screen) && matchService(v3)(v4.service);
            };
          }

          ;
          return Control_Applicative.pure(Effect.applicativeEffect)(false);
        };
      };
    };
  };

  var downgradeLog = function () {
    var sdkVersion = JBridge.getSDKVersion(Data_Unit.unit);
    var $52 = Data_Foldable.elem(Data_Foldable.foldableArray)(Data_Eq.eqString)(sdkVersion)(getNewSDKVersions);

    if ($52) {
      return false;
    }

    ;
    return JBridge.getLogVersion === "1.0.0";
  }();

  var addTimeStamp = function addTimeStamp(v) {
    return function (value) {
      if (v) {
        return Data_Functor.mapFlipped(Effect.functorEffect)($foreign.getTimeRFC)(function (a) {
          var $55 = {};

          for (var $56 in value) {
            if ({}.hasOwnProperty.call(value, $56)) {
              $55[$56] = value[$56];
            }

            ;
          }

          ;
          $55.at = a;
          return $55;
        });
      }

      ;

      if (!v) {
        return Data_Functor.mapFlipped(Effect.functorEffect)($foreign.getTime)(function (a) {
          var $58 = {};

          for (var $59 in value) {
            if ({}.hasOwnProperty.call(value, $59)) {
              $58[$59] = value[$59];
            }

            ;
          }

          ;
          $58.at = a;
          return $58;
        });
      }

      ;
      throw new Error("Failed pattern match at Utils (line 38, column 1 - line 38, column 69): " + [v.constructor.name, value.constructor.name]);
    };
  };

  var addScreenExitId = function addScreenExitId(screenName) {
    return function (value) {
      return Data_Functor.mapFlipped(Effect.functorEffect)($foreign.getScreenExitId(screenName))(function (a) {
        var $61 = {};

        for (var $62 in value) {
          if ({}.hasOwnProperty.call(value, $62)) {
            $61[$62] = value[$62];
          }

          ;
        }

        ;
        $61.id = a;
        return $61;
      });
    };
  };

  var addScreenEntryId = function addScreenEntryId(screenName) {
    return function (value) {
      return Data_Functor.mapFlipped(Effect.functorEffect)($foreign.getScreenEntryId(screenName))(function (a) {
        var $64 = {};

        for (var $65 in value) {
          if ({}.hasOwnProperty.call(value, $65)) {
            $64[$65] = value[$65];
          }

          ;
        }

        ;
        $64.id = a;
        return $64;
      });
    };
  };

  var addId = function addId(value) {
    return Data_Functor.mapFlipped(Effect.functorEffect)($foreign.getId)(function (a) {
      var $67 = {};

      for (var $68 in value) {
        if ({}.hasOwnProperty.call(value, $68)) {
          $67[$68] = value[$68];
        }

        ;
      }

      ;
      $67.id = a;
      return $67;
    });
  };

  var addAndLogWithJson = function addAndLogWithJson(rfcFormat) {
    return function (category) {
      return function (subcategory) {
        return function (label) {
          return function (service) {
            return function (rootFgn) {
              return function (dictEncode) {
                return function (logline) {
                  return function __do() {
                    var v = Data_Functor.map(Effect.functorEffect)(function ($86) {
                      return function (v) {
                        return v && rfcFormat;
                      }(!("IOS" === $86));
                    })($foreign.os)();
                    var v1 = expose(category)(subcategory)(label)(service)();

                    var v2 = function __do() {
                      var v2 = Config.getLogConfig();
                      return v2.acceptJsonValue;
                    }();

                    return Control_Bind.composeKleisli(Effect.bindEffect)(addTimeStamp(v))(log(dictEncode)(v1)(v2)(Foreign_Generic.encodeJSON(Foreign_Generic_Class.foreignEncode)(rootFgn)))(logline)();
                  };
                };
              };
            };
          };
        };
      };
    };
  };

  var addAndLogContextWithJson = function addAndLogContextWithJson(rfcFormat) {
    return function (category) {
      return function (subcategory) {
        return function (label) {
          return function (service) {
            return function (value) {
              return function (rootFgn) {
                return function (dictEncode) {
                  return function (logline) {
                    return function __do() {
                      var v = expose(category)(subcategory)(label)(service)();

                      var v1 = function __do() {
                        var v1 = Config.getLogConfig();
                        return v1.acceptJsonValue;
                      }();

                      return Control_Bind.composeKleisli(Effect.bindEffect)(addTimeStamp(rfcFormat))(logContext(dictEncode)(v)(v1)(value)(Foreign_Generic.encodeJSON(Foreign_Generic_Class.foreignEncode)(rootFgn)))(logline)();
                    };
                  };
                };
              };
            };
          };
        };
      };
    };
  };

  var addAndLogContext = function addAndLogContext(rfcFormat) {
    return function (category) {
      return function (subcategory) {
        return function (label) {
          return function (service) {
            return function (value) {
              return function (dictEncode) {
                return function (logline) {
                  return function __do() {
                    var v = expose(category)(subcategory)(label)(service)();

                    var v1 = function __do() {
                      var v1 = Config.getLogConfig();
                      return v1.acceptJsonValue;
                    }();

                    return Control_Bind.composeKleisli(Effect.bindEffect)(addTimeStamp(rfcFormat))(logContext(dictEncode)(v)(v1)(value)(""))(logline)();
                  };
                };
              };
            };
          };
        };
      };
    };
  };

  var addAndLog = function addAndLog(rfcFormat) {
    return function (category) {
      return function (subcategory) {
        return function (label) {
          return function (service) {
            return function (dictEncode) {
              return function (logline) {
                return function __do() {
                  var v = Data_Functor.map(Effect.functorEffect)(function ($87) {
                    return function (v) {
                      return v && rfcFormat;
                    }(!("IOS" === $87));
                  })($foreign.os)();
                  var v1 = expose(category)(subcategory)(label)(service)();

                  var v2 = function __do() {
                    var v2 = Config.getLogConfig();
                    return v2.acceptJsonValue;
                  }();

                  return Control_Bind.composeKleisli(Effect.bindEffect)(addTimeStamp(v))(log(dictEncode)(v1)(v2)(""))(logline)();
                };
              };
            };
          };
        };
      };
    };
  };

  exports["stringifyLogs"] = stringifyLogs;
  exports["log"] = log;
  exports["logContext"] = logContext;
  exports["addTimeStamp"] = addTimeStamp;
  exports["addId"] = addId;
  exports["addScreenEntryId"] = addScreenEntryId;
  exports["addScreenExitId"] = addScreenExitId;
  exports["incrementId"] = incrementId;
  exports["addAndLog"] = addAndLog;
  exports["addAndLogContext"] = addAndLogContext;
  exports["downgradeLog"] = downgradeLog;
  exports["expose"] = expose;
  exports["match"] = match;
  exports["matchService"] = matchService;
  exports["getNewSDKVersions"] = getNewSDKVersions;
  exports["addAndLogWithJson"] = addAndLogWithJson;
  exports["addAndLogContextWithJson"] = addAndLogContextWithJson;
  exports["timeToRFC"] = $foreign.timeToRFC;
  exports["getScreenEntryId"] = $foreign.getScreenEntryId;
  exports["getScreenExitId"] = $foreign.getScreenExitId;
  exports["getValue"] = $foreign.getValue;
})(PS);

(function ($PS) {
  // Generated by purs version 0.12.5
  "use strict";

  $PS["Types.CategoryLog"] = $PS["Types.CategoryLog"] || {};
  var exports = $PS["Types.CategoryLog"];
  var Data_String_Common = $PS["Data.String.Common"];
  var Foreign_Generic_Class = $PS["Foreign.Generic.Class"];
  var JBridge = $PS["JBridge"];
  var Utils = $PS["Utils"];

  var LIFECYCLE = function () {
    function LIFECYCLE() {}

    ;
    LIFECYCLE.value = new LIFECYCLE();
    return LIFECYCLE;
  }();

  var ACTION = function () {
    function ACTION() {}

    ;
    ACTION.value = new ACTION();
    return ACTION;
  }();

  var API_CALL = function () {
    function API_CALL() {}

    ;
    API_CALL.value = new API_CALL();
    return API_CALL;
  }();

  var EXCEPTION = function () {
    function EXCEPTION() {}

    ;
    EXCEPTION.value = new EXCEPTION();
    return EXCEPTION;
  }();

  var SCREEN = function () {
    function SCREEN() {}

    ;
    SCREEN.value = new SCREEN();
    return SCREEN;
  }();

  var CONTEXT = function () {
    function CONTEXT() {}

    ;
    CONTEXT.value = new CONTEXT();
    return CONTEXT;
  }();

  var stringToCategory = function stringToCategory(v) {
    if (v === "lifecycle") {
      return LIFECYCLE.value;
    }

    ;

    if (v === "action") {
      return ACTION.value;
    }

    ;

    if (v === "api_call") {
      return API_CALL.value;
    }

    ;

    if (v === "exception") {
      return EXCEPTION.value;
    }

    ;

    if (v === "screen") {
      return SCREEN.value;
    }

    ;

    if (v === "context") {
      return CONTEXT.value;
    }

    ;
    return LIFECYCLE.value;
  };

  var encodeCategory = new Foreign_Generic_Class.Encode(function (v) {
    if (v instanceof LIFECYCLE) {
      return Foreign_Generic_Class.encode(Foreign_Generic_Class.stringEncode)("lifecycle");
    }

    ;

    if (v instanceof ACTION) {
      return Foreign_Generic_Class.encode(Foreign_Generic_Class.stringEncode)("action");
    }

    ;

    if (v instanceof API_CALL) {
      return Foreign_Generic_Class.encode(Foreign_Generic_Class.stringEncode)("api_call");
    }

    ;

    if (v instanceof EXCEPTION) {
      return Foreign_Generic_Class.encode(Foreign_Generic_Class.stringEncode)("exception");
    }

    ;

    if (v instanceof SCREEN) {
      return Foreign_Generic_Class.encode(Foreign_Generic_Class.stringEncode)("screen");
    }

    ;

    if (v instanceof CONTEXT) {
      return Foreign_Generic_Class.encode(Foreign_Generic_Class.stringEncode)("context");
    }

    ;
    throw new Error("Failed pattern match at Types.CategoryLog (line 18, column 1 - line 18, column 43): " + [v.constructor.name]);
  });

  var baseScreenLog = function baseScreenLog(sub) {
    return function (lev) {
      return function (service) {
        return function (lab) {
          return function (pt) {
            return function (name) {
              return function (screen_id) {
                return {
                  category: SCREEN.value,
                  subcategory: Data_String_Common.toLower(sub),
                  level: Data_String_Common.toLower(lev),
                  label: Data_String_Common.toLower(lab),
                  value: {
                    presentation_type: pt,
                    screen_name: name,
                    id: screen_id,
                    url: ""
                  },
                  service: service,
                  log_version: JBridge.getLogVersion,
                  at: ""
                };
              };
            };
          };
        };
      };
    };
  };

  var baseScreenEndLog = function baseScreenEndLog(sub) {
    return function (lev) {
      return function (service) {
        return function (lab) {
          return function (name) {
            return function (screen_id) {
              return {
                category: SCREEN.value,
                subcategory: Data_String_Common.toLower(sub),
                level: Data_String_Common.toLower(lev),
                label: Data_String_Common.toLower(lab),
                value: {
                  screen_name: name,
                  id: screen_id
                },
                service: service,
                log_version: JBridge.getLogVersion,
                at: ""
              };
            };
          };
        };
      };
    };
  };

  var baseLifecycleLog = function baseLifecycleLog(sub) {
    return function (lev) {
      return function (service) {
        return function (lab) {
          return function (value) {
            return {
              category: LIFECYCLE.value,
              subcategory: Data_String_Common.toLower(sub),
              level: Data_String_Common.toLower(lev),
              label: Data_String_Common.toLower(lab),
              value: value,
              service: service,
              log_version: JBridge.getLogVersion,
              at: ""
            };
          };
        };
      };
    };
  };

  var baseExceptionLog = function baseExceptionLog(category) {
    return function (sub) {
      return function (lev) {
        return function (service) {
          return function (lab) {
            return function (message) {
              return function (stacktrace) {
                return {
                  category: stringToCategory(category),
                  subcategory: Data_String_Common.toLower(sub),
                  level: Data_String_Common.toLower(lev),
                  label: Data_String_Common.toLower(lab),
                  value: {
                    message: message,
                    stacktrace: stacktrace
                  },
                  service: service,
                  log_version: JBridge.getLogVersion,
                  at: ""
                };
              };
            };
          };
        };
      };
    };
  };

  var baseContextLog = function baseContextLog(sub) {
    return function (lev) {
      return function (service) {
        return function (lab) {
          return function (value) {
            return {
              category: CONTEXT.value,
              subcategory: Data_String_Common.toLower(sub),
              level: Data_String_Common.toLower(lev),
              label: Data_String_Common.toLower(lab),
              value: value,
              service: service,
              log_version: JBridge.getLogVersion,
              at: ""
            };
          };
        };
      };
    };
  };

  var baseApiCallLog = function baseApiCallLog(sub) {
    return function (lev) {
      return function (service) {
        return function (lab) {
          return function (start) {
            return function (end) {
              return function (status_code) {
                return function (response) {
                  return function (url) {
                    return function (payload) {
                      return function (method) {
                        return {
                          category: API_CALL.value,
                          subcategory: Data_String_Common.toLower(sub),
                          level: Data_String_Common.toLower(lev),
                          label: Data_String_Common.toLower(lab),
                          value: {
                            start_time: Utils.timeToRFC(start),
                            end_time: Utils.timeToRFC(end),
                            status_code: status_code,
                            response: response,
                            url: url,
                            payload: payload,
                            method: method
                          },
                          service: service,
                          log_version: JBridge.getLogVersion,
                          at: ""
                        };
                      };
                    };
                  };
                };
              };
            };
          };
        };
      };
    };
  };

  var baseActionLog = function baseActionLog(sub) {
    return function (lev) {
      return function (service) {
        return function (lab) {
          return function (value) {
            return {
              category: ACTION.value,
              subcategory: Data_String_Common.toLower(sub),
              level: Data_String_Common.toLower(lev),
              label: Data_String_Common.toLower(lab),
              value: value,
              service: service,
              log_version: JBridge.getLogVersion,
              at: ""
            };
          };
        };
      };
    };
  };

  exports["LIFECYCLE"] = LIFECYCLE;
  exports["ACTION"] = ACTION;
  exports["API_CALL"] = API_CALL;
  exports["EXCEPTION"] = EXCEPTION;
  exports["SCREEN"] = SCREEN;
  exports["CONTEXT"] = CONTEXT;
  exports["baseLifecycleLog"] = baseLifecycleLog;
  exports["baseActionLog"] = baseActionLog;
  exports["baseApiCallLog"] = baseApiCallLog;
  exports["baseExceptionLog"] = baseExceptionLog;
  exports["baseScreenLog"] = baseScreenLog;
  exports["baseScreenEndLog"] = baseScreenEndLog;
  exports["baseContextLog"] = baseContextLog;
  exports["stringToCategory"] = stringToCategory;
  exports["encodeCategory"] = encodeCategory;
})(PS);

(function ($PS) {
  // Generated by purs version 0.12.5
  "use strict";

  $PS["Types.TypeLog"] = $PS["Types.TypeLog"] || {};
  var exports = $PS["Types.TypeLog"];
  var Foreign_Generic_Class = $PS["Foreign.Generic.Class"];

  var API_CALL = function () {
    function API_CALL() {}

    ;
    API_CALL.value = new API_CALL();
    return API_CALL;
  }();

  var EXCEPTION = function () {
    function EXCEPTION() {}

    ;
    EXCEPTION.value = new EXCEPTION();
    return EXCEPTION;
  }();

  var EVENT = function () {
    function EVENT() {}

    ;
    EVENT.value = new EVENT();
    return EVENT;
  }();

  var SCREEN = function () {
    function SCREEN() {}

    ;
    SCREEN.value = new SCREEN();
    return SCREEN;
  }();

  var PAGE = function () {
    function PAGE() {}

    ;
    PAGE.value = new PAGE();
    return PAGE;
  }();

  var USER_ERROR = function () {
    function USER_ERROR() {}

    ;
    USER_ERROR.value = new USER_ERROR();
    return USER_ERROR;
  }();

  var MICRO_APP = function () {
    function MICRO_APP() {}

    ;
    MICRO_APP.value = new MICRO_APP();
    return MICRO_APP;
  }();

  var INFO = function () {
    function INFO() {}

    ;
    INFO.value = new INFO();
    return INFO;
  }();

  var DEBUG = function () {
    function DEBUG() {}

    ;
    DEBUG.value = new DEBUG();
    return DEBUG;
  }();

  var ERROR = function () {
    function ERROR() {}

    ;
    ERROR.value = new ERROR();
    return ERROR;
  }();

  var CRITICAL = function () {
    function CRITICAL() {}

    ;
    CRITICAL.value = new CRITICAL();
    return CRITICAL;
  }();

  var WARNING = function () {
    function WARNING() {}

    ;
    WARNING.value = new WARNING();
    return WARNING;
  }();

  var levelToLogLevel = function levelToLogLevel(v) {
    if (v === "info") {
      return INFO.value;
    }

    ;

    if (v === "debug") {
      return DEBUG.value;
    }

    ;

    if (v === "error") {
      return ERROR.value;
    }

    ;

    if (v === "critical") {
      return CRITICAL.value;
    }

    ;

    if (v === "warning") {
      return WARNING.value;
    }

    ;

    if (v === "exception") {
      return CRITICAL.value;
    }

    ;
    return INFO.value;
  };

  var encodeType = new Foreign_Generic_Class.Encode(function (v) {
    if (v instanceof API_CALL) {
      return Foreign_Generic_Class.encode(Foreign_Generic_Class.stringEncode)("api_request");
    }

    ;

    if (v instanceof EXCEPTION) {
      return Foreign_Generic_Class.encode(Foreign_Generic_Class.stringEncode)("exception");
    }

    ;

    if (v instanceof EVENT) {
      return Foreign_Generic_Class.encode(Foreign_Generic_Class.stringEncode)("event");
    }

    ;

    if (v instanceof SCREEN) {
      return Foreign_Generic_Class.encode(Foreign_Generic_Class.stringEncode)("screen");
    }

    ;

    if (v instanceof PAGE) {
      return Foreign_Generic_Class.encode(Foreign_Generic_Class.stringEncode)("page");
    }

    ;

    if (v instanceof USER_ERROR) {
      return Foreign_Generic_Class.encode(Foreign_Generic_Class.stringEncode)("user_error");
    }

    ;

    if (v instanceof MICRO_APP) {
      return Foreign_Generic_Class.encode(Foreign_Generic_Class.stringEncode)("micro_app");
    }

    ;
    throw new Error("Failed pattern match at Types.TypeLog (line 22, column 1 - line 22, column 35): " + [v.constructor.name]);
  });
  var encodeLogLevel = new Foreign_Generic_Class.Encode(function (v) {
    if (v instanceof INFO) {
      return Foreign_Generic_Class.encode(Foreign_Generic_Class.stringEncode)("INFO");
    }

    ;

    if (v instanceof DEBUG) {
      return Foreign_Generic_Class.encode(Foreign_Generic_Class.stringEncode)("DEBUG");
    }

    ;

    if (v instanceof ERROR) {
      return Foreign_Generic_Class.encode(Foreign_Generic_Class.stringEncode)("ERROR");
    }

    ;

    if (v instanceof CRITICAL) {
      return Foreign_Generic_Class.encode(Foreign_Generic_Class.stringEncode)("CRITICAL");
    }

    ;

    if (v instanceof WARNING) {
      return Foreign_Generic_Class.encode(Foreign_Generic_Class.stringEncode)("WARNING");
    }

    ;
    throw new Error("Failed pattern match at Types.TypeLog (line 31, column 1 - line 31, column 43): " + [v.constructor.name]);
  });

  var baseUserErrorLog = function baseUserErrorLog(app) {
    return function (value) {
      return {
        category: app,
        type: USER_ERROR.value,
        level: INFO.value,
        id: 0,
        at: "",
        value: value
      };
    };
  };

  var baseScreenLog = function baseScreenLog(app) {
    return function (presentation) {
      return function (title) {
        return {
          category: app,
          type: SCREEN.value,
          level: INFO.value,
          id: 0,
          at: "",
          presentation_type: presentation,
          title: title
        };
      };
    };
  };

  var baseScreenEndLog = function baseScreenEndLog(app) {
    return function (title) {
      return {
        category: app,
        type: SCREEN.value,
        level: INFO.value,
        id: 0,
        at: "",
        title: title
      };
    };
  };

  var basePageLog = function basePageLog(app) {
    return function (url) {
      return function (start_time) {
        return function (end_time) {
          return function (status_code) {
            return {
              category: app,
              type: PAGE.value,
              level: INFO.value,
              id: 0,
              at: "",
              url: url,
              start_time: start_time,
              end_time: end_time,
              status_code: status_code
            };
          };
        };
      };
    };
  };

  var baseMicroApplog = function baseMicroApplog(app) {
    return function (version) {
      return {
        type: MICRO_APP.value,
        name: app,
        level: INFO.value,
        version: version,
        category: app,
        id: 0,
        at: ""
      };
    };
  };

  var baseExceptionLog = function baseExceptionLog(app) {
    return function (level) {
      return function (exception) {
        return function (stacktrace) {
          return function (message) {
            return {
              category: app,
              type: EXCEPTION.value,
              id: 0,
              at: "",
              level: level,
              exception: exception,
              stacktrace: stacktrace,
              message: message
            };
          };
        };
      };
    };
  };

  var baseEventLog = function baseEventLog(app) {
    return function (log_level) {
      return function (label) {
        return function (value) {
          return {
            category: app,
            type: EVENT.value,
            level: log_level,
            label: label,
            value: value,
            id: 0,
            at: ""
          };
        };
      };
    };
  };

  var baseContextLog = function baseContextLog(app) {
    return function (log_level) {
      return function (label) {
        return {
          category: app,
          type: EVENT.value,
          level: log_level,
          label: label,
          id: 0,
          at: ""
        };
      };
    };
  };

  var baseApiLog = function baseApiLog(app) {
    return function (status) {
      return function (start) {
        return function (end) {
          return function (url) {
            return function (response) {
              return function (payload) {
                return {
                  category: app,
                  type: EVENT.value,
                  id: 0,
                  at: "",
                  level: INFO.value,
                  status_code: status,
                  url: url,
                  start_time: start,
                  end_time: end,
                  payload: payload,
                  response: response
                };
              };
            };
          };
        };
      };
    };
  };

  exports["API_CALL"] = API_CALL;
  exports["EXCEPTION"] = EXCEPTION;
  exports["EVENT"] = EVENT;
  exports["SCREEN"] = SCREEN;
  exports["PAGE"] = PAGE;
  exports["USER_ERROR"] = USER_ERROR;
  exports["MICRO_APP"] = MICRO_APP;
  exports["INFO"] = INFO;
  exports["DEBUG"] = DEBUG;
  exports["ERROR"] = ERROR;
  exports["CRITICAL"] = CRITICAL;
  exports["WARNING"] = WARNING;
  exports["levelToLogLevel"] = levelToLogLevel;
  exports["baseEventLog"] = baseEventLog;
  exports["baseContextLog"] = baseContextLog;
  exports["baseApiLog"] = baseApiLog;
  exports["baseExceptionLog"] = baseExceptionLog;
  exports["baseMicroApplog"] = baseMicroApplog;
  exports["baseScreenLog"] = baseScreenLog;
  exports["baseScreenEndLog"] = baseScreenEndLog;
  exports["baseUserErrorLog"] = baseUserErrorLog;
  exports["basePageLog"] = basePageLog;
  exports["encodeType"] = encodeType;
  exports["encodeLogLevel"] = encodeLogLevel;
})(PS);

(function ($PS) {
  // Generated by purs version 0.12.5
  "use strict";

  $PS["Main"] = $PS["Main"] || {};
  var exports = $PS["Main"];
  var Control_Bind = $PS["Control.Bind"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_String_Common = $PS["Data.String.Common"];
  var Data_Symbol = $PS["Data.Symbol"];
  var Effect = $PS["Effect"];
  var Effect_Aff = $PS["Effect.Aff"];
  var Foreign = $PS["Foreign"];
  var Foreign_Generic_Class = $PS["Foreign.Generic.Class"];
  var Sessioniser = $PS["Sessioniser"];
  var Types_CategoryLog = $PS["Types.CategoryLog"];
  var Types_TypeLog = $PS["Types.TypeLog"];
  var Utils = $PS["Utils"];

  var initTracker = function initTracker(service) {
    return {
      trackApi: function trackApi(status) {
        return function (start) {
          return function (end) {
            return function (url) {
              return function (response) {
                return function (payload) {
                  if (Utils.downgradeLog) {
                    return Control_Bind.bind(Effect.bindEffect)(Utils.addId(Types_TypeLog.baseApiLog(service)(status)(start)(end)(url)(response)(payload)))(Utils.addAndLog(false)("api_call")("network")("network_call")(service)(Foreign_Generic_Class.recordEncode()(Foreign_Generic_Class.encodeRecordCons()(Foreign_Generic_Class.encodeRecordCons()(Foreign_Generic_Class.encodeRecordCons()(Foreign_Generic_Class.encodeRecordCons()(Foreign_Generic_Class.encodeRecordCons()(Foreign_Generic_Class.encodeRecordCons()(Foreign_Generic_Class.encodeRecordCons()(Foreign_Generic_Class.encodeRecordCons()(Foreign_Generic_Class.encodeRecordCons()(Foreign_Generic_Class.encodeRecordCons()(Foreign_Generic_Class.encodeRecordCons()(Foreign_Generic_Class.encodeRecordNil)(new Data_Symbol.IsSymbol(function () {
                      return "url";
                    }))(Foreign_Generic_Class.encodeWithOptionsOther(Foreign_Generic_Class.stringEncode)))(new Data_Symbol.IsSymbol(function () {
                      return "type";
                    }))(Foreign_Generic_Class.encodeWithOptionsOther(Types_TypeLog.encodeType)))(new Data_Symbol.IsSymbol(function () {
                      return "status_code";
                    }))(Foreign_Generic_Class.encodeWithOptionsOther(Foreign_Generic_Class.intEncode)))(new Data_Symbol.IsSymbol(function () {
                      return "start_time";
                    }))(Foreign_Generic_Class.encodeWithOptionsOther(Foreign_Generic_Class.intEncode)))(new Data_Symbol.IsSymbol(function () {
                      return "response";
                    }))(Foreign_Generic_Class.encodeWithOptionsOther(Foreign_Generic_Class.stringEncode)))(new Data_Symbol.IsSymbol(function () {
                      return "payload";
                    }))(Foreign_Generic_Class.encodeWithOptionsOther(Foreign_Generic_Class.stringEncode)))(new Data_Symbol.IsSymbol(function () {
                      return "level";
                    }))(Foreign_Generic_Class.encodeWithOptionsOther(Types_TypeLog.encodeLogLevel)))(new Data_Symbol.IsSymbol(function () {
                      return "id";
                    }))(Foreign_Generic_Class.encodeWithOptionsOther(Foreign_Generic_Class.intEncode)))(new Data_Symbol.IsSymbol(function () {
                      return "end_time";
                    }))(Foreign_Generic_Class.encodeWithOptionsOther(Foreign_Generic_Class.intEncode)))(new Data_Symbol.IsSymbol(function () {
                      return "category";
                    }))(Foreign_Generic_Class.encodeWithOptionsOther(Foreign_Generic_Class.stringEncode)))(new Data_Symbol.IsSymbol(function () {
                      return "at";
                    }))(Foreign_Generic_Class.encodeWithOptionsOther(Foreign_Generic_Class.stringEncode)))));
                  }

                  ;
                  return Utils.addAndLog(true)("api_call")("network")("network_call")(service)(Foreign_Generic_Class.recordEncode()(Foreign_Generic_Class.encodeRecordCons()(Foreign_Generic_Class.encodeRecordCons()(Foreign_Generic_Class.encodeRecordCons()(Foreign_Generic_Class.encodeRecordCons()(Foreign_Generic_Class.encodeRecordCons()(Foreign_Generic_Class.encodeRecordCons()(Foreign_Generic_Class.encodeRecordCons()(Foreign_Generic_Class.encodeRecordCons()(Foreign_Generic_Class.encodeRecordNil)(new Data_Symbol.IsSymbol(function () {
                    return "value";
                  }))(Foreign_Generic_Class.encodeWithOptionsRecord()(Foreign_Generic_Class.encodeRecordCons()(Foreign_Generic_Class.encodeRecordCons()(Foreign_Generic_Class.encodeRecordCons()(Foreign_Generic_Class.encodeRecordCons()(Foreign_Generic_Class.encodeRecordCons()(Foreign_Generic_Class.encodeRecordCons()(Foreign_Generic_Class.encodeRecordCons()(Foreign_Generic_Class.encodeRecordNil)(new Data_Symbol.IsSymbol(function () {
                    return "url";
                  }))(Foreign_Generic_Class.encodeWithOptionsOther(Foreign_Generic_Class.stringEncode)))(new Data_Symbol.IsSymbol(function () {
                    return "status_code";
                  }))(Foreign_Generic_Class.encodeWithOptionsOther(Foreign_Generic_Class.intEncode)))(new Data_Symbol.IsSymbol(function () {
                    return "start_time";
                  }))(Foreign_Generic_Class.encodeWithOptionsOther(Foreign_Generic_Class.stringEncode)))(new Data_Symbol.IsSymbol(function () {
                    return "response";
                  }))(Foreign_Generic_Class.encodeWithOptionsOther(Foreign_Generic_Class.stringEncode)))(new Data_Symbol.IsSymbol(function () {
                    return "payload";
                  }))(Foreign_Generic_Class.encodeWithOptionsOther(Foreign_Generic_Class.stringEncode)))(new Data_Symbol.IsSymbol(function () {
                    return "method";
                  }))(Foreign_Generic_Class.encodeWithOptionsOther(Foreign_Generic_Class.stringEncode)))(new Data_Symbol.IsSymbol(function () {
                    return "end_time";
                  }))(Foreign_Generic_Class.encodeWithOptionsOther(Foreign_Generic_Class.stringEncode)))))(new Data_Symbol.IsSymbol(function () {
                    return "subcategory";
                  }))(Foreign_Generic_Class.encodeWithOptionsOther(Foreign_Generic_Class.stringEncode)))(new Data_Symbol.IsSymbol(function () {
                    return "service";
                  }))(Foreign_Generic_Class.encodeWithOptionsOther(Foreign_Generic_Class.stringEncode)))(new Data_Symbol.IsSymbol(function () {
                    return "log_version";
                  }))(Foreign_Generic_Class.encodeWithOptionsOther(Foreign_Generic_Class.stringEncode)))(new Data_Symbol.IsSymbol(function () {
                    return "level";
                  }))(Foreign_Generic_Class.encodeWithOptionsOther(Foreign_Generic_Class.stringEncode)))(new Data_Symbol.IsSymbol(function () {
                    return "label";
                  }))(Foreign_Generic_Class.encodeWithOptionsOther(Foreign_Generic_Class.stringEncode)))(new Data_Symbol.IsSymbol(function () {
                    return "category";
                  }))(Foreign_Generic_Class.encodeWithOptionsOther(Types_CategoryLog.encodeCategory)))(new Data_Symbol.IsSymbol(function () {
                    return "at";
                  }))(Foreign_Generic_Class.encodeWithOptionsOther(Foreign_Generic_Class.stringEncode))))(Types_CategoryLog.baseApiCallLog("network")("info")(service)("network_call")(start)(end)(status)(response)(url)(payload)("api_request"));
                };
              };
            };
          };
        };
      },
      trackEventInfo: function trackEventInfo(label) {
        return function (value) {
          if (Utils.downgradeLog) {
            return Control_Bind.bind(Effect.bindEffect)(Utils.addId(Types_TypeLog.baseEventLog(service)(Types_TypeLog.INFO.value)(label)(value)))(Utils.addAndLog(false)("action")("system")(label)(service)(Foreign_Generic_Class.recordEncode()(Foreign_Generic_Class.encodeRecordCons()(Foreign_Generic_Class.encodeRecordCons()(Foreign_Generic_Class.encodeRecordCons()(Foreign_Generic_Class.encodeRecordCons()(Foreign_Generic_Class.encodeRecordCons()(Foreign_Generic_Class.encodeRecordCons()(Foreign_Generic_Class.encodeRecordCons()(Foreign_Generic_Class.encodeRecordNil)(new Data_Symbol.IsSymbol(function () {
              return "value";
            }))(Foreign_Generic_Class.encodeWithOptionsOther(Foreign_Generic_Class.stringEncode)))(new Data_Symbol.IsSymbol(function () {
              return "type";
            }))(Foreign_Generic_Class.encodeWithOptionsOther(Types_TypeLog.encodeType)))(new Data_Symbol.IsSymbol(function () {
              return "level";
            }))(Foreign_Generic_Class.encodeWithOptionsOther(Types_TypeLog.encodeLogLevel)))(new Data_Symbol.IsSymbol(function () {
              return "label";
            }))(Foreign_Generic_Class.encodeWithOptionsOther(Foreign_Generic_Class.stringEncode)))(new Data_Symbol.IsSymbol(function () {
              return "id";
            }))(Foreign_Generic_Class.encodeWithOptionsOther(Foreign_Generic_Class.intEncode)))(new Data_Symbol.IsSymbol(function () {
              return "category";
            }))(Foreign_Generic_Class.encodeWithOptionsOther(Foreign_Generic_Class.stringEncode)))(new Data_Symbol.IsSymbol(function () {
              return "at";
            }))(Foreign_Generic_Class.encodeWithOptionsOther(Foreign_Generic_Class.stringEncode)))));
          }

          ;
          return Utils.addAndLog(true)("action")("system")(label)(service)(Foreign_Generic_Class.recordEncode()(Foreign_Generic_Class.encodeRecordCons()(Foreign_Generic_Class.encodeRecordCons()(Foreign_Generic_Class.encodeRecordCons()(Foreign_Generic_Class.encodeRecordCons()(Foreign_Generic_Class.encodeRecordCons()(Foreign_Generic_Class.encodeRecordCons()(Foreign_Generic_Class.encodeRecordCons()(Foreign_Generic_Class.encodeRecordCons()(Foreign_Generic_Class.encodeRecordNil)(new Data_Symbol.IsSymbol(function () {
            return "value";
          }))(Foreign_Generic_Class.encodeWithOptionsOther(Foreign_Generic_Class.foreignEncode)))(new Data_Symbol.IsSymbol(function () {
            return "subcategory";
          }))(Foreign_Generic_Class.encodeWithOptionsOther(Foreign_Generic_Class.stringEncode)))(new Data_Symbol.IsSymbol(function () {
            return "service";
          }))(Foreign_Generic_Class.encodeWithOptionsOther(Foreign_Generic_Class.stringEncode)))(new Data_Symbol.IsSymbol(function () {
            return "log_version";
          }))(Foreign_Generic_Class.encodeWithOptionsOther(Foreign_Generic_Class.stringEncode)))(new Data_Symbol.IsSymbol(function () {
            return "level";
          }))(Foreign_Generic_Class.encodeWithOptionsOther(Foreign_Generic_Class.stringEncode)))(new Data_Symbol.IsSymbol(function () {
            return "label";
          }))(Foreign_Generic_Class.encodeWithOptionsOther(Foreign_Generic_Class.stringEncode)))(new Data_Symbol.IsSymbol(function () {
            return "category";
          }))(Foreign_Generic_Class.encodeWithOptionsOther(Types_CategoryLog.encodeCategory)))(new Data_Symbol.IsSymbol(function () {
            return "at";
          }))(Foreign_Generic_Class.encodeWithOptionsOther(Foreign_Generic_Class.stringEncode))))(Types_CategoryLog.baseActionLog("system")("info")(service)(label)(Utils.getValue("data")(value)));
        };
      },
      trackEventDebug: function trackEventDebug(label) {
        return function (value) {
          if (Utils.downgradeLog) {
            return Control_Bind.bind(Effect.bindEffect)(Utils.addId(Types_TypeLog.baseEventLog(service)(Types_TypeLog.DEBUG.value)(label)(value)))(Utils.addAndLog(false)("action")("system")(label)(service)(Foreign_Generic_Class.recordEncode()(Foreign_Generic_Class.encodeRecordCons()(Foreign_Generic_Class.encodeRecordCons()(Foreign_Generic_Class.encodeRecordCons()(Foreign_Generic_Class.encodeRecordCons()(Foreign_Generic_Class.encodeRecordCons()(Foreign_Generic_Class.encodeRecordCons()(Foreign_Generic_Class.encodeRecordCons()(Foreign_Generic_Class.encodeRecordNil)(new Data_Symbol.IsSymbol(function () {
              return "value";
            }))(Foreign_Generic_Class.encodeWithOptionsOther(Foreign_Generic_Class.stringEncode)))(new Data_Symbol.IsSymbol(function () {
              return "type";
            }))(Foreign_Generic_Class.encodeWithOptionsOther(Types_TypeLog.encodeType)))(new Data_Symbol.IsSymbol(function () {
              return "level";
            }))(Foreign_Generic_Class.encodeWithOptionsOther(Types_TypeLog.encodeLogLevel)))(new Data_Symbol.IsSymbol(function () {
              return "label";
            }))(Foreign_Generic_Class.encodeWithOptionsOther(Foreign_Generic_Class.stringEncode)))(new Data_Symbol.IsSymbol(function () {
              return "id";
            }))(Foreign_Generic_Class.encodeWithOptionsOther(Foreign_Generic_Class.intEncode)))(new Data_Symbol.IsSymbol(function () {
              return "category";
            }))(Foreign_Generic_Class.encodeWithOptionsOther(Foreign_Generic_Class.stringEncode)))(new Data_Symbol.IsSymbol(function () {
              return "at";
            }))(Foreign_Generic_Class.encodeWithOptionsOther(Foreign_Generic_Class.stringEncode)))));
          }

          ;
          return Utils.addAndLog(true)("action")("system")(label)(service)(Foreign_Generic_Class.recordEncode()(Foreign_Generic_Class.encodeRecordCons()(Foreign_Generic_Class.encodeRecordCons()(Foreign_Generic_Class.encodeRecordCons()(Foreign_Generic_Class.encodeRecordCons()(Foreign_Generic_Class.encodeRecordCons()(Foreign_Generic_Class.encodeRecordCons()(Foreign_Generic_Class.encodeRecordCons()(Foreign_Generic_Class.encodeRecordCons()(Foreign_Generic_Class.encodeRecordNil)(new Data_Symbol.IsSymbol(function () {
            return "value";
          }))(Foreign_Generic_Class.encodeWithOptionsOther(Foreign_Generic_Class.foreignEncode)))(new Data_Symbol.IsSymbol(function () {
            return "subcategory";
          }))(Foreign_Generic_Class.encodeWithOptionsOther(Foreign_Generic_Class.stringEncode)))(new Data_Symbol.IsSymbol(function () {
            return "service";
          }))(Foreign_Generic_Class.encodeWithOptionsOther(Foreign_Generic_Class.stringEncode)))(new Data_Symbol.IsSymbol(function () {
            return "log_version";
          }))(Foreign_Generic_Class.encodeWithOptionsOther(Foreign_Generic_Class.stringEncode)))(new Data_Symbol.IsSymbol(function () {
            return "level";
          }))(Foreign_Generic_Class.encodeWithOptionsOther(Foreign_Generic_Class.stringEncode)))(new Data_Symbol.IsSymbol(function () {
            return "label";
          }))(Foreign_Generic_Class.encodeWithOptionsOther(Foreign_Generic_Class.stringEncode)))(new Data_Symbol.IsSymbol(function () {
            return "category";
          }))(Foreign_Generic_Class.encodeWithOptionsOther(Types_CategoryLog.encodeCategory)))(new Data_Symbol.IsSymbol(function () {
            return "at";
          }))(Foreign_Generic_Class.encodeWithOptionsOther(Foreign_Generic_Class.stringEncode))))(Types_CategoryLog.baseActionLog("system")("debug")(service)(label)(Utils.getValue("data")(value)));
        };
      },
      trackExceptionCritical: function trackExceptionCritical(exception) {
        return function (stacktrace) {
          return function (msg) {
            if (Utils.downgradeLog) {
              return Control_Bind.bind(Effect.bindEffect)(Utils.addId(Types_TypeLog.baseExceptionLog(service)(Types_TypeLog.CRITICAL.value)(exception)(stacktrace)(msg)))(Utils.addAndLog(false)("action")("system")("critical")(service)(Foreign_Generic_Class.recordEncode()(Foreign_Generic_Class.encodeRecordCons()(Foreign_Generic_Class.encodeRecordCons()(Foreign_Generic_Class.encodeRecordCons()(Foreign_Generic_Class.encodeRecordCons()(Foreign_Generic_Class.encodeRecordCons()(Foreign_Generic_Class.encodeRecordCons()(Foreign_Generic_Class.encodeRecordCons()(Foreign_Generic_Class.encodeRecordCons()(Foreign_Generic_Class.encodeRecordNil)(new Data_Symbol.IsSymbol(function () {
                return "type";
              }))(Foreign_Generic_Class.encodeWithOptionsOther(Types_TypeLog.encodeType)))(new Data_Symbol.IsSymbol(function () {
                return "stacktrace";
              }))(Foreign_Generic_Class.encodeWithOptionsOther(Foreign_Generic_Class.stringEncode)))(new Data_Symbol.IsSymbol(function () {
                return "message";
              }))(Foreign_Generic_Class.encodeWithOptionsOther(Foreign_Generic_Class.stringEncode)))(new Data_Symbol.IsSymbol(function () {
                return "level";
              }))(Foreign_Generic_Class.encodeWithOptionsOther(Types_TypeLog.encodeLogLevel)))(new Data_Symbol.IsSymbol(function () {
                return "id";
              }))(Foreign_Generic_Class.encodeWithOptionsOther(Foreign_Generic_Class.intEncode)))(new Data_Symbol.IsSymbol(function () {
                return "exception";
              }))(Foreign_Generic_Class.encodeWithOptionsOther(Foreign_Generic_Class.stringEncode)))(new Data_Symbol.IsSymbol(function () {
                return "category";
              }))(Foreign_Generic_Class.encodeWithOptionsOther(Foreign_Generic_Class.stringEncode)))(new Data_Symbol.IsSymbol(function () {
                return "at";
              }))(Foreign_Generic_Class.encodeWithOptionsOther(Foreign_Generic_Class.stringEncode)))));
            }

            ;
            return Utils.addAndLog(true)("action")("system")("critical")(service)(Foreign_Generic_Class.recordEncode()(Foreign_Generic_Class.encodeRecordCons()(Foreign_Generic_Class.encodeRecordCons()(Foreign_Generic_Class.encodeRecordCons()(Foreign_Generic_Class.encodeRecordCons()(Foreign_Generic_Class.encodeRecordCons()(Foreign_Generic_Class.encodeRecordCons()(Foreign_Generic_Class.encodeRecordCons()(Foreign_Generic_Class.encodeRecordCons()(Foreign_Generic_Class.encodeRecordNil)(new Data_Symbol.IsSymbol(function () {
              return "value";
            }))(Foreign_Generic_Class.encodeWithOptionsRecord()(Foreign_Generic_Class.encodeRecordCons()(Foreign_Generic_Class.encodeRecordCons()(Foreign_Generic_Class.encodeRecordNil)(new Data_Symbol.IsSymbol(function () {
              return "stacktrace";
            }))(Foreign_Generic_Class.encodeWithOptionsOther(Foreign_Generic_Class.stringEncode)))(new Data_Symbol.IsSymbol(function () {
              return "message";
            }))(Foreign_Generic_Class.encodeWithOptionsOther(Foreign_Generic_Class.stringEncode)))))(new Data_Symbol.IsSymbol(function () {
              return "subcategory";
            }))(Foreign_Generic_Class.encodeWithOptionsOther(Foreign_Generic_Class.stringEncode)))(new Data_Symbol.IsSymbol(function () {
              return "service";
            }))(Foreign_Generic_Class.encodeWithOptionsOther(Foreign_Generic_Class.stringEncode)))(new Data_Symbol.IsSymbol(function () {
              return "log_version";
            }))(Foreign_Generic_Class.encodeWithOptionsOther(Foreign_Generic_Class.stringEncode)))(new Data_Symbol.IsSymbol(function () {
              return "level";
            }))(Foreign_Generic_Class.encodeWithOptionsOther(Foreign_Generic_Class.stringEncode)))(new Data_Symbol.IsSymbol(function () {
              return "label";
            }))(Foreign_Generic_Class.encodeWithOptionsOther(Foreign_Generic_Class.stringEncode)))(new Data_Symbol.IsSymbol(function () {
              return "category";
            }))(Foreign_Generic_Class.encodeWithOptionsOther(Types_CategoryLog.encodeCategory)))(new Data_Symbol.IsSymbol(function () {
              return "at";
            }))(Foreign_Generic_Class.encodeWithOptionsOther(Foreign_Generic_Class.stringEncode))))(Types_CategoryLog.baseExceptionLog("action")("system")("critical")(service)(exception)(msg)(stacktrace));
          };
        };
      },
      trackExceptionWarning: function trackExceptionWarning(exception) {
        return function (stacktrace) {
          return function (msg) {
            if (Utils.downgradeLog) {
              return Control_Bind.bind(Effect.bindEffect)(Utils.addId(Types_TypeLog.baseExceptionLog(service)(Types_TypeLog.WARNING.value)(exception)(stacktrace)(msg)))(Utils.addAndLog(false)("action")("system")("warning")(service)(Foreign_Generic_Class.recordEncode()(Foreign_Generic_Class.encodeRecordCons()(Foreign_Generic_Class.encodeRecordCons()(Foreign_Generic_Class.encodeRecordCons()(Foreign_Generic_Class.encodeRecordCons()(Foreign_Generic_Class.encodeRecordCons()(Foreign_Generic_Class.encodeRecordCons()(Foreign_Generic_Class.encodeRecordCons()(Foreign_Generic_Class.encodeRecordCons()(Foreign_Generic_Class.encodeRecordNil)(new Data_Symbol.IsSymbol(function () {
                return "type";
              }))(Foreign_Generic_Class.encodeWithOptionsOther(Types_TypeLog.encodeType)))(new Data_Symbol.IsSymbol(function () {
                return "stacktrace";
              }))(Foreign_Generic_Class.encodeWithOptionsOther(Foreign_Generic_Class.stringEncode)))(new Data_Symbol.IsSymbol(function () {
                return "message";
              }))(Foreign_Generic_Class.encodeWithOptionsOther(Foreign_Generic_Class.stringEncode)))(new Data_Symbol.IsSymbol(function () {
                return "level";
              }))(Foreign_Generic_Class.encodeWithOptionsOther(Types_TypeLog.encodeLogLevel)))(new Data_Symbol.IsSymbol(function () {
                return "id";
              }))(Foreign_Generic_Class.encodeWithOptionsOther(Foreign_Generic_Class.intEncode)))(new Data_Symbol.IsSymbol(function () {
                return "exception";
              }))(Foreign_Generic_Class.encodeWithOptionsOther(Foreign_Generic_Class.stringEncode)))(new Data_Symbol.IsSymbol(function () {
                return "category";
              }))(Foreign_Generic_Class.encodeWithOptionsOther(Foreign_Generic_Class.stringEncode)))(new Data_Symbol.IsSymbol(function () {
                return "at";
              }))(Foreign_Generic_Class.encodeWithOptionsOther(Foreign_Generic_Class.stringEncode)))));
            }

            ;
            return Utils.addAndLog(true)("action")("system")("warning")(service)(Foreign_Generic_Class.recordEncode()(Foreign_Generic_Class.encodeRecordCons()(Foreign_Generic_Class.encodeRecordCons()(Foreign_Generic_Class.encodeRecordCons()(Foreign_Generic_Class.encodeRecordCons()(Foreign_Generic_Class.encodeRecordCons()(Foreign_Generic_Class.encodeRecordCons()(Foreign_Generic_Class.encodeRecordCons()(Foreign_Generic_Class.encodeRecordCons()(Foreign_Generic_Class.encodeRecordNil)(new Data_Symbol.IsSymbol(function () {
              return "value";
            }))(Foreign_Generic_Class.encodeWithOptionsRecord()(Foreign_Generic_Class.encodeRecordCons()(Foreign_Generic_Class.encodeRecordCons()(Foreign_Generic_Class.encodeRecordNil)(new Data_Symbol.IsSymbol(function () {
              return "stacktrace";
            }))(Foreign_Generic_Class.encodeWithOptionsOther(Foreign_Generic_Class.stringEncode)))(new Data_Symbol.IsSymbol(function () {
              return "message";
            }))(Foreign_Generic_Class.encodeWithOptionsOther(Foreign_Generic_Class.stringEncode)))))(new Data_Symbol.IsSymbol(function () {
              return "subcategory";
            }))(Foreign_Generic_Class.encodeWithOptionsOther(Foreign_Generic_Class.stringEncode)))(new Data_Symbol.IsSymbol(function () {
              return "service";
            }))(Foreign_Generic_Class.encodeWithOptionsOther(Foreign_Generic_Class.stringEncode)))(new Data_Symbol.IsSymbol(function () {
              return "log_version";
            }))(Foreign_Generic_Class.encodeWithOptionsOther(Foreign_Generic_Class.stringEncode)))(new Data_Symbol.IsSymbol(function () {
              return "level";
            }))(Foreign_Generic_Class.encodeWithOptionsOther(Foreign_Generic_Class.stringEncode)))(new Data_Symbol.IsSymbol(function () {
              return "label";
            }))(Foreign_Generic_Class.encodeWithOptionsOther(Foreign_Generic_Class.stringEncode)))(new Data_Symbol.IsSymbol(function () {
              return "category";
            }))(Foreign_Generic_Class.encodeWithOptionsOther(Types_CategoryLog.encodeCategory)))(new Data_Symbol.IsSymbol(function () {
              return "at";
            }))(Foreign_Generic_Class.encodeWithOptionsOther(Foreign_Generic_Class.stringEncode))))(Types_CategoryLog.baseExceptionLog("action")("system")("warning")(service)(exception)(msg)(stacktrace));
          };
        };
      },
      trackExceptionError: function trackExceptionError(exception) {
        return function (stacktrace) {
          return function (msg) {
            if (Utils.downgradeLog) {
              return Control_Bind.bind(Effect.bindEffect)(Utils.addId(Types_TypeLog.baseExceptionLog(service)(Types_TypeLog.ERROR.value)(exception)(stacktrace)(msg)))(Utils.addAndLog(false)("action")("system")("error")(service)(Foreign_Generic_Class.recordEncode()(Foreign_Generic_Class.encodeRecordCons()(Foreign_Generic_Class.encodeRecordCons()(Foreign_Generic_Class.encodeRecordCons()(Foreign_Generic_Class.encodeRecordCons()(Foreign_Generic_Class.encodeRecordCons()(Foreign_Generic_Class.encodeRecordCons()(Foreign_Generic_Class.encodeRecordCons()(Foreign_Generic_Class.encodeRecordCons()(Foreign_Generic_Class.encodeRecordNil)(new Data_Symbol.IsSymbol(function () {
                return "type";
              }))(Foreign_Generic_Class.encodeWithOptionsOther(Types_TypeLog.encodeType)))(new Data_Symbol.IsSymbol(function () {
                return "stacktrace";
              }))(Foreign_Generic_Class.encodeWithOptionsOther(Foreign_Generic_Class.stringEncode)))(new Data_Symbol.IsSymbol(function () {
                return "message";
              }))(Foreign_Generic_Class.encodeWithOptionsOther(Foreign_Generic_Class.stringEncode)))(new Data_Symbol.IsSymbol(function () {
                return "level";
              }))(Foreign_Generic_Class.encodeWithOptionsOther(Types_TypeLog.encodeLogLevel)))(new Data_Symbol.IsSymbol(function () {
                return "id";
              }))(Foreign_Generic_Class.encodeWithOptionsOther(Foreign_Generic_Class.intEncode)))(new Data_Symbol.IsSymbol(function () {
                return "exception";
              }))(Foreign_Generic_Class.encodeWithOptionsOther(Foreign_Generic_Class.stringEncode)))(new Data_Symbol.IsSymbol(function () {
                return "category";
              }))(Foreign_Generic_Class.encodeWithOptionsOther(Foreign_Generic_Class.stringEncode)))(new Data_Symbol.IsSymbol(function () {
                return "at";
              }))(Foreign_Generic_Class.encodeWithOptionsOther(Foreign_Generic_Class.stringEncode)))));
            }

            ;
            return Utils.addAndLog(true)("action")("system")("error")(service)(Foreign_Generic_Class.recordEncode()(Foreign_Generic_Class.encodeRecordCons()(Foreign_Generic_Class.encodeRecordCons()(Foreign_Generic_Class.encodeRecordCons()(Foreign_Generic_Class.encodeRecordCons()(Foreign_Generic_Class.encodeRecordCons()(Foreign_Generic_Class.encodeRecordCons()(Foreign_Generic_Class.encodeRecordCons()(Foreign_Generic_Class.encodeRecordCons()(Foreign_Generic_Class.encodeRecordNil)(new Data_Symbol.IsSymbol(function () {
              return "value";
            }))(Foreign_Generic_Class.encodeWithOptionsRecord()(Foreign_Generic_Class.encodeRecordCons()(Foreign_Generic_Class.encodeRecordCons()(Foreign_Generic_Class.encodeRecordNil)(new Data_Symbol.IsSymbol(function () {
              return "stacktrace";
            }))(Foreign_Generic_Class.encodeWithOptionsOther(Foreign_Generic_Class.stringEncode)))(new Data_Symbol.IsSymbol(function () {
              return "message";
            }))(Foreign_Generic_Class.encodeWithOptionsOther(Foreign_Generic_Class.stringEncode)))))(new Data_Symbol.IsSymbol(function () {
              return "subcategory";
            }))(Foreign_Generic_Class.encodeWithOptionsOther(Foreign_Generic_Class.stringEncode)))(new Data_Symbol.IsSymbol(function () {
              return "service";
            }))(Foreign_Generic_Class.encodeWithOptionsOther(Foreign_Generic_Class.stringEncode)))(new Data_Symbol.IsSymbol(function () {
              return "log_version";
            }))(Foreign_Generic_Class.encodeWithOptionsOther(Foreign_Generic_Class.stringEncode)))(new Data_Symbol.IsSymbol(function () {
              return "level";
            }))(Foreign_Generic_Class.encodeWithOptionsOther(Foreign_Generic_Class.stringEncode)))(new Data_Symbol.IsSymbol(function () {
              return "label";
            }))(Foreign_Generic_Class.encodeWithOptionsOther(Foreign_Generic_Class.stringEncode)))(new Data_Symbol.IsSymbol(function () {
              return "category";
            }))(Foreign_Generic_Class.encodeWithOptionsOther(Types_CategoryLog.encodeCategory)))(new Data_Symbol.IsSymbol(function () {
              return "at";
            }))(Foreign_Generic_Class.encodeWithOptionsOther(Foreign_Generic_Class.stringEncode))))(Types_CategoryLog.baseExceptionLog("action")("system")("error")(service)(exception)(msg)(stacktrace));
          };
        };
      },
      trackOverlay: function trackOverlay(title) {
        if (Utils.downgradeLog) {
          return Control_Bind.bind(Effect.bindEffect)(Utils.incrementId(Utils.addScreenEntryId(title)(Types_TypeLog.baseScreenLog(service)("overlay")(title))))(Utils.addAndLog(false)("screen")("screen")("current_screen")(service)(Foreign_Generic_Class.recordEncode()(Foreign_Generic_Class.encodeRecordCons()(Foreign_Generic_Class.encodeRecordCons()(Foreign_Generic_Class.encodeRecordCons()(Foreign_Generic_Class.encodeRecordCons()(Foreign_Generic_Class.encodeRecordCons()(Foreign_Generic_Class.encodeRecordCons()(Foreign_Generic_Class.encodeRecordCons()(Foreign_Generic_Class.encodeRecordNil)(new Data_Symbol.IsSymbol(function () {
            return "type";
          }))(Foreign_Generic_Class.encodeWithOptionsOther(Types_TypeLog.encodeType)))(new Data_Symbol.IsSymbol(function () {
            return "title";
          }))(Foreign_Generic_Class.encodeWithOptionsOther(Foreign_Generic_Class.stringEncode)))(new Data_Symbol.IsSymbol(function () {
            return "presentation_type";
          }))(Foreign_Generic_Class.encodeWithOptionsOther(Foreign_Generic_Class.stringEncode)))(new Data_Symbol.IsSymbol(function () {
            return "level";
          }))(Foreign_Generic_Class.encodeWithOptionsOther(Types_TypeLog.encodeLogLevel)))(new Data_Symbol.IsSymbol(function () {
            return "id";
          }))(Foreign_Generic_Class.encodeWithOptionsOther(Foreign_Generic_Class.intEncode)))(new Data_Symbol.IsSymbol(function () {
            return "category";
          }))(Foreign_Generic_Class.encodeWithOptionsOther(Foreign_Generic_Class.stringEncode)))(new Data_Symbol.IsSymbol(function () {
            return "at";
          }))(Foreign_Generic_Class.encodeWithOptionsOther(Foreign_Generic_Class.stringEncode)))));
        }

        ;
        return Control_Bind.bind(Effect.bindEffect)(Utils.incrementId(Data_Functor.mapFlipped(Effect.functorEffect)(Utils.getScreenEntryId(title))(function (id) {
          return Types_CategoryLog.baseScreenLog("screen")("info")(service)("current_screen")("overlay")(title)(id);
        })))(Utils.addAndLog(true)("screen")("screen")("current_screen")(service)(Foreign_Generic_Class.recordEncode()(Foreign_Generic_Class.encodeRecordCons()(Foreign_Generic_Class.encodeRecordCons()(Foreign_Generic_Class.encodeRecordCons()(Foreign_Generic_Class.encodeRecordCons()(Foreign_Generic_Class.encodeRecordCons()(Foreign_Generic_Class.encodeRecordCons()(Foreign_Generic_Class.encodeRecordCons()(Foreign_Generic_Class.encodeRecordCons()(Foreign_Generic_Class.encodeRecordNil)(new Data_Symbol.IsSymbol(function () {
          return "value";
        }))(Foreign_Generic_Class.encodeWithOptionsRecord()(Foreign_Generic_Class.encodeRecordCons()(Foreign_Generic_Class.encodeRecordCons()(Foreign_Generic_Class.encodeRecordCons()(Foreign_Generic_Class.encodeRecordCons()(Foreign_Generic_Class.encodeRecordNil)(new Data_Symbol.IsSymbol(function () {
          return "url";
        }))(Foreign_Generic_Class.encodeWithOptionsOther(Foreign_Generic_Class.stringEncode)))(new Data_Symbol.IsSymbol(function () {
          return "screen_name";
        }))(Foreign_Generic_Class.encodeWithOptionsOther(Foreign_Generic_Class.stringEncode)))(new Data_Symbol.IsSymbol(function () {
          return "presentation_type";
        }))(Foreign_Generic_Class.encodeWithOptionsOther(Foreign_Generic_Class.stringEncode)))(new Data_Symbol.IsSymbol(function () {
          return "id";
        }))(Foreign_Generic_Class.encodeWithOptionsOther(Foreign_Generic_Class.intEncode)))))(new Data_Symbol.IsSymbol(function () {
          return "subcategory";
        }))(Foreign_Generic_Class.encodeWithOptionsOther(Foreign_Generic_Class.stringEncode)))(new Data_Symbol.IsSymbol(function () {
          return "service";
        }))(Foreign_Generic_Class.encodeWithOptionsOther(Foreign_Generic_Class.stringEncode)))(new Data_Symbol.IsSymbol(function () {
          return "log_version";
        }))(Foreign_Generic_Class.encodeWithOptionsOther(Foreign_Generic_Class.stringEncode)))(new Data_Symbol.IsSymbol(function () {
          return "level";
        }))(Foreign_Generic_Class.encodeWithOptionsOther(Foreign_Generic_Class.stringEncode)))(new Data_Symbol.IsSymbol(function () {
          return "label";
        }))(Foreign_Generic_Class.encodeWithOptionsOther(Foreign_Generic_Class.stringEncode)))(new Data_Symbol.IsSymbol(function () {
          return "category";
        }))(Foreign_Generic_Class.encodeWithOptionsOther(Types_CategoryLog.encodeCategory)))(new Data_Symbol.IsSymbol(function () {
          return "at";
        }))(Foreign_Generic_Class.encodeWithOptionsOther(Foreign_Generic_Class.stringEncode)))));
      },
      trackScreen: function trackScreen(title) {
        if (Utils.downgradeLog) {
          return Control_Bind.bind(Effect.bindEffect)(Utils.incrementId(Utils.addScreenEntryId(title)(Types_TypeLog.baseScreenLog(service)("screen")(title))))(Utils.addAndLog(false)("screen")("screen")("current_screen")(service)(Foreign_Generic_Class.recordEncode()(Foreign_Generic_Class.encodeRecordCons()(Foreign_Generic_Class.encodeRecordCons()(Foreign_Generic_Class.encodeRecordCons()(Foreign_Generic_Class.encodeRecordCons()(Foreign_Generic_Class.encodeRecordCons()(Foreign_Generic_Class.encodeRecordCons()(Foreign_Generic_Class.encodeRecordCons()(Foreign_Generic_Class.encodeRecordNil)(new Data_Symbol.IsSymbol(function () {
            return "type";
          }))(Foreign_Generic_Class.encodeWithOptionsOther(Types_TypeLog.encodeType)))(new Data_Symbol.IsSymbol(function () {
            return "title";
          }))(Foreign_Generic_Class.encodeWithOptionsOther(Foreign_Generic_Class.stringEncode)))(new Data_Symbol.IsSymbol(function () {
            return "presentation_type";
          }))(Foreign_Generic_Class.encodeWithOptionsOther(Foreign_Generic_Class.stringEncode)))(new Data_Symbol.IsSymbol(function () {
            return "level";
          }))(Foreign_Generic_Class.encodeWithOptionsOther(Types_TypeLog.encodeLogLevel)))(new Data_Symbol.IsSymbol(function () {
            return "id";
          }))(Foreign_Generic_Class.encodeWithOptionsOther(Foreign_Generic_Class.intEncode)))(new Data_Symbol.IsSymbol(function () {
            return "category";
          }))(Foreign_Generic_Class.encodeWithOptionsOther(Foreign_Generic_Class.stringEncode)))(new Data_Symbol.IsSymbol(function () {
            return "at";
          }))(Foreign_Generic_Class.encodeWithOptionsOther(Foreign_Generic_Class.stringEncode)))));
        }

        ;
        return Control_Bind.bind(Effect.bindEffect)(Utils.incrementId(Data_Functor.mapFlipped(Effect.functorEffect)(Utils.getScreenEntryId(title))(function (id) {
          return Types_CategoryLog.baseScreenLog("screen")("info")(service)("current_screen")("screen")(title)(id);
        })))(Utils.addAndLog(true)("screen")("screen")("current_screen")(service)(Foreign_Generic_Class.recordEncode()(Foreign_Generic_Class.encodeRecordCons()(Foreign_Generic_Class.encodeRecordCons()(Foreign_Generic_Class.encodeRecordCons()(Foreign_Generic_Class.encodeRecordCons()(Foreign_Generic_Class.encodeRecordCons()(Foreign_Generic_Class.encodeRecordCons()(Foreign_Generic_Class.encodeRecordCons()(Foreign_Generic_Class.encodeRecordCons()(Foreign_Generic_Class.encodeRecordNil)(new Data_Symbol.IsSymbol(function () {
          return "value";
        }))(Foreign_Generic_Class.encodeWithOptionsRecord()(Foreign_Generic_Class.encodeRecordCons()(Foreign_Generic_Class.encodeRecordCons()(Foreign_Generic_Class.encodeRecordCons()(Foreign_Generic_Class.encodeRecordCons()(Foreign_Generic_Class.encodeRecordNil)(new Data_Symbol.IsSymbol(function () {
          return "url";
        }))(Foreign_Generic_Class.encodeWithOptionsOther(Foreign_Generic_Class.stringEncode)))(new Data_Symbol.IsSymbol(function () {
          return "screen_name";
        }))(Foreign_Generic_Class.encodeWithOptionsOther(Foreign_Generic_Class.stringEncode)))(new Data_Symbol.IsSymbol(function () {
          return "presentation_type";
        }))(Foreign_Generic_Class.encodeWithOptionsOther(Foreign_Generic_Class.stringEncode)))(new Data_Symbol.IsSymbol(function () {
          return "id";
        }))(Foreign_Generic_Class.encodeWithOptionsOther(Foreign_Generic_Class.intEncode)))))(new Data_Symbol.IsSymbol(function () {
          return "subcategory";
        }))(Foreign_Generic_Class.encodeWithOptionsOther(Foreign_Generic_Class.stringEncode)))(new Data_Symbol.IsSymbol(function () {
          return "service";
        }))(Foreign_Generic_Class.encodeWithOptionsOther(Foreign_Generic_Class.stringEncode)))(new Data_Symbol.IsSymbol(function () {
          return "log_version";
        }))(Foreign_Generic_Class.encodeWithOptionsOther(Foreign_Generic_Class.stringEncode)))(new Data_Symbol.IsSymbol(function () {
          return "level";
        }))(Foreign_Generic_Class.encodeWithOptionsOther(Foreign_Generic_Class.stringEncode)))(new Data_Symbol.IsSymbol(function () {
          return "label";
        }))(Foreign_Generic_Class.encodeWithOptionsOther(Foreign_Generic_Class.stringEncode)))(new Data_Symbol.IsSymbol(function () {
          return "category";
        }))(Foreign_Generic_Class.encodeWithOptionsOther(Types_CategoryLog.encodeCategory)))(new Data_Symbol.IsSymbol(function () {
          return "at";
        }))(Foreign_Generic_Class.encodeWithOptionsOther(Foreign_Generic_Class.stringEncode)))));
      },
      trackMicroAppVerison: function trackMicroAppVerison(version) {
        if (Utils.downgradeLog) {
          return Control_Bind.bind(Effect.bindEffect)(Utils.addId(Types_TypeLog.baseMicroApplog(service)(version)))(Utils.addAndLog(false)("context")("hypersdk")("microapp")(service)(Foreign_Generic_Class.recordEncode()(Foreign_Generic_Class.encodeRecordCons()(Foreign_Generic_Class.encodeRecordCons()(Foreign_Generic_Class.encodeRecordCons()(Foreign_Generic_Class.encodeRecordCons()(Foreign_Generic_Class.encodeRecordCons()(Foreign_Generic_Class.encodeRecordCons()(Foreign_Generic_Class.encodeRecordCons()(Foreign_Generic_Class.encodeRecordNil)(new Data_Symbol.IsSymbol(function () {
            return "version";
          }))(Foreign_Generic_Class.encodeWithOptionsOther(Foreign_Generic_Class.stringEncode)))(new Data_Symbol.IsSymbol(function () {
            return "type";
          }))(Foreign_Generic_Class.encodeWithOptionsOther(Types_TypeLog.encodeType)))(new Data_Symbol.IsSymbol(function () {
            return "name";
          }))(Foreign_Generic_Class.encodeWithOptionsOther(Foreign_Generic_Class.stringEncode)))(new Data_Symbol.IsSymbol(function () {
            return "level";
          }))(Foreign_Generic_Class.encodeWithOptionsOther(Types_TypeLog.encodeLogLevel)))(new Data_Symbol.IsSymbol(function () {
            return "id";
          }))(Foreign_Generic_Class.encodeWithOptionsOther(Foreign_Generic_Class.intEncode)))(new Data_Symbol.IsSymbol(function () {
            return "category";
          }))(Foreign_Generic_Class.encodeWithOptionsOther(Foreign_Generic_Class.stringEncode)))(new Data_Symbol.IsSymbol(function () {
            return "at";
          }))(Foreign_Generic_Class.encodeWithOptionsOther(Foreign_Generic_Class.stringEncode)))));
        }

        ;
        return Utils.addAndLog(true)("context")("hypersdk")("microapp")(service)(Foreign_Generic_Class.recordEncode()(Foreign_Generic_Class.encodeRecordCons()(Foreign_Generic_Class.encodeRecordCons()(Foreign_Generic_Class.encodeRecordCons()(Foreign_Generic_Class.encodeRecordCons()(Foreign_Generic_Class.encodeRecordCons()(Foreign_Generic_Class.encodeRecordCons()(Foreign_Generic_Class.encodeRecordCons()(Foreign_Generic_Class.encodeRecordCons()(Foreign_Generic_Class.encodeRecordNil)(new Data_Symbol.IsSymbol(function () {
          return "value";
        }))(Foreign_Generic_Class.encodeWithOptionsOther(Foreign_Generic_Class.foreignEncode)))(new Data_Symbol.IsSymbol(function () {
          return "subcategory";
        }))(Foreign_Generic_Class.encodeWithOptionsOther(Foreign_Generic_Class.stringEncode)))(new Data_Symbol.IsSymbol(function () {
          return "service";
        }))(Foreign_Generic_Class.encodeWithOptionsOther(Foreign_Generic_Class.stringEncode)))(new Data_Symbol.IsSymbol(function () {
          return "log_version";
        }))(Foreign_Generic_Class.encodeWithOptionsOther(Foreign_Generic_Class.stringEncode)))(new Data_Symbol.IsSymbol(function () {
          return "level";
        }))(Foreign_Generic_Class.encodeWithOptionsOther(Foreign_Generic_Class.stringEncode)))(new Data_Symbol.IsSymbol(function () {
          return "label";
        }))(Foreign_Generic_Class.encodeWithOptionsOther(Foreign_Generic_Class.stringEncode)))(new Data_Symbol.IsSymbol(function () {
          return "category";
        }))(Foreign_Generic_Class.encodeWithOptionsOther(Types_CategoryLog.encodeCategory)))(new Data_Symbol.IsSymbol(function () {
          return "at";
        }))(Foreign_Generic_Class.encodeWithOptionsOther(Foreign_Generic_Class.stringEncode))))(Types_CategoryLog.baseContextLog("hypersdk")("info")(service)("microapp")(Utils.getValue("micro_app_version")(version)));
      },
      trackUserError: function trackUserError(value) {
        if (Utils.downgradeLog) {
          return Control_Bind.bind(Effect.bindEffect)(Utils.addId(Types_TypeLog.baseUserErrorLog(service)(value)))(Utils.addAndLog(false)("action")("user")("error")(service)(Foreign_Generic_Class.recordEncode()(Foreign_Generic_Class.encodeRecordCons()(Foreign_Generic_Class.encodeRecordCons()(Foreign_Generic_Class.encodeRecordCons()(Foreign_Generic_Class.encodeRecordCons()(Foreign_Generic_Class.encodeRecordCons()(Foreign_Generic_Class.encodeRecordCons()(Foreign_Generic_Class.encodeRecordNil)(new Data_Symbol.IsSymbol(function () {
            return "value";
          }))(Foreign_Generic_Class.encodeWithOptionsOther(Foreign_Generic_Class.stringEncode)))(new Data_Symbol.IsSymbol(function () {
            return "type";
          }))(Foreign_Generic_Class.encodeWithOptionsOther(Types_TypeLog.encodeType)))(new Data_Symbol.IsSymbol(function () {
            return "level";
          }))(Foreign_Generic_Class.encodeWithOptionsOther(Types_TypeLog.encodeLogLevel)))(new Data_Symbol.IsSymbol(function () {
            return "id";
          }))(Foreign_Generic_Class.encodeWithOptionsOther(Foreign_Generic_Class.intEncode)))(new Data_Symbol.IsSymbol(function () {
            return "category";
          }))(Foreign_Generic_Class.encodeWithOptionsOther(Foreign_Generic_Class.stringEncode)))(new Data_Symbol.IsSymbol(function () {
            return "at";
          }))(Foreign_Generic_Class.encodeWithOptionsOther(Foreign_Generic_Class.stringEncode)))));
        }

        ;
        return Utils.addAndLog(true)("action")("user")("error")(service)(Foreign_Generic_Class.recordEncode()(Foreign_Generic_Class.encodeRecordCons()(Foreign_Generic_Class.encodeRecordCons()(Foreign_Generic_Class.encodeRecordCons()(Foreign_Generic_Class.encodeRecordCons()(Foreign_Generic_Class.encodeRecordCons()(Foreign_Generic_Class.encodeRecordCons()(Foreign_Generic_Class.encodeRecordCons()(Foreign_Generic_Class.encodeRecordCons()(Foreign_Generic_Class.encodeRecordNil)(new Data_Symbol.IsSymbol(function () {
          return "value";
        }))(Foreign_Generic_Class.encodeWithOptionsRecord()(Foreign_Generic_Class.encodeRecordCons()(Foreign_Generic_Class.encodeRecordCons()(Foreign_Generic_Class.encodeRecordNil)(new Data_Symbol.IsSymbol(function () {
          return "stacktrace";
        }))(Foreign_Generic_Class.encodeWithOptionsOther(Foreign_Generic_Class.stringEncode)))(new Data_Symbol.IsSymbol(function () {
          return "message";
        }))(Foreign_Generic_Class.encodeWithOptionsOther(Foreign_Generic_Class.stringEncode)))))(new Data_Symbol.IsSymbol(function () {
          return "subcategory";
        }))(Foreign_Generic_Class.encodeWithOptionsOther(Foreign_Generic_Class.stringEncode)))(new Data_Symbol.IsSymbol(function () {
          return "service";
        }))(Foreign_Generic_Class.encodeWithOptionsOther(Foreign_Generic_Class.stringEncode)))(new Data_Symbol.IsSymbol(function () {
          return "log_version";
        }))(Foreign_Generic_Class.encodeWithOptionsOther(Foreign_Generic_Class.stringEncode)))(new Data_Symbol.IsSymbol(function () {
          return "level";
        }))(Foreign_Generic_Class.encodeWithOptionsOther(Foreign_Generic_Class.stringEncode)))(new Data_Symbol.IsSymbol(function () {
          return "label";
        }))(Foreign_Generic_Class.encodeWithOptionsOther(Foreign_Generic_Class.stringEncode)))(new Data_Symbol.IsSymbol(function () {
          return "category";
        }))(Foreign_Generic_Class.encodeWithOptionsOther(Types_CategoryLog.encodeCategory)))(new Data_Symbol.IsSymbol(function () {
          return "at";
        }))(Foreign_Generic_Class.encodeWithOptionsOther(Foreign_Generic_Class.stringEncode))))(Types_CategoryLog.baseExceptionLog("action")("user")("error")(service)("user_error")("user_error")(value));
      },
      trackPageLoad: function trackPageLoad(url) {
        return function (start) {
          return function (end) {
            return function (status) {
              if (Utils.downgradeLog) {
                return Control_Bind.bind(Effect.bindEffect)(Utils.addId(Types_TypeLog.basePageLog(service)(url)(start)(end)(status)))(Utils.addAndLog(false)("api_call")("network")("page_load")(service)(Foreign_Generic_Class.recordEncode()(Foreign_Generic_Class.encodeRecordCons()(Foreign_Generic_Class.encodeRecordCons()(Foreign_Generic_Class.encodeRecordCons()(Foreign_Generic_Class.encodeRecordCons()(Foreign_Generic_Class.encodeRecordCons()(Foreign_Generic_Class.encodeRecordCons()(Foreign_Generic_Class.encodeRecordCons()(Foreign_Generic_Class.encodeRecordCons()(Foreign_Generic_Class.encodeRecordCons()(Foreign_Generic_Class.encodeRecordNil)(new Data_Symbol.IsSymbol(function () {
                  return "url";
                }))(Foreign_Generic_Class.encodeWithOptionsOther(Foreign_Generic_Class.stringEncode)))(new Data_Symbol.IsSymbol(function () {
                  return "type";
                }))(Foreign_Generic_Class.encodeWithOptionsOther(Types_TypeLog.encodeType)))(new Data_Symbol.IsSymbol(function () {
                  return "status_code";
                }))(Foreign_Generic_Class.encodeWithOptionsOther(Foreign_Generic_Class.intEncode)))(new Data_Symbol.IsSymbol(function () {
                  return "start_time";
                }))(Foreign_Generic_Class.encodeWithOptionsOther(Foreign_Generic_Class.intEncode)))(new Data_Symbol.IsSymbol(function () {
                  return "level";
                }))(Foreign_Generic_Class.encodeWithOptionsOther(Types_TypeLog.encodeLogLevel)))(new Data_Symbol.IsSymbol(function () {
                  return "id";
                }))(Foreign_Generic_Class.encodeWithOptionsOther(Foreign_Generic_Class.intEncode)))(new Data_Symbol.IsSymbol(function () {
                  return "end_time";
                }))(Foreign_Generic_Class.encodeWithOptionsOther(Foreign_Generic_Class.intEncode)))(new Data_Symbol.IsSymbol(function () {
                  return "category";
                }))(Foreign_Generic_Class.encodeWithOptionsOther(Foreign_Generic_Class.stringEncode)))(new Data_Symbol.IsSymbol(function () {
                  return "at";
                }))(Foreign_Generic_Class.encodeWithOptionsOther(Foreign_Generic_Class.stringEncode)))));
              }

              ;
              return Utils.addAndLog(true)("api_call")("network")("page_load")(service)(Foreign_Generic_Class.recordEncode()(Foreign_Generic_Class.encodeRecordCons()(Foreign_Generic_Class.encodeRecordCons()(Foreign_Generic_Class.encodeRecordCons()(Foreign_Generic_Class.encodeRecordCons()(Foreign_Generic_Class.encodeRecordCons()(Foreign_Generic_Class.encodeRecordCons()(Foreign_Generic_Class.encodeRecordCons()(Foreign_Generic_Class.encodeRecordCons()(Foreign_Generic_Class.encodeRecordNil)(new Data_Symbol.IsSymbol(function () {
                return "value";
              }))(Foreign_Generic_Class.encodeWithOptionsRecord()(Foreign_Generic_Class.encodeRecordCons()(Foreign_Generic_Class.encodeRecordCons()(Foreign_Generic_Class.encodeRecordCons()(Foreign_Generic_Class.encodeRecordCons()(Foreign_Generic_Class.encodeRecordCons()(Foreign_Generic_Class.encodeRecordCons()(Foreign_Generic_Class.encodeRecordCons()(Foreign_Generic_Class.encodeRecordNil)(new Data_Symbol.IsSymbol(function () {
                return "url";
              }))(Foreign_Generic_Class.encodeWithOptionsOther(Foreign_Generic_Class.stringEncode)))(new Data_Symbol.IsSymbol(function () {
                return "status_code";
              }))(Foreign_Generic_Class.encodeWithOptionsOther(Foreign_Generic_Class.intEncode)))(new Data_Symbol.IsSymbol(function () {
                return "start_time";
              }))(Foreign_Generic_Class.encodeWithOptionsOther(Foreign_Generic_Class.stringEncode)))(new Data_Symbol.IsSymbol(function () {
                return "response";
              }))(Foreign_Generic_Class.encodeWithOptionsOther(Foreign_Generic_Class.stringEncode)))(new Data_Symbol.IsSymbol(function () {
                return "payload";
              }))(Foreign_Generic_Class.encodeWithOptionsOther(Foreign_Generic_Class.stringEncode)))(new Data_Symbol.IsSymbol(function () {
                return "method";
              }))(Foreign_Generic_Class.encodeWithOptionsOther(Foreign_Generic_Class.stringEncode)))(new Data_Symbol.IsSymbol(function () {
                return "end_time";
              }))(Foreign_Generic_Class.encodeWithOptionsOther(Foreign_Generic_Class.stringEncode)))))(new Data_Symbol.IsSymbol(function () {
                return "subcategory";
              }))(Foreign_Generic_Class.encodeWithOptionsOther(Foreign_Generic_Class.stringEncode)))(new Data_Symbol.IsSymbol(function () {
                return "service";
              }))(Foreign_Generic_Class.encodeWithOptionsOther(Foreign_Generic_Class.stringEncode)))(new Data_Symbol.IsSymbol(function () {
                return "log_version";
              }))(Foreign_Generic_Class.encodeWithOptionsOther(Foreign_Generic_Class.stringEncode)))(new Data_Symbol.IsSymbol(function () {
                return "level";
              }))(Foreign_Generic_Class.encodeWithOptionsOther(Foreign_Generic_Class.stringEncode)))(new Data_Symbol.IsSymbol(function () {
                return "label";
              }))(Foreign_Generic_Class.encodeWithOptionsOther(Foreign_Generic_Class.stringEncode)))(new Data_Symbol.IsSymbol(function () {
                return "category";
              }))(Foreign_Generic_Class.encodeWithOptionsOther(Types_CategoryLog.encodeCategory)))(new Data_Symbol.IsSymbol(function () {
                return "at";
              }))(Foreign_Generic_Class.encodeWithOptionsOther(Foreign_Generic_Class.stringEncode))))(Types_CategoryLog.baseApiCallLog("network")("info")(service)("page_load")(start)(end)(status)("")(url)("")("api_request"));
            };
          };
        };
      },
      "_trackLifeCycle": function _trackLifeCycle(subcategory) {
        return function (level) {
          return function (label) {
            return function (value) {
              if (Utils.downgradeLog) {
                return Control_Bind.bind(Effect.bindEffect)(Utils.addId(Types_TypeLog.baseEventLog(service)(Types_TypeLog.levelToLogLevel(level))(label)(Foreign.unsafeFromForeign(value))))(Utils.addAndLog(false)("lifecycle")(subcategory)(label)(service)(Foreign_Generic_Class.recordEncode()(Foreign_Generic_Class.encodeRecordCons()(Foreign_Generic_Class.encodeRecordCons()(Foreign_Generic_Class.encodeRecordCons()(Foreign_Generic_Class.encodeRecordCons()(Foreign_Generic_Class.encodeRecordCons()(Foreign_Generic_Class.encodeRecordCons()(Foreign_Generic_Class.encodeRecordCons()(Foreign_Generic_Class.encodeRecordNil)(new Data_Symbol.IsSymbol(function () {
                  return "value";
                }))(Foreign_Generic_Class.encodeWithOptionsOther(Foreign_Generic_Class.stringEncode)))(new Data_Symbol.IsSymbol(function () {
                  return "type";
                }))(Foreign_Generic_Class.encodeWithOptionsOther(Types_TypeLog.encodeType)))(new Data_Symbol.IsSymbol(function () {
                  return "level";
                }))(Foreign_Generic_Class.encodeWithOptionsOther(Types_TypeLog.encodeLogLevel)))(new Data_Symbol.IsSymbol(function () {
                  return "label";
                }))(Foreign_Generic_Class.encodeWithOptionsOther(Foreign_Generic_Class.stringEncode)))(new Data_Symbol.IsSymbol(function () {
                  return "id";
                }))(Foreign_Generic_Class.encodeWithOptionsOther(Foreign_Generic_Class.intEncode)))(new Data_Symbol.IsSymbol(function () {
                  return "category";
                }))(Foreign_Generic_Class.encodeWithOptionsOther(Foreign_Generic_Class.stringEncode)))(new Data_Symbol.IsSymbol(function () {
                  return "at";
                }))(Foreign_Generic_Class.encodeWithOptionsOther(Foreign_Generic_Class.stringEncode)))));
              }

              ;
              return Utils.addAndLog(true)("lifecycle")(subcategory)(label)(service)(Foreign_Generic_Class.recordEncode()(Foreign_Generic_Class.encodeRecordCons()(Foreign_Generic_Class.encodeRecordCons()(Foreign_Generic_Class.encodeRecordCons()(Foreign_Generic_Class.encodeRecordCons()(Foreign_Generic_Class.encodeRecordCons()(Foreign_Generic_Class.encodeRecordCons()(Foreign_Generic_Class.encodeRecordCons()(Foreign_Generic_Class.encodeRecordCons()(Foreign_Generic_Class.encodeRecordNil)(new Data_Symbol.IsSymbol(function () {
                return "value";
              }))(Foreign_Generic_Class.encodeWithOptionsOther(Foreign_Generic_Class.foreignEncode)))(new Data_Symbol.IsSymbol(function () {
                return "subcategory";
              }))(Foreign_Generic_Class.encodeWithOptionsOther(Foreign_Generic_Class.stringEncode)))(new Data_Symbol.IsSymbol(function () {
                return "service";
              }))(Foreign_Generic_Class.encodeWithOptionsOther(Foreign_Generic_Class.stringEncode)))(new Data_Symbol.IsSymbol(function () {
                return "log_version";
              }))(Foreign_Generic_Class.encodeWithOptionsOther(Foreign_Generic_Class.stringEncode)))(new Data_Symbol.IsSymbol(function () {
                return "level";
              }))(Foreign_Generic_Class.encodeWithOptionsOther(Foreign_Generic_Class.stringEncode)))(new Data_Symbol.IsSymbol(function () {
                return "label";
              }))(Foreign_Generic_Class.encodeWithOptionsOther(Foreign_Generic_Class.stringEncode)))(new Data_Symbol.IsSymbol(function () {
                return "category";
              }))(Foreign_Generic_Class.encodeWithOptionsOther(Types_CategoryLog.encodeCategory)))(new Data_Symbol.IsSymbol(function () {
                return "at";
              }))(Foreign_Generic_Class.encodeWithOptionsOther(Foreign_Generic_Class.stringEncode))))(Types_CategoryLog.baseLifecycleLog(subcategory)(level)(service)(label)(value));
            };
          };
        };
      },
      "_trackAction": function _trackAction(subcategory) {
        return function (level) {
          return function (label) {
            return function (value) {
              if (Utils.downgradeLog) {
                return Control_Bind.bind(Effect.bindEffect)(Utils.addId(Types_TypeLog.baseEventLog(service)(Types_TypeLog.levelToLogLevel(level))(label)(Foreign.unsafeFromForeign(value))))(Utils.addAndLog(false)("action")(subcategory)(label)(service)(Foreign_Generic_Class.recordEncode()(Foreign_Generic_Class.encodeRecordCons()(Foreign_Generic_Class.encodeRecordCons()(Foreign_Generic_Class.encodeRecordCons()(Foreign_Generic_Class.encodeRecordCons()(Foreign_Generic_Class.encodeRecordCons()(Foreign_Generic_Class.encodeRecordCons()(Foreign_Generic_Class.encodeRecordCons()(Foreign_Generic_Class.encodeRecordNil)(new Data_Symbol.IsSymbol(function () {
                  return "value";
                }))(Foreign_Generic_Class.encodeWithOptionsOther(Foreign_Generic_Class.stringEncode)))(new Data_Symbol.IsSymbol(function () {
                  return "type";
                }))(Foreign_Generic_Class.encodeWithOptionsOther(Types_TypeLog.encodeType)))(new Data_Symbol.IsSymbol(function () {
                  return "level";
                }))(Foreign_Generic_Class.encodeWithOptionsOther(Types_TypeLog.encodeLogLevel)))(new Data_Symbol.IsSymbol(function () {
                  return "label";
                }))(Foreign_Generic_Class.encodeWithOptionsOther(Foreign_Generic_Class.stringEncode)))(new Data_Symbol.IsSymbol(function () {
                  return "id";
                }))(Foreign_Generic_Class.encodeWithOptionsOther(Foreign_Generic_Class.intEncode)))(new Data_Symbol.IsSymbol(function () {
                  return "category";
                }))(Foreign_Generic_Class.encodeWithOptionsOther(Foreign_Generic_Class.stringEncode)))(new Data_Symbol.IsSymbol(function () {
                  return "at";
                }))(Foreign_Generic_Class.encodeWithOptionsOther(Foreign_Generic_Class.stringEncode)))));
              }

              ;
              return Utils.addAndLog(true)("action")(subcategory)(label)(service)(Foreign_Generic_Class.recordEncode()(Foreign_Generic_Class.encodeRecordCons()(Foreign_Generic_Class.encodeRecordCons()(Foreign_Generic_Class.encodeRecordCons()(Foreign_Generic_Class.encodeRecordCons()(Foreign_Generic_Class.encodeRecordCons()(Foreign_Generic_Class.encodeRecordCons()(Foreign_Generic_Class.encodeRecordCons()(Foreign_Generic_Class.encodeRecordCons()(Foreign_Generic_Class.encodeRecordNil)(new Data_Symbol.IsSymbol(function () {
                return "value";
              }))(Foreign_Generic_Class.encodeWithOptionsOther(Foreign_Generic_Class.foreignEncode)))(new Data_Symbol.IsSymbol(function () {
                return "subcategory";
              }))(Foreign_Generic_Class.encodeWithOptionsOther(Foreign_Generic_Class.stringEncode)))(new Data_Symbol.IsSymbol(function () {
                return "service";
              }))(Foreign_Generic_Class.encodeWithOptionsOther(Foreign_Generic_Class.stringEncode)))(new Data_Symbol.IsSymbol(function () {
                return "log_version";
              }))(Foreign_Generic_Class.encodeWithOptionsOther(Foreign_Generic_Class.stringEncode)))(new Data_Symbol.IsSymbol(function () {
                return "level";
              }))(Foreign_Generic_Class.encodeWithOptionsOther(Foreign_Generic_Class.stringEncode)))(new Data_Symbol.IsSymbol(function () {
                return "label";
              }))(Foreign_Generic_Class.encodeWithOptionsOther(Foreign_Generic_Class.stringEncode)))(new Data_Symbol.IsSymbol(function () {
                return "category";
              }))(Foreign_Generic_Class.encodeWithOptionsOther(Types_CategoryLog.encodeCategory)))(new Data_Symbol.IsSymbol(function () {
                return "at";
              }))(Foreign_Generic_Class.encodeWithOptionsOther(Foreign_Generic_Class.stringEncode))))(Types_CategoryLog.baseActionLog(subcategory)(level)(service)(label)(value));
            };
          };
        };
      },
      "_trackApiCall": function _trackApiCall(subcategory) {
        return function (level) {
          return function (label) {
            return function (startTime) {
              return function (endTime) {
                return function (statusC) {
                  return function (response) {
                    return function (url) {
                      return function (payload) {
                        return function (method) {
                          if (Utils.downgradeLog) {
                            return Control_Bind.bind(Effect.bindEffect)(Utils.addId(Types_TypeLog.baseApiLog(service)(statusC)(startTime)(endTime)(url)(response)(payload)))(Utils.addAndLog(false)("api_call")(subcategory)(label)(service)(Foreign_Generic_Class.recordEncode()(Foreign_Generic_Class.encodeRecordCons()(Foreign_Generic_Class.encodeRecordCons()(Foreign_Generic_Class.encodeRecordCons()(Foreign_Generic_Class.encodeRecordCons()(Foreign_Generic_Class.encodeRecordCons()(Foreign_Generic_Class.encodeRecordCons()(Foreign_Generic_Class.encodeRecordCons()(Foreign_Generic_Class.encodeRecordCons()(Foreign_Generic_Class.encodeRecordCons()(Foreign_Generic_Class.encodeRecordCons()(Foreign_Generic_Class.encodeRecordCons()(Foreign_Generic_Class.encodeRecordNil)(new Data_Symbol.IsSymbol(function () {
                              return "url";
                            }))(Foreign_Generic_Class.encodeWithOptionsOther(Foreign_Generic_Class.stringEncode)))(new Data_Symbol.IsSymbol(function () {
                              return "type";
                            }))(Foreign_Generic_Class.encodeWithOptionsOther(Types_TypeLog.encodeType)))(new Data_Symbol.IsSymbol(function () {
                              return "status_code";
                            }))(Foreign_Generic_Class.encodeWithOptionsOther(Foreign_Generic_Class.intEncode)))(new Data_Symbol.IsSymbol(function () {
                              return "start_time";
                            }))(Foreign_Generic_Class.encodeWithOptionsOther(Foreign_Generic_Class.intEncode)))(new Data_Symbol.IsSymbol(function () {
                              return "response";
                            }))(Foreign_Generic_Class.encodeWithOptionsOther(Foreign_Generic_Class.stringEncode)))(new Data_Symbol.IsSymbol(function () {
                              return "payload";
                            }))(Foreign_Generic_Class.encodeWithOptionsOther(Foreign_Generic_Class.stringEncode)))(new Data_Symbol.IsSymbol(function () {
                              return "level";
                            }))(Foreign_Generic_Class.encodeWithOptionsOther(Types_TypeLog.encodeLogLevel)))(new Data_Symbol.IsSymbol(function () {
                              return "id";
                            }))(Foreign_Generic_Class.encodeWithOptionsOther(Foreign_Generic_Class.intEncode)))(new Data_Symbol.IsSymbol(function () {
                              return "end_time";
                            }))(Foreign_Generic_Class.encodeWithOptionsOther(Foreign_Generic_Class.intEncode)))(new Data_Symbol.IsSymbol(function () {
                              return "category";
                            }))(Foreign_Generic_Class.encodeWithOptionsOther(Foreign_Generic_Class.stringEncode)))(new Data_Symbol.IsSymbol(function () {
                              return "at";
                            }))(Foreign_Generic_Class.encodeWithOptionsOther(Foreign_Generic_Class.stringEncode)))));
                          }

                          ;
                          return Utils.addAndLog(true)("api_call")(subcategory)(label)(service)(Foreign_Generic_Class.recordEncode()(Foreign_Generic_Class.encodeRecordCons()(Foreign_Generic_Class.encodeRecordCons()(Foreign_Generic_Class.encodeRecordCons()(Foreign_Generic_Class.encodeRecordCons()(Foreign_Generic_Class.encodeRecordCons()(Foreign_Generic_Class.encodeRecordCons()(Foreign_Generic_Class.encodeRecordCons()(Foreign_Generic_Class.encodeRecordCons()(Foreign_Generic_Class.encodeRecordNil)(new Data_Symbol.IsSymbol(function () {
                            return "value";
                          }))(Foreign_Generic_Class.encodeWithOptionsRecord()(Foreign_Generic_Class.encodeRecordCons()(Foreign_Generic_Class.encodeRecordCons()(Foreign_Generic_Class.encodeRecordCons()(Foreign_Generic_Class.encodeRecordCons()(Foreign_Generic_Class.encodeRecordCons()(Foreign_Generic_Class.encodeRecordCons()(Foreign_Generic_Class.encodeRecordCons()(Foreign_Generic_Class.encodeRecordNil)(new Data_Symbol.IsSymbol(function () {
                            return "url";
                          }))(Foreign_Generic_Class.encodeWithOptionsOther(Foreign_Generic_Class.stringEncode)))(new Data_Symbol.IsSymbol(function () {
                            return "status_code";
                          }))(Foreign_Generic_Class.encodeWithOptionsOther(Foreign_Generic_Class.intEncode)))(new Data_Symbol.IsSymbol(function () {
                            return "start_time";
                          }))(Foreign_Generic_Class.encodeWithOptionsOther(Foreign_Generic_Class.stringEncode)))(new Data_Symbol.IsSymbol(function () {
                            return "response";
                          }))(Foreign_Generic_Class.encodeWithOptionsOther(Foreign_Generic_Class.stringEncode)))(new Data_Symbol.IsSymbol(function () {
                            return "payload";
                          }))(Foreign_Generic_Class.encodeWithOptionsOther(Foreign_Generic_Class.stringEncode)))(new Data_Symbol.IsSymbol(function () {
                            return "method";
                          }))(Foreign_Generic_Class.encodeWithOptionsOther(Foreign_Generic_Class.stringEncode)))(new Data_Symbol.IsSymbol(function () {
                            return "end_time";
                          }))(Foreign_Generic_Class.encodeWithOptionsOther(Foreign_Generic_Class.stringEncode)))))(new Data_Symbol.IsSymbol(function () {
                            return "subcategory";
                          }))(Foreign_Generic_Class.encodeWithOptionsOther(Foreign_Generic_Class.stringEncode)))(new Data_Symbol.IsSymbol(function () {
                            return "service";
                          }))(Foreign_Generic_Class.encodeWithOptionsOther(Foreign_Generic_Class.stringEncode)))(new Data_Symbol.IsSymbol(function () {
                            return "log_version";
                          }))(Foreign_Generic_Class.encodeWithOptionsOther(Foreign_Generic_Class.stringEncode)))(new Data_Symbol.IsSymbol(function () {
                            return "level";
                          }))(Foreign_Generic_Class.encodeWithOptionsOther(Foreign_Generic_Class.stringEncode)))(new Data_Symbol.IsSymbol(function () {
                            return "label";
                          }))(Foreign_Generic_Class.encodeWithOptionsOther(Foreign_Generic_Class.stringEncode)))(new Data_Symbol.IsSymbol(function () {
                            return "category";
                          }))(Foreign_Generic_Class.encodeWithOptionsOther(Types_CategoryLog.encodeCategory)))(new Data_Symbol.IsSymbol(function () {
                            return "at";
                          }))(Foreign_Generic_Class.encodeWithOptionsOther(Foreign_Generic_Class.stringEncode))))(Types_CategoryLog.baseApiCallLog(subcategory)(level)(service)("network_call")(startTime)(endTime)(statusC)(response)(url)(payload)(method));
                        };
                      };
                    };
                  };
                };
              };
            };
          };
        };
      },
      "_trackException": function _trackException(category) {
        return function (subcategory) {
          return function (label) {
            return function (msg) {
              return function (stacktrace) {
                if (Utils.downgradeLog) {
                  return Control_Bind.bind(Effect.bindEffect)(Utils.addId(Types_TypeLog.baseExceptionLog(service)(Types_TypeLog.levelToLogLevel("exception"))(label)(stacktrace)(msg)))(Utils.addAndLog(false)(category)(subcategory)(label)(service)(Foreign_Generic_Class.recordEncode()(Foreign_Generic_Class.encodeRecordCons()(Foreign_Generic_Class.encodeRecordCons()(Foreign_Generic_Class.encodeRecordCons()(Foreign_Generic_Class.encodeRecordCons()(Foreign_Generic_Class.encodeRecordCons()(Foreign_Generic_Class.encodeRecordCons()(Foreign_Generic_Class.encodeRecordCons()(Foreign_Generic_Class.encodeRecordCons()(Foreign_Generic_Class.encodeRecordNil)(new Data_Symbol.IsSymbol(function () {
                    return "type";
                  }))(Foreign_Generic_Class.encodeWithOptionsOther(Types_TypeLog.encodeType)))(new Data_Symbol.IsSymbol(function () {
                    return "stacktrace";
                  }))(Foreign_Generic_Class.encodeWithOptionsOther(Foreign_Generic_Class.stringEncode)))(new Data_Symbol.IsSymbol(function () {
                    return "message";
                  }))(Foreign_Generic_Class.encodeWithOptionsOther(Foreign_Generic_Class.stringEncode)))(new Data_Symbol.IsSymbol(function () {
                    return "level";
                  }))(Foreign_Generic_Class.encodeWithOptionsOther(Types_TypeLog.encodeLogLevel)))(new Data_Symbol.IsSymbol(function () {
                    return "id";
                  }))(Foreign_Generic_Class.encodeWithOptionsOther(Foreign_Generic_Class.intEncode)))(new Data_Symbol.IsSymbol(function () {
                    return "exception";
                  }))(Foreign_Generic_Class.encodeWithOptionsOther(Foreign_Generic_Class.stringEncode)))(new Data_Symbol.IsSymbol(function () {
                    return "category";
                  }))(Foreign_Generic_Class.encodeWithOptionsOther(Foreign_Generic_Class.stringEncode)))(new Data_Symbol.IsSymbol(function () {
                    return "at";
                  }))(Foreign_Generic_Class.encodeWithOptionsOther(Foreign_Generic_Class.stringEncode)))));
                }

                ;
                return Utils.addAndLog(true)(category)(subcategory)(label)(service)(Foreign_Generic_Class.recordEncode()(Foreign_Generic_Class.encodeRecordCons()(Foreign_Generic_Class.encodeRecordCons()(Foreign_Generic_Class.encodeRecordCons()(Foreign_Generic_Class.encodeRecordCons()(Foreign_Generic_Class.encodeRecordCons()(Foreign_Generic_Class.encodeRecordCons()(Foreign_Generic_Class.encodeRecordCons()(Foreign_Generic_Class.encodeRecordCons()(Foreign_Generic_Class.encodeRecordNil)(new Data_Symbol.IsSymbol(function () {
                  return "value";
                }))(Foreign_Generic_Class.encodeWithOptionsRecord()(Foreign_Generic_Class.encodeRecordCons()(Foreign_Generic_Class.encodeRecordCons()(Foreign_Generic_Class.encodeRecordNil)(new Data_Symbol.IsSymbol(function () {
                  return "stacktrace";
                }))(Foreign_Generic_Class.encodeWithOptionsOther(Foreign_Generic_Class.stringEncode)))(new Data_Symbol.IsSymbol(function () {
                  return "message";
                }))(Foreign_Generic_Class.encodeWithOptionsOther(Foreign_Generic_Class.stringEncode)))))(new Data_Symbol.IsSymbol(function () {
                  return "subcategory";
                }))(Foreign_Generic_Class.encodeWithOptionsOther(Foreign_Generic_Class.stringEncode)))(new Data_Symbol.IsSymbol(function () {
                  return "service";
                }))(Foreign_Generic_Class.encodeWithOptionsOther(Foreign_Generic_Class.stringEncode)))(new Data_Symbol.IsSymbol(function () {
                  return "log_version";
                }))(Foreign_Generic_Class.encodeWithOptionsOther(Foreign_Generic_Class.stringEncode)))(new Data_Symbol.IsSymbol(function () {
                  return "level";
                }))(Foreign_Generic_Class.encodeWithOptionsOther(Foreign_Generic_Class.stringEncode)))(new Data_Symbol.IsSymbol(function () {
                  return "label";
                }))(Foreign_Generic_Class.encodeWithOptionsOther(Foreign_Generic_Class.stringEncode)))(new Data_Symbol.IsSymbol(function () {
                  return "category";
                }))(Foreign_Generic_Class.encodeWithOptionsOther(Types_CategoryLog.encodeCategory)))(new Data_Symbol.IsSymbol(function () {
                  return "at";
                }))(Foreign_Generic_Class.encodeWithOptionsOther(Foreign_Generic_Class.stringEncode))))(Types_CategoryLog.baseExceptionLog(Data_String_Common.toLower(category))(subcategory)("exception")(service)(label)(msg)(stacktrace));
              };
            };
          };
        };
      },
      "_trackScreenWithLabel": function _trackScreenWithLabel(subcategory) {
        return function (level) {
          return function (label) {
            return function (presentation_type) {
              return function (screen_name) {
                if (Utils.downgradeLog) {
                  return Control_Bind.bind(Effect.bindEffect)(Utils.incrementId(Utils.addScreenEntryId(screen_name)(Types_TypeLog.baseScreenLog(service)(presentation_type)(screen_name))))(Utils.addAndLog(false)("screen")(subcategory)(label)(service)(Foreign_Generic_Class.recordEncode()(Foreign_Generic_Class.encodeRecordCons()(Foreign_Generic_Class.encodeRecordCons()(Foreign_Generic_Class.encodeRecordCons()(Foreign_Generic_Class.encodeRecordCons()(Foreign_Generic_Class.encodeRecordCons()(Foreign_Generic_Class.encodeRecordCons()(Foreign_Generic_Class.encodeRecordCons()(Foreign_Generic_Class.encodeRecordNil)(new Data_Symbol.IsSymbol(function () {
                    return "type";
                  }))(Foreign_Generic_Class.encodeWithOptionsOther(Types_TypeLog.encodeType)))(new Data_Symbol.IsSymbol(function () {
                    return "title";
                  }))(Foreign_Generic_Class.encodeWithOptionsOther(Foreign_Generic_Class.stringEncode)))(new Data_Symbol.IsSymbol(function () {
                    return "presentation_type";
                  }))(Foreign_Generic_Class.encodeWithOptionsOther(Foreign_Generic_Class.stringEncode)))(new Data_Symbol.IsSymbol(function () {
                    return "level";
                  }))(Foreign_Generic_Class.encodeWithOptionsOther(Types_TypeLog.encodeLogLevel)))(new Data_Symbol.IsSymbol(function () {
                    return "id";
                  }))(Foreign_Generic_Class.encodeWithOptionsOther(Foreign_Generic_Class.intEncode)))(new Data_Symbol.IsSymbol(function () {
                    return "category";
                  }))(Foreign_Generic_Class.encodeWithOptionsOther(Foreign_Generic_Class.stringEncode)))(new Data_Symbol.IsSymbol(function () {
                    return "at";
                  }))(Foreign_Generic_Class.encodeWithOptionsOther(Foreign_Generic_Class.stringEncode)))));
                }

                ;
                return Control_Bind.bind(Effect.bindEffect)(Utils.incrementId(Data_Functor.mapFlipped(Effect.functorEffect)(Utils.getScreenEntryId(screen_name))(function (id) {
                  return Types_CategoryLog.baseScreenLog(subcategory)(level)(service)(label)(presentation_type)(screen_name)(id);
                })))(Utils.addAndLog(true)("screen")(subcategory)(label)(service)(Foreign_Generic_Class.recordEncode()(Foreign_Generic_Class.encodeRecordCons()(Foreign_Generic_Class.encodeRecordCons()(Foreign_Generic_Class.encodeRecordCons()(Foreign_Generic_Class.encodeRecordCons()(Foreign_Generic_Class.encodeRecordCons()(Foreign_Generic_Class.encodeRecordCons()(Foreign_Generic_Class.encodeRecordCons()(Foreign_Generic_Class.encodeRecordCons()(Foreign_Generic_Class.encodeRecordNil)(new Data_Symbol.IsSymbol(function () {
                  return "value";
                }))(Foreign_Generic_Class.encodeWithOptionsRecord()(Foreign_Generic_Class.encodeRecordCons()(Foreign_Generic_Class.encodeRecordCons()(Foreign_Generic_Class.encodeRecordCons()(Foreign_Generic_Class.encodeRecordCons()(Foreign_Generic_Class.encodeRecordNil)(new Data_Symbol.IsSymbol(function () {
                  return "url";
                }))(Foreign_Generic_Class.encodeWithOptionsOther(Foreign_Generic_Class.stringEncode)))(new Data_Symbol.IsSymbol(function () {
                  return "screen_name";
                }))(Foreign_Generic_Class.encodeWithOptionsOther(Foreign_Generic_Class.stringEncode)))(new Data_Symbol.IsSymbol(function () {
                  return "presentation_type";
                }))(Foreign_Generic_Class.encodeWithOptionsOther(Foreign_Generic_Class.stringEncode)))(new Data_Symbol.IsSymbol(function () {
                  return "id";
                }))(Foreign_Generic_Class.encodeWithOptionsOther(Foreign_Generic_Class.intEncode)))))(new Data_Symbol.IsSymbol(function () {
                  return "subcategory";
                }))(Foreign_Generic_Class.encodeWithOptionsOther(Foreign_Generic_Class.stringEncode)))(new Data_Symbol.IsSymbol(function () {
                  return "service";
                }))(Foreign_Generic_Class.encodeWithOptionsOther(Foreign_Generic_Class.stringEncode)))(new Data_Symbol.IsSymbol(function () {
                  return "log_version";
                }))(Foreign_Generic_Class.encodeWithOptionsOther(Foreign_Generic_Class.stringEncode)))(new Data_Symbol.IsSymbol(function () {
                  return "level";
                }))(Foreign_Generic_Class.encodeWithOptionsOther(Foreign_Generic_Class.stringEncode)))(new Data_Symbol.IsSymbol(function () {
                  return "label";
                }))(Foreign_Generic_Class.encodeWithOptionsOther(Foreign_Generic_Class.stringEncode)))(new Data_Symbol.IsSymbol(function () {
                  return "category";
                }))(Foreign_Generic_Class.encodeWithOptionsOther(Types_CategoryLog.encodeCategory)))(new Data_Symbol.IsSymbol(function () {
                  return "at";
                }))(Foreign_Generic_Class.encodeWithOptionsOther(Foreign_Generic_Class.stringEncode)))));
              };
            };
          };
        };
      },
      "_trackContext": function _trackContext(subcategory) {
        return function (level) {
          return function (label) {
            return function (value) {
              if (Utils.downgradeLog) {
                return Control_Bind.bind(Effect.bindEffect)(Utils.addId(Types_TypeLog.baseContextLog(service)(Types_TypeLog.levelToLogLevel(level))(label)))(Utils.addAndLogContext(false)("context")(subcategory)(label)(service)(value)(Foreign_Generic_Class.recordEncode()(Foreign_Generic_Class.encodeRecordCons()(Foreign_Generic_Class.encodeRecordCons()(Foreign_Generic_Class.encodeRecordCons()(Foreign_Generic_Class.encodeRecordCons()(Foreign_Generic_Class.encodeRecordCons()(Foreign_Generic_Class.encodeRecordCons()(Foreign_Generic_Class.encodeRecordNil)(new Data_Symbol.IsSymbol(function () {
                  return "type";
                }))(Foreign_Generic_Class.encodeWithOptionsOther(Types_TypeLog.encodeType)))(new Data_Symbol.IsSymbol(function () {
                  return "level";
                }))(Foreign_Generic_Class.encodeWithOptionsOther(Types_TypeLog.encodeLogLevel)))(new Data_Symbol.IsSymbol(function () {
                  return "label";
                }))(Foreign_Generic_Class.encodeWithOptionsOther(Foreign_Generic_Class.stringEncode)))(new Data_Symbol.IsSymbol(function () {
                  return "id";
                }))(Foreign_Generic_Class.encodeWithOptionsOther(Foreign_Generic_Class.intEncode)))(new Data_Symbol.IsSymbol(function () {
                  return "category";
                }))(Foreign_Generic_Class.encodeWithOptionsOther(Foreign_Generic_Class.stringEncode)))(new Data_Symbol.IsSymbol(function () {
                  return "at";
                }))(Foreign_Generic_Class.encodeWithOptionsOther(Foreign_Generic_Class.stringEncode)))));
              }

              ;
              return Utils.addAndLog(true)("context")(subcategory)(label)(service)(Foreign_Generic_Class.recordEncode()(Foreign_Generic_Class.encodeRecordCons()(Foreign_Generic_Class.encodeRecordCons()(Foreign_Generic_Class.encodeRecordCons()(Foreign_Generic_Class.encodeRecordCons()(Foreign_Generic_Class.encodeRecordCons()(Foreign_Generic_Class.encodeRecordCons()(Foreign_Generic_Class.encodeRecordCons()(Foreign_Generic_Class.encodeRecordCons()(Foreign_Generic_Class.encodeRecordNil)(new Data_Symbol.IsSymbol(function () {
                return "value";
              }))(Foreign_Generic_Class.encodeWithOptionsOther(Foreign_Generic_Class.foreignEncode)))(new Data_Symbol.IsSymbol(function () {
                return "subcategory";
              }))(Foreign_Generic_Class.encodeWithOptionsOther(Foreign_Generic_Class.stringEncode)))(new Data_Symbol.IsSymbol(function () {
                return "service";
              }))(Foreign_Generic_Class.encodeWithOptionsOther(Foreign_Generic_Class.stringEncode)))(new Data_Symbol.IsSymbol(function () {
                return "log_version";
              }))(Foreign_Generic_Class.encodeWithOptionsOther(Foreign_Generic_Class.stringEncode)))(new Data_Symbol.IsSymbol(function () {
                return "level";
              }))(Foreign_Generic_Class.encodeWithOptionsOther(Foreign_Generic_Class.stringEncode)))(new Data_Symbol.IsSymbol(function () {
                return "label";
              }))(Foreign_Generic_Class.encodeWithOptionsOther(Foreign_Generic_Class.stringEncode)))(new Data_Symbol.IsSymbol(function () {
                return "category";
              }))(Foreign_Generic_Class.encodeWithOptionsOther(Types_CategoryLog.encodeCategory)))(new Data_Symbol.IsSymbol(function () {
                return "at";
              }))(Foreign_Generic_Class.encodeWithOptionsOther(Foreign_Generic_Class.stringEncode))))(Types_CategoryLog.baseContextLog(subcategory)(level)(service)(label)(value));
            };
          };
        };
      },
      "_trackLifeCycleEvent": function _trackLifeCycleEvent(subcategory) {
        return function (level) {
          return function (label) {
            return function (value) {
              return function (oldLabel) {
                return function (oldValue) {
                  if (Utils.downgradeLog) {
                    return Control_Bind.bind(Effect.bindEffect)(Utils.addId(Types_TypeLog.baseEventLog(service)(Types_TypeLog.INFO.value)(oldLabel)(oldValue)))(Utils.addAndLog(false)("lifecycle")(subcategory)(label)(service)(Foreign_Generic_Class.recordEncode()(Foreign_Generic_Class.encodeRecordCons()(Foreign_Generic_Class.encodeRecordCons()(Foreign_Generic_Class.encodeRecordCons()(Foreign_Generic_Class.encodeRecordCons()(Foreign_Generic_Class.encodeRecordCons()(Foreign_Generic_Class.encodeRecordCons()(Foreign_Generic_Class.encodeRecordCons()(Foreign_Generic_Class.encodeRecordNil)(new Data_Symbol.IsSymbol(function () {
                      return "value";
                    }))(Foreign_Generic_Class.encodeWithOptionsOther(Foreign_Generic_Class.stringEncode)))(new Data_Symbol.IsSymbol(function () {
                      return "type";
                    }))(Foreign_Generic_Class.encodeWithOptionsOther(Types_TypeLog.encodeType)))(new Data_Symbol.IsSymbol(function () {
                      return "level";
                    }))(Foreign_Generic_Class.encodeWithOptionsOther(Types_TypeLog.encodeLogLevel)))(new Data_Symbol.IsSymbol(function () {
                      return "label";
                    }))(Foreign_Generic_Class.encodeWithOptionsOther(Foreign_Generic_Class.stringEncode)))(new Data_Symbol.IsSymbol(function () {
                      return "id";
                    }))(Foreign_Generic_Class.encodeWithOptionsOther(Foreign_Generic_Class.intEncode)))(new Data_Symbol.IsSymbol(function () {
                      return "category";
                    }))(Foreign_Generic_Class.encodeWithOptionsOther(Foreign_Generic_Class.stringEncode)))(new Data_Symbol.IsSymbol(function () {
                      return "at";
                    }))(Foreign_Generic_Class.encodeWithOptionsOther(Foreign_Generic_Class.stringEncode)))));
                  }

                  ;
                  return Utils.addAndLog(true)("lifecycle")(subcategory)(label)(service)(Foreign_Generic_Class.recordEncode()(Foreign_Generic_Class.encodeRecordCons()(Foreign_Generic_Class.encodeRecordCons()(Foreign_Generic_Class.encodeRecordCons()(Foreign_Generic_Class.encodeRecordCons()(Foreign_Generic_Class.encodeRecordCons()(Foreign_Generic_Class.encodeRecordCons()(Foreign_Generic_Class.encodeRecordCons()(Foreign_Generic_Class.encodeRecordCons()(Foreign_Generic_Class.encodeRecordNil)(new Data_Symbol.IsSymbol(function () {
                    return "value";
                  }))(Foreign_Generic_Class.encodeWithOptionsOther(Foreign_Generic_Class.foreignEncode)))(new Data_Symbol.IsSymbol(function () {
                    return "subcategory";
                  }))(Foreign_Generic_Class.encodeWithOptionsOther(Foreign_Generic_Class.stringEncode)))(new Data_Symbol.IsSymbol(function () {
                    return "service";
                  }))(Foreign_Generic_Class.encodeWithOptionsOther(Foreign_Generic_Class.stringEncode)))(new Data_Symbol.IsSymbol(function () {
                    return "log_version";
                  }))(Foreign_Generic_Class.encodeWithOptionsOther(Foreign_Generic_Class.stringEncode)))(new Data_Symbol.IsSymbol(function () {
                    return "level";
                  }))(Foreign_Generic_Class.encodeWithOptionsOther(Foreign_Generic_Class.stringEncode)))(new Data_Symbol.IsSymbol(function () {
                    return "label";
                  }))(Foreign_Generic_Class.encodeWithOptionsOther(Foreign_Generic_Class.stringEncode)))(new Data_Symbol.IsSymbol(function () {
                    return "category";
                  }))(Foreign_Generic_Class.encodeWithOptionsOther(Types_CategoryLog.encodeCategory)))(new Data_Symbol.IsSymbol(function () {
                    return "at";
                  }))(Foreign_Generic_Class.encodeWithOptionsOther(Foreign_Generic_Class.stringEncode))))(Types_CategoryLog.baseLifecycleLog(subcategory)(level)(service)(label)(value));
                };
              };
            };
          };
        };
      },
      "_trackActionEvent": function _trackActionEvent(subcategory) {
        return function (level) {
          return function (label) {
            return function (value) {
              return function (oldLabel) {
                return function (oldValue) {
                  if (Utils.downgradeLog) {
                    return Control_Bind.bind(Effect.bindEffect)(Utils.addId(Types_TypeLog.baseEventLog(service)(Types_TypeLog.INFO.value)(oldLabel)(oldValue)))(Utils.addAndLog(false)("action")(subcategory)(label)(service)(Foreign_Generic_Class.recordEncode()(Foreign_Generic_Class.encodeRecordCons()(Foreign_Generic_Class.encodeRecordCons()(Foreign_Generic_Class.encodeRecordCons()(Foreign_Generic_Class.encodeRecordCons()(Foreign_Generic_Class.encodeRecordCons()(Foreign_Generic_Class.encodeRecordCons()(Foreign_Generic_Class.encodeRecordCons()(Foreign_Generic_Class.encodeRecordNil)(new Data_Symbol.IsSymbol(function () {
                      return "value";
                    }))(Foreign_Generic_Class.encodeWithOptionsOther(Foreign_Generic_Class.stringEncode)))(new Data_Symbol.IsSymbol(function () {
                      return "type";
                    }))(Foreign_Generic_Class.encodeWithOptionsOther(Types_TypeLog.encodeType)))(new Data_Symbol.IsSymbol(function () {
                      return "level";
                    }))(Foreign_Generic_Class.encodeWithOptionsOther(Types_TypeLog.encodeLogLevel)))(new Data_Symbol.IsSymbol(function () {
                      return "label";
                    }))(Foreign_Generic_Class.encodeWithOptionsOther(Foreign_Generic_Class.stringEncode)))(new Data_Symbol.IsSymbol(function () {
                      return "id";
                    }))(Foreign_Generic_Class.encodeWithOptionsOther(Foreign_Generic_Class.intEncode)))(new Data_Symbol.IsSymbol(function () {
                      return "category";
                    }))(Foreign_Generic_Class.encodeWithOptionsOther(Foreign_Generic_Class.stringEncode)))(new Data_Symbol.IsSymbol(function () {
                      return "at";
                    }))(Foreign_Generic_Class.encodeWithOptionsOther(Foreign_Generic_Class.stringEncode)))));
                  }

                  ;
                  return Utils.addAndLog(true)("action")(subcategory)(label)(service)(Foreign_Generic_Class.recordEncode()(Foreign_Generic_Class.encodeRecordCons()(Foreign_Generic_Class.encodeRecordCons()(Foreign_Generic_Class.encodeRecordCons()(Foreign_Generic_Class.encodeRecordCons()(Foreign_Generic_Class.encodeRecordCons()(Foreign_Generic_Class.encodeRecordCons()(Foreign_Generic_Class.encodeRecordCons()(Foreign_Generic_Class.encodeRecordCons()(Foreign_Generic_Class.encodeRecordNil)(new Data_Symbol.IsSymbol(function () {
                    return "value";
                  }))(Foreign_Generic_Class.encodeWithOptionsOther(Foreign_Generic_Class.foreignEncode)))(new Data_Symbol.IsSymbol(function () {
                    return "subcategory";
                  }))(Foreign_Generic_Class.encodeWithOptionsOther(Foreign_Generic_Class.stringEncode)))(new Data_Symbol.IsSymbol(function () {
                    return "service";
                  }))(Foreign_Generic_Class.encodeWithOptionsOther(Foreign_Generic_Class.stringEncode)))(new Data_Symbol.IsSymbol(function () {
                    return "log_version";
                  }))(Foreign_Generic_Class.encodeWithOptionsOther(Foreign_Generic_Class.stringEncode)))(new Data_Symbol.IsSymbol(function () {
                    return "level";
                  }))(Foreign_Generic_Class.encodeWithOptionsOther(Foreign_Generic_Class.stringEncode)))(new Data_Symbol.IsSymbol(function () {
                    return "label";
                  }))(Foreign_Generic_Class.encodeWithOptionsOther(Foreign_Generic_Class.stringEncode)))(new Data_Symbol.IsSymbol(function () {
                    return "category";
                  }))(Foreign_Generic_Class.encodeWithOptionsOther(Types_CategoryLog.encodeCategory)))(new Data_Symbol.IsSymbol(function () {
                    return "at";
                  }))(Foreign_Generic_Class.encodeWithOptionsOther(Foreign_Generic_Class.stringEncode))))(Types_CategoryLog.baseActionLog(subcategory)(level)(service)(label)(value));
                };
              };
            };
          };
        };
      },
      "_trackExceptionEvent": function _trackExceptionEvent(category) {
        return function (subcategory) {
          return function (label) {
            return function (msg) {
              return function (stacktrace) {
                return function (oldLabel) {
                  if (Utils.downgradeLog) {
                    return Control_Bind.bind(Effect.bindEffect)(Utils.addId(Types_TypeLog.baseExceptionLog(service)(Types_TypeLog.ERROR.value)(oldLabel)(stacktrace)(msg)))(Utils.addAndLog(false)(category)(subcategory)(label)(service)(Foreign_Generic_Class.recordEncode()(Foreign_Generic_Class.encodeRecordCons()(Foreign_Generic_Class.encodeRecordCons()(Foreign_Generic_Class.encodeRecordCons()(Foreign_Generic_Class.encodeRecordCons()(Foreign_Generic_Class.encodeRecordCons()(Foreign_Generic_Class.encodeRecordCons()(Foreign_Generic_Class.encodeRecordCons()(Foreign_Generic_Class.encodeRecordCons()(Foreign_Generic_Class.encodeRecordNil)(new Data_Symbol.IsSymbol(function () {
                      return "type";
                    }))(Foreign_Generic_Class.encodeWithOptionsOther(Types_TypeLog.encodeType)))(new Data_Symbol.IsSymbol(function () {
                      return "stacktrace";
                    }))(Foreign_Generic_Class.encodeWithOptionsOther(Foreign_Generic_Class.stringEncode)))(new Data_Symbol.IsSymbol(function () {
                      return "message";
                    }))(Foreign_Generic_Class.encodeWithOptionsOther(Foreign_Generic_Class.stringEncode)))(new Data_Symbol.IsSymbol(function () {
                      return "level";
                    }))(Foreign_Generic_Class.encodeWithOptionsOther(Types_TypeLog.encodeLogLevel)))(new Data_Symbol.IsSymbol(function () {
                      return "id";
                    }))(Foreign_Generic_Class.encodeWithOptionsOther(Foreign_Generic_Class.intEncode)))(new Data_Symbol.IsSymbol(function () {
                      return "exception";
                    }))(Foreign_Generic_Class.encodeWithOptionsOther(Foreign_Generic_Class.stringEncode)))(new Data_Symbol.IsSymbol(function () {
                      return "category";
                    }))(Foreign_Generic_Class.encodeWithOptionsOther(Foreign_Generic_Class.stringEncode)))(new Data_Symbol.IsSymbol(function () {
                      return "at";
                    }))(Foreign_Generic_Class.encodeWithOptionsOther(Foreign_Generic_Class.stringEncode)))));
                  }

                  ;
                  return Utils.addAndLog(true)(category)(subcategory)(label)(service)(Foreign_Generic_Class.recordEncode()(Foreign_Generic_Class.encodeRecordCons()(Foreign_Generic_Class.encodeRecordCons()(Foreign_Generic_Class.encodeRecordCons()(Foreign_Generic_Class.encodeRecordCons()(Foreign_Generic_Class.encodeRecordCons()(Foreign_Generic_Class.encodeRecordCons()(Foreign_Generic_Class.encodeRecordCons()(Foreign_Generic_Class.encodeRecordCons()(Foreign_Generic_Class.encodeRecordNil)(new Data_Symbol.IsSymbol(function () {
                    return "value";
                  }))(Foreign_Generic_Class.encodeWithOptionsRecord()(Foreign_Generic_Class.encodeRecordCons()(Foreign_Generic_Class.encodeRecordCons()(Foreign_Generic_Class.encodeRecordNil)(new Data_Symbol.IsSymbol(function () {
                    return "stacktrace";
                  }))(Foreign_Generic_Class.encodeWithOptionsOther(Foreign_Generic_Class.stringEncode)))(new Data_Symbol.IsSymbol(function () {
                    return "message";
                  }))(Foreign_Generic_Class.encodeWithOptionsOther(Foreign_Generic_Class.stringEncode)))))(new Data_Symbol.IsSymbol(function () {
                    return "subcategory";
                  }))(Foreign_Generic_Class.encodeWithOptionsOther(Foreign_Generic_Class.stringEncode)))(new Data_Symbol.IsSymbol(function () {
                    return "service";
                  }))(Foreign_Generic_Class.encodeWithOptionsOther(Foreign_Generic_Class.stringEncode)))(new Data_Symbol.IsSymbol(function () {
                    return "log_version";
                  }))(Foreign_Generic_Class.encodeWithOptionsOther(Foreign_Generic_Class.stringEncode)))(new Data_Symbol.IsSymbol(function () {
                    return "level";
                  }))(Foreign_Generic_Class.encodeWithOptionsOther(Foreign_Generic_Class.stringEncode)))(new Data_Symbol.IsSymbol(function () {
                    return "label";
                  }))(Foreign_Generic_Class.encodeWithOptionsOther(Foreign_Generic_Class.stringEncode)))(new Data_Symbol.IsSymbol(function () {
                    return "category";
                  }))(Foreign_Generic_Class.encodeWithOptionsOther(Types_CategoryLog.encodeCategory)))(new Data_Symbol.IsSymbol(function () {
                    return "at";
                  }))(Foreign_Generic_Class.encodeWithOptionsOther(Foreign_Generic_Class.stringEncode))))(Types_CategoryLog.baseExceptionLog(Data_String_Common.toLower(category))(subcategory)("exception")(service)(label)(msg)(stacktrace));
                };
              };
            };
          };
        };
      },
      "_trackContextEvent": function _trackContextEvent(subcategory) {
        return function (level) {
          return function (label) {
            return function (value) {
              return function (oldLabel) {
                return function (oldValue) {
                  if (Utils.downgradeLog) {
                    return Control_Bind.bind(Effect.bindEffect)(Utils.addId(Types_TypeLog.baseEventLog(service)(Types_TypeLog.INFO.value)(oldLabel)(oldValue)))(Utils.addAndLog(false)("context")(subcategory)(label)(service)(Foreign_Generic_Class.recordEncode()(Foreign_Generic_Class.encodeRecordCons()(Foreign_Generic_Class.encodeRecordCons()(Foreign_Generic_Class.encodeRecordCons()(Foreign_Generic_Class.encodeRecordCons()(Foreign_Generic_Class.encodeRecordCons()(Foreign_Generic_Class.encodeRecordCons()(Foreign_Generic_Class.encodeRecordCons()(Foreign_Generic_Class.encodeRecordNil)(new Data_Symbol.IsSymbol(function () {
                      return "value";
                    }))(Foreign_Generic_Class.encodeWithOptionsOther(Foreign_Generic_Class.stringEncode)))(new Data_Symbol.IsSymbol(function () {
                      return "type";
                    }))(Foreign_Generic_Class.encodeWithOptionsOther(Types_TypeLog.encodeType)))(new Data_Symbol.IsSymbol(function () {
                      return "level";
                    }))(Foreign_Generic_Class.encodeWithOptionsOther(Types_TypeLog.encodeLogLevel)))(new Data_Symbol.IsSymbol(function () {
                      return "label";
                    }))(Foreign_Generic_Class.encodeWithOptionsOther(Foreign_Generic_Class.stringEncode)))(new Data_Symbol.IsSymbol(function () {
                      return "id";
                    }))(Foreign_Generic_Class.encodeWithOptionsOther(Foreign_Generic_Class.intEncode)))(new Data_Symbol.IsSymbol(function () {
                      return "category";
                    }))(Foreign_Generic_Class.encodeWithOptionsOther(Foreign_Generic_Class.stringEncode)))(new Data_Symbol.IsSymbol(function () {
                      return "at";
                    }))(Foreign_Generic_Class.encodeWithOptionsOther(Foreign_Generic_Class.stringEncode)))));
                  }

                  ;
                  return Utils.addAndLog(true)("context")(subcategory)(label)(service)(Foreign_Generic_Class.recordEncode()(Foreign_Generic_Class.encodeRecordCons()(Foreign_Generic_Class.encodeRecordCons()(Foreign_Generic_Class.encodeRecordCons()(Foreign_Generic_Class.encodeRecordCons()(Foreign_Generic_Class.encodeRecordCons()(Foreign_Generic_Class.encodeRecordCons()(Foreign_Generic_Class.encodeRecordCons()(Foreign_Generic_Class.encodeRecordCons()(Foreign_Generic_Class.encodeRecordNil)(new Data_Symbol.IsSymbol(function () {
                    return "value";
                  }))(Foreign_Generic_Class.encodeWithOptionsOther(Foreign_Generic_Class.foreignEncode)))(new Data_Symbol.IsSymbol(function () {
                    return "subcategory";
                  }))(Foreign_Generic_Class.encodeWithOptionsOther(Foreign_Generic_Class.stringEncode)))(new Data_Symbol.IsSymbol(function () {
                    return "service";
                  }))(Foreign_Generic_Class.encodeWithOptionsOther(Foreign_Generic_Class.stringEncode)))(new Data_Symbol.IsSymbol(function () {
                    return "log_version";
                  }))(Foreign_Generic_Class.encodeWithOptionsOther(Foreign_Generic_Class.stringEncode)))(new Data_Symbol.IsSymbol(function () {
                    return "level";
                  }))(Foreign_Generic_Class.encodeWithOptionsOther(Foreign_Generic_Class.stringEncode)))(new Data_Symbol.IsSymbol(function () {
                    return "label";
                  }))(Foreign_Generic_Class.encodeWithOptionsOther(Foreign_Generic_Class.stringEncode)))(new Data_Symbol.IsSymbol(function () {
                    return "category";
                  }))(Foreign_Generic_Class.encodeWithOptionsOther(Types_CategoryLog.encodeCategory)))(new Data_Symbol.IsSymbol(function () {
                    return "at";
                  }))(Foreign_Generic_Class.encodeWithOptionsOther(Foreign_Generic_Class.stringEncode))))(Types_CategoryLog.baseContextLog(subcategory)(level)(service)(label)(value));
                };
              };
            };
          };
        };
      },
      "_trackScreenEvent": function _trackScreenEvent(subcategory) {
        return function (level) {
          return function (label) {
            return function (presentation_type) {
              return function (screen_name) {
                return function (oldLabel) {
                  return function (oldValue) {
                    if (Utils.downgradeLog) {
                      return Control_Bind.bind(Effect.bindEffect)(Utils.incrementId(Utils.addScreenEntryId(screen_name)(Types_TypeLog.baseEventLog(service)(Types_TypeLog.INFO.value)(oldLabel)(oldValue))))(Utils.addAndLog(false)("screen")(subcategory)(label)(service)(Foreign_Generic_Class.recordEncode()(Foreign_Generic_Class.encodeRecordCons()(Foreign_Generic_Class.encodeRecordCons()(Foreign_Generic_Class.encodeRecordCons()(Foreign_Generic_Class.encodeRecordCons()(Foreign_Generic_Class.encodeRecordCons()(Foreign_Generic_Class.encodeRecordCons()(Foreign_Generic_Class.encodeRecordCons()(Foreign_Generic_Class.encodeRecordNil)(new Data_Symbol.IsSymbol(function () {
                        return "value";
                      }))(Foreign_Generic_Class.encodeWithOptionsOther(Foreign_Generic_Class.stringEncode)))(new Data_Symbol.IsSymbol(function () {
                        return "type";
                      }))(Foreign_Generic_Class.encodeWithOptionsOther(Types_TypeLog.encodeType)))(new Data_Symbol.IsSymbol(function () {
                        return "level";
                      }))(Foreign_Generic_Class.encodeWithOptionsOther(Types_TypeLog.encodeLogLevel)))(new Data_Symbol.IsSymbol(function () {
                        return "label";
                      }))(Foreign_Generic_Class.encodeWithOptionsOther(Foreign_Generic_Class.stringEncode)))(new Data_Symbol.IsSymbol(function () {
                        return "id";
                      }))(Foreign_Generic_Class.encodeWithOptionsOther(Foreign_Generic_Class.intEncode)))(new Data_Symbol.IsSymbol(function () {
                        return "category";
                      }))(Foreign_Generic_Class.encodeWithOptionsOther(Foreign_Generic_Class.stringEncode)))(new Data_Symbol.IsSymbol(function () {
                        return "at";
                      }))(Foreign_Generic_Class.encodeWithOptionsOther(Foreign_Generic_Class.stringEncode)))));
                    }

                    ;
                    return Control_Bind.bind(Effect.bindEffect)(Utils.incrementId(Data_Functor.mapFlipped(Effect.functorEffect)(Utils.getScreenEntryId(screen_name))(function (id) {
                      return Types_CategoryLog.baseScreenLog(subcategory)(level)(service)(label)(presentation_type)(screen_name)(id);
                    })))(Utils.addAndLog(true)("screen")(subcategory)(label)(service)(Foreign_Generic_Class.recordEncode()(Foreign_Generic_Class.encodeRecordCons()(Foreign_Generic_Class.encodeRecordCons()(Foreign_Generic_Class.encodeRecordCons()(Foreign_Generic_Class.encodeRecordCons()(Foreign_Generic_Class.encodeRecordCons()(Foreign_Generic_Class.encodeRecordCons()(Foreign_Generic_Class.encodeRecordCons()(Foreign_Generic_Class.encodeRecordCons()(Foreign_Generic_Class.encodeRecordNil)(new Data_Symbol.IsSymbol(function () {
                      return "value";
                    }))(Foreign_Generic_Class.encodeWithOptionsRecord()(Foreign_Generic_Class.encodeRecordCons()(Foreign_Generic_Class.encodeRecordCons()(Foreign_Generic_Class.encodeRecordCons()(Foreign_Generic_Class.encodeRecordCons()(Foreign_Generic_Class.encodeRecordNil)(new Data_Symbol.IsSymbol(function () {
                      return "url";
                    }))(Foreign_Generic_Class.encodeWithOptionsOther(Foreign_Generic_Class.stringEncode)))(new Data_Symbol.IsSymbol(function () {
                      return "screen_name";
                    }))(Foreign_Generic_Class.encodeWithOptionsOther(Foreign_Generic_Class.stringEncode)))(new Data_Symbol.IsSymbol(function () {
                      return "presentation_type";
                    }))(Foreign_Generic_Class.encodeWithOptionsOther(Foreign_Generic_Class.stringEncode)))(new Data_Symbol.IsSymbol(function () {
                      return "id";
                    }))(Foreign_Generic_Class.encodeWithOptionsOther(Foreign_Generic_Class.intEncode)))))(new Data_Symbol.IsSymbol(function () {
                      return "subcategory";
                    }))(Foreign_Generic_Class.encodeWithOptionsOther(Foreign_Generic_Class.stringEncode)))(new Data_Symbol.IsSymbol(function () {
                      return "service";
                    }))(Foreign_Generic_Class.encodeWithOptionsOther(Foreign_Generic_Class.stringEncode)))(new Data_Symbol.IsSymbol(function () {
                      return "log_version";
                    }))(Foreign_Generic_Class.encodeWithOptionsOther(Foreign_Generic_Class.stringEncode)))(new Data_Symbol.IsSymbol(function () {
                      return "level";
                    }))(Foreign_Generic_Class.encodeWithOptionsOther(Foreign_Generic_Class.stringEncode)))(new Data_Symbol.IsSymbol(function () {
                      return "label";
                    }))(Foreign_Generic_Class.encodeWithOptionsOther(Foreign_Generic_Class.stringEncode)))(new Data_Symbol.IsSymbol(function () {
                      return "category";
                    }))(Foreign_Generic_Class.encodeWithOptionsOther(Types_CategoryLog.encodeCategory)))(new Data_Symbol.IsSymbol(function () {
                      return "at";
                    }))(Foreign_Generic_Class.encodeWithOptionsOther(Foreign_Generic_Class.stringEncode)))));
                  };
                };
              };
            };
          };
        };
      },
      "__trackLifeCycle": function __trackLifeCycle(subcategory) {
        return function (level) {
          return function (label) {
            return function (value) {
              return function (rootFgn) {
                if (Utils.downgradeLog) {
                  return Control_Bind.bind(Effect.bindEffect)(Utils.addId(Types_TypeLog.baseEventLog(service)(Types_TypeLog.levelToLogLevel(level))(label)(Foreign.unsafeFromForeign(value))))(Utils.addAndLogWithJson(false)("lifecycle")(subcategory)(label)(service)(rootFgn)(Foreign_Generic_Class.recordEncode()(Foreign_Generic_Class.encodeRecordCons()(Foreign_Generic_Class.encodeRecordCons()(Foreign_Generic_Class.encodeRecordCons()(Foreign_Generic_Class.encodeRecordCons()(Foreign_Generic_Class.encodeRecordCons()(Foreign_Generic_Class.encodeRecordCons()(Foreign_Generic_Class.encodeRecordCons()(Foreign_Generic_Class.encodeRecordNil)(new Data_Symbol.IsSymbol(function () {
                    return "value";
                  }))(Foreign_Generic_Class.encodeWithOptionsOther(Foreign_Generic_Class.stringEncode)))(new Data_Symbol.IsSymbol(function () {
                    return "type";
                  }))(Foreign_Generic_Class.encodeWithOptionsOther(Types_TypeLog.encodeType)))(new Data_Symbol.IsSymbol(function () {
                    return "level";
                  }))(Foreign_Generic_Class.encodeWithOptionsOther(Types_TypeLog.encodeLogLevel)))(new Data_Symbol.IsSymbol(function () {
                    return "label";
                  }))(Foreign_Generic_Class.encodeWithOptionsOther(Foreign_Generic_Class.stringEncode)))(new Data_Symbol.IsSymbol(function () {
                    return "id";
                  }))(Foreign_Generic_Class.encodeWithOptionsOther(Foreign_Generic_Class.intEncode)))(new Data_Symbol.IsSymbol(function () {
                    return "category";
                  }))(Foreign_Generic_Class.encodeWithOptionsOther(Foreign_Generic_Class.stringEncode)))(new Data_Symbol.IsSymbol(function () {
                    return "at";
                  }))(Foreign_Generic_Class.encodeWithOptionsOther(Foreign_Generic_Class.stringEncode)))));
                }

                ;
                return Utils.addAndLogWithJson(true)("lifecycle")(subcategory)(label)(service)(rootFgn)(Foreign_Generic_Class.recordEncode()(Foreign_Generic_Class.encodeRecordCons()(Foreign_Generic_Class.encodeRecordCons()(Foreign_Generic_Class.encodeRecordCons()(Foreign_Generic_Class.encodeRecordCons()(Foreign_Generic_Class.encodeRecordCons()(Foreign_Generic_Class.encodeRecordCons()(Foreign_Generic_Class.encodeRecordCons()(Foreign_Generic_Class.encodeRecordCons()(Foreign_Generic_Class.encodeRecordNil)(new Data_Symbol.IsSymbol(function () {
                  return "value";
                }))(Foreign_Generic_Class.encodeWithOptionsOther(Foreign_Generic_Class.foreignEncode)))(new Data_Symbol.IsSymbol(function () {
                  return "subcategory";
                }))(Foreign_Generic_Class.encodeWithOptionsOther(Foreign_Generic_Class.stringEncode)))(new Data_Symbol.IsSymbol(function () {
                  return "service";
                }))(Foreign_Generic_Class.encodeWithOptionsOther(Foreign_Generic_Class.stringEncode)))(new Data_Symbol.IsSymbol(function () {
                  return "log_version";
                }))(Foreign_Generic_Class.encodeWithOptionsOther(Foreign_Generic_Class.stringEncode)))(new Data_Symbol.IsSymbol(function () {
                  return "level";
                }))(Foreign_Generic_Class.encodeWithOptionsOther(Foreign_Generic_Class.stringEncode)))(new Data_Symbol.IsSymbol(function () {
                  return "label";
                }))(Foreign_Generic_Class.encodeWithOptionsOther(Foreign_Generic_Class.stringEncode)))(new Data_Symbol.IsSymbol(function () {
                  return "category";
                }))(Foreign_Generic_Class.encodeWithOptionsOther(Types_CategoryLog.encodeCategory)))(new Data_Symbol.IsSymbol(function () {
                  return "at";
                }))(Foreign_Generic_Class.encodeWithOptionsOther(Foreign_Generic_Class.stringEncode))))(Types_CategoryLog.baseLifecycleLog(subcategory)(level)(service)(label)(value));
              };
            };
          };
        };
      },
      "__trackAction": function __trackAction(subcategory) {
        return function (level) {
          return function (label) {
            return function (value) {
              return function (rootFgn) {
                if (Utils.downgradeLog) {
                  return Control_Bind.bind(Effect.bindEffect)(Utils.addId(Types_TypeLog.baseEventLog(service)(Types_TypeLog.levelToLogLevel(level))(label)(Foreign.unsafeFromForeign(value))))(Utils.addAndLogWithJson(false)("action")(subcategory)(label)(service)(rootFgn)(Foreign_Generic_Class.recordEncode()(Foreign_Generic_Class.encodeRecordCons()(Foreign_Generic_Class.encodeRecordCons()(Foreign_Generic_Class.encodeRecordCons()(Foreign_Generic_Class.encodeRecordCons()(Foreign_Generic_Class.encodeRecordCons()(Foreign_Generic_Class.encodeRecordCons()(Foreign_Generic_Class.encodeRecordCons()(Foreign_Generic_Class.encodeRecordNil)(new Data_Symbol.IsSymbol(function () {
                    return "value";
                  }))(Foreign_Generic_Class.encodeWithOptionsOther(Foreign_Generic_Class.stringEncode)))(new Data_Symbol.IsSymbol(function () {
                    return "type";
                  }))(Foreign_Generic_Class.encodeWithOptionsOther(Types_TypeLog.encodeType)))(new Data_Symbol.IsSymbol(function () {
                    return "level";
                  }))(Foreign_Generic_Class.encodeWithOptionsOther(Types_TypeLog.encodeLogLevel)))(new Data_Symbol.IsSymbol(function () {
                    return "label";
                  }))(Foreign_Generic_Class.encodeWithOptionsOther(Foreign_Generic_Class.stringEncode)))(new Data_Symbol.IsSymbol(function () {
                    return "id";
                  }))(Foreign_Generic_Class.encodeWithOptionsOther(Foreign_Generic_Class.intEncode)))(new Data_Symbol.IsSymbol(function () {
                    return "category";
                  }))(Foreign_Generic_Class.encodeWithOptionsOther(Foreign_Generic_Class.stringEncode)))(new Data_Symbol.IsSymbol(function () {
                    return "at";
                  }))(Foreign_Generic_Class.encodeWithOptionsOther(Foreign_Generic_Class.stringEncode)))));
                }

                ;
                return Utils.addAndLogWithJson(true)("action")(subcategory)(label)(service)(rootFgn)(Foreign_Generic_Class.recordEncode()(Foreign_Generic_Class.encodeRecordCons()(Foreign_Generic_Class.encodeRecordCons()(Foreign_Generic_Class.encodeRecordCons()(Foreign_Generic_Class.encodeRecordCons()(Foreign_Generic_Class.encodeRecordCons()(Foreign_Generic_Class.encodeRecordCons()(Foreign_Generic_Class.encodeRecordCons()(Foreign_Generic_Class.encodeRecordCons()(Foreign_Generic_Class.encodeRecordNil)(new Data_Symbol.IsSymbol(function () {
                  return "value";
                }))(Foreign_Generic_Class.encodeWithOptionsOther(Foreign_Generic_Class.foreignEncode)))(new Data_Symbol.IsSymbol(function () {
                  return "subcategory";
                }))(Foreign_Generic_Class.encodeWithOptionsOther(Foreign_Generic_Class.stringEncode)))(new Data_Symbol.IsSymbol(function () {
                  return "service";
                }))(Foreign_Generic_Class.encodeWithOptionsOther(Foreign_Generic_Class.stringEncode)))(new Data_Symbol.IsSymbol(function () {
                  return "log_version";
                }))(Foreign_Generic_Class.encodeWithOptionsOther(Foreign_Generic_Class.stringEncode)))(new Data_Symbol.IsSymbol(function () {
                  return "level";
                }))(Foreign_Generic_Class.encodeWithOptionsOther(Foreign_Generic_Class.stringEncode)))(new Data_Symbol.IsSymbol(function () {
                  return "label";
                }))(Foreign_Generic_Class.encodeWithOptionsOther(Foreign_Generic_Class.stringEncode)))(new Data_Symbol.IsSymbol(function () {
                  return "category";
                }))(Foreign_Generic_Class.encodeWithOptionsOther(Types_CategoryLog.encodeCategory)))(new Data_Symbol.IsSymbol(function () {
                  return "at";
                }))(Foreign_Generic_Class.encodeWithOptionsOther(Foreign_Generic_Class.stringEncode))))(Types_CategoryLog.baseActionLog(subcategory)(level)(service)(label)(value));
              };
            };
          };
        };
      },
      "__trackApiCall": function __trackApiCall(subcategory) {
        return function (level) {
          return function (label) {
            return function (startTime) {
              return function (endTime) {
                return function (statusC) {
                  return function (response) {
                    return function (url) {
                      return function (payload) {
                        return function (method) {
                          return function (rootFgn) {
                            if (Utils.downgradeLog) {
                              return Control_Bind.bind(Effect.bindEffect)(Utils.addId(Types_TypeLog.baseApiLog(service)(statusC)(startTime)(endTime)(url)(response)(payload)))(Utils.addAndLogWithJson(false)("api_call")(subcategory)(label)(service)(rootFgn)(Foreign_Generic_Class.recordEncode()(Foreign_Generic_Class.encodeRecordCons()(Foreign_Generic_Class.encodeRecordCons()(Foreign_Generic_Class.encodeRecordCons()(Foreign_Generic_Class.encodeRecordCons()(Foreign_Generic_Class.encodeRecordCons()(Foreign_Generic_Class.encodeRecordCons()(Foreign_Generic_Class.encodeRecordCons()(Foreign_Generic_Class.encodeRecordCons()(Foreign_Generic_Class.encodeRecordCons()(Foreign_Generic_Class.encodeRecordCons()(Foreign_Generic_Class.encodeRecordCons()(Foreign_Generic_Class.encodeRecordNil)(new Data_Symbol.IsSymbol(function () {
                                return "url";
                              }))(Foreign_Generic_Class.encodeWithOptionsOther(Foreign_Generic_Class.stringEncode)))(new Data_Symbol.IsSymbol(function () {
                                return "type";
                              }))(Foreign_Generic_Class.encodeWithOptionsOther(Types_TypeLog.encodeType)))(new Data_Symbol.IsSymbol(function () {
                                return "status_code";
                              }))(Foreign_Generic_Class.encodeWithOptionsOther(Foreign_Generic_Class.intEncode)))(new Data_Symbol.IsSymbol(function () {
                                return "start_time";
                              }))(Foreign_Generic_Class.encodeWithOptionsOther(Foreign_Generic_Class.intEncode)))(new Data_Symbol.IsSymbol(function () {
                                return "response";
                              }))(Foreign_Generic_Class.encodeWithOptionsOther(Foreign_Generic_Class.stringEncode)))(new Data_Symbol.IsSymbol(function () {
                                return "payload";
                              }))(Foreign_Generic_Class.encodeWithOptionsOther(Foreign_Generic_Class.stringEncode)))(new Data_Symbol.IsSymbol(function () {
                                return "level";
                              }))(Foreign_Generic_Class.encodeWithOptionsOther(Types_TypeLog.encodeLogLevel)))(new Data_Symbol.IsSymbol(function () {
                                return "id";
                              }))(Foreign_Generic_Class.encodeWithOptionsOther(Foreign_Generic_Class.intEncode)))(new Data_Symbol.IsSymbol(function () {
                                return "end_time";
                              }))(Foreign_Generic_Class.encodeWithOptionsOther(Foreign_Generic_Class.intEncode)))(new Data_Symbol.IsSymbol(function () {
                                return "category";
                              }))(Foreign_Generic_Class.encodeWithOptionsOther(Foreign_Generic_Class.stringEncode)))(new Data_Symbol.IsSymbol(function () {
                                return "at";
                              }))(Foreign_Generic_Class.encodeWithOptionsOther(Foreign_Generic_Class.stringEncode)))));
                            }

                            ;
                            return Utils.addAndLogWithJson(true)("api_call")(subcategory)(label)(service)(rootFgn)(Foreign_Generic_Class.recordEncode()(Foreign_Generic_Class.encodeRecordCons()(Foreign_Generic_Class.encodeRecordCons()(Foreign_Generic_Class.encodeRecordCons()(Foreign_Generic_Class.encodeRecordCons()(Foreign_Generic_Class.encodeRecordCons()(Foreign_Generic_Class.encodeRecordCons()(Foreign_Generic_Class.encodeRecordCons()(Foreign_Generic_Class.encodeRecordCons()(Foreign_Generic_Class.encodeRecordNil)(new Data_Symbol.IsSymbol(function () {
                              return "value";
                            }))(Foreign_Generic_Class.encodeWithOptionsRecord()(Foreign_Generic_Class.encodeRecordCons()(Foreign_Generic_Class.encodeRecordCons()(Foreign_Generic_Class.encodeRecordCons()(Foreign_Generic_Class.encodeRecordCons()(Foreign_Generic_Class.encodeRecordCons()(Foreign_Generic_Class.encodeRecordCons()(Foreign_Generic_Class.encodeRecordCons()(Foreign_Generic_Class.encodeRecordNil)(new Data_Symbol.IsSymbol(function () {
                              return "url";
                            }))(Foreign_Generic_Class.encodeWithOptionsOther(Foreign_Generic_Class.stringEncode)))(new Data_Symbol.IsSymbol(function () {
                              return "status_code";
                            }))(Foreign_Generic_Class.encodeWithOptionsOther(Foreign_Generic_Class.intEncode)))(new Data_Symbol.IsSymbol(function () {
                              return "start_time";
                            }))(Foreign_Generic_Class.encodeWithOptionsOther(Foreign_Generic_Class.stringEncode)))(new Data_Symbol.IsSymbol(function () {
                              return "response";
                            }))(Foreign_Generic_Class.encodeWithOptionsOther(Foreign_Generic_Class.stringEncode)))(new Data_Symbol.IsSymbol(function () {
                              return "payload";
                            }))(Foreign_Generic_Class.encodeWithOptionsOther(Foreign_Generic_Class.stringEncode)))(new Data_Symbol.IsSymbol(function () {
                              return "method";
                            }))(Foreign_Generic_Class.encodeWithOptionsOther(Foreign_Generic_Class.stringEncode)))(new Data_Symbol.IsSymbol(function () {
                              return "end_time";
                            }))(Foreign_Generic_Class.encodeWithOptionsOther(Foreign_Generic_Class.stringEncode)))))(new Data_Symbol.IsSymbol(function () {
                              return "subcategory";
                            }))(Foreign_Generic_Class.encodeWithOptionsOther(Foreign_Generic_Class.stringEncode)))(new Data_Symbol.IsSymbol(function () {
                              return "service";
                            }))(Foreign_Generic_Class.encodeWithOptionsOther(Foreign_Generic_Class.stringEncode)))(new Data_Symbol.IsSymbol(function () {
                              return "log_version";
                            }))(Foreign_Generic_Class.encodeWithOptionsOther(Foreign_Generic_Class.stringEncode)))(new Data_Symbol.IsSymbol(function () {
                              return "level";
                            }))(Foreign_Generic_Class.encodeWithOptionsOther(Foreign_Generic_Class.stringEncode)))(new Data_Symbol.IsSymbol(function () {
                              return "label";
                            }))(Foreign_Generic_Class.encodeWithOptionsOther(Foreign_Generic_Class.stringEncode)))(new Data_Symbol.IsSymbol(function () {
                              return "category";
                            }))(Foreign_Generic_Class.encodeWithOptionsOther(Types_CategoryLog.encodeCategory)))(new Data_Symbol.IsSymbol(function () {
                              return "at";
                            }))(Foreign_Generic_Class.encodeWithOptionsOther(Foreign_Generic_Class.stringEncode))))(Types_CategoryLog.baseApiCallLog(subcategory)(level)(service)("network_call")(startTime)(endTime)(statusC)(response)(url)(payload)(method));
                          };
                        };
                      };
                    };
                  };
                };
              };
            };
          };
        };
      },
      "__trackException": function __trackException(category) {
        return function (subcategory) {
          return function (label) {
            return function (msg) {
              return function (stacktrace) {
                return function (rootFgn) {
                  if (Utils.downgradeLog) {
                    return Control_Bind.bind(Effect.bindEffect)(Utils.addId(Types_TypeLog.baseExceptionLog(service)(Types_TypeLog.levelToLogLevel("exception"))(label)(stacktrace)(msg)))(Utils.addAndLogWithJson(false)(category)(subcategory)(label)(service)(rootFgn)(Foreign_Generic_Class.recordEncode()(Foreign_Generic_Class.encodeRecordCons()(Foreign_Generic_Class.encodeRecordCons()(Foreign_Generic_Class.encodeRecordCons()(Foreign_Generic_Class.encodeRecordCons()(Foreign_Generic_Class.encodeRecordCons()(Foreign_Generic_Class.encodeRecordCons()(Foreign_Generic_Class.encodeRecordCons()(Foreign_Generic_Class.encodeRecordCons()(Foreign_Generic_Class.encodeRecordNil)(new Data_Symbol.IsSymbol(function () {
                      return "type";
                    }))(Foreign_Generic_Class.encodeWithOptionsOther(Types_TypeLog.encodeType)))(new Data_Symbol.IsSymbol(function () {
                      return "stacktrace";
                    }))(Foreign_Generic_Class.encodeWithOptionsOther(Foreign_Generic_Class.stringEncode)))(new Data_Symbol.IsSymbol(function () {
                      return "message";
                    }))(Foreign_Generic_Class.encodeWithOptionsOther(Foreign_Generic_Class.stringEncode)))(new Data_Symbol.IsSymbol(function () {
                      return "level";
                    }))(Foreign_Generic_Class.encodeWithOptionsOther(Types_TypeLog.encodeLogLevel)))(new Data_Symbol.IsSymbol(function () {
                      return "id";
                    }))(Foreign_Generic_Class.encodeWithOptionsOther(Foreign_Generic_Class.intEncode)))(new Data_Symbol.IsSymbol(function () {
                      return "exception";
                    }))(Foreign_Generic_Class.encodeWithOptionsOther(Foreign_Generic_Class.stringEncode)))(new Data_Symbol.IsSymbol(function () {
                      return "category";
                    }))(Foreign_Generic_Class.encodeWithOptionsOther(Foreign_Generic_Class.stringEncode)))(new Data_Symbol.IsSymbol(function () {
                      return "at";
                    }))(Foreign_Generic_Class.encodeWithOptionsOther(Foreign_Generic_Class.stringEncode)))));
                  }

                  ;
                  return Utils.addAndLogWithJson(true)(category)(subcategory)(label)(service)(rootFgn)(Foreign_Generic_Class.recordEncode()(Foreign_Generic_Class.encodeRecordCons()(Foreign_Generic_Class.encodeRecordCons()(Foreign_Generic_Class.encodeRecordCons()(Foreign_Generic_Class.encodeRecordCons()(Foreign_Generic_Class.encodeRecordCons()(Foreign_Generic_Class.encodeRecordCons()(Foreign_Generic_Class.encodeRecordCons()(Foreign_Generic_Class.encodeRecordCons()(Foreign_Generic_Class.encodeRecordNil)(new Data_Symbol.IsSymbol(function () {
                    return "value";
                  }))(Foreign_Generic_Class.encodeWithOptionsRecord()(Foreign_Generic_Class.encodeRecordCons()(Foreign_Generic_Class.encodeRecordCons()(Foreign_Generic_Class.encodeRecordNil)(new Data_Symbol.IsSymbol(function () {
                    return "stacktrace";
                  }))(Foreign_Generic_Class.encodeWithOptionsOther(Foreign_Generic_Class.stringEncode)))(new Data_Symbol.IsSymbol(function () {
                    return "message";
                  }))(Foreign_Generic_Class.encodeWithOptionsOther(Foreign_Generic_Class.stringEncode)))))(new Data_Symbol.IsSymbol(function () {
                    return "subcategory";
                  }))(Foreign_Generic_Class.encodeWithOptionsOther(Foreign_Generic_Class.stringEncode)))(new Data_Symbol.IsSymbol(function () {
                    return "service";
                  }))(Foreign_Generic_Class.encodeWithOptionsOther(Foreign_Generic_Class.stringEncode)))(new Data_Symbol.IsSymbol(function () {
                    return "log_version";
                  }))(Foreign_Generic_Class.encodeWithOptionsOther(Foreign_Generic_Class.stringEncode)))(new Data_Symbol.IsSymbol(function () {
                    return "level";
                  }))(Foreign_Generic_Class.encodeWithOptionsOther(Foreign_Generic_Class.stringEncode)))(new Data_Symbol.IsSymbol(function () {
                    return "label";
                  }))(Foreign_Generic_Class.encodeWithOptionsOther(Foreign_Generic_Class.stringEncode)))(new Data_Symbol.IsSymbol(function () {
                    return "category";
                  }))(Foreign_Generic_Class.encodeWithOptionsOther(Types_CategoryLog.encodeCategory)))(new Data_Symbol.IsSymbol(function () {
                    return "at";
                  }))(Foreign_Generic_Class.encodeWithOptionsOther(Foreign_Generic_Class.stringEncode))))(Types_CategoryLog.baseExceptionLog(Data_String_Common.toLower(category))(subcategory)("exception")(service)(label)(msg)(stacktrace));
                };
              };
            };
          };
        };
      },
      "__trackScreenWithLabel": function __trackScreenWithLabel(subcategory) {
        return function (level) {
          return function (label) {
            return function (presentation_type) {
              return function (screen_name) {
                return function (rootFgn) {
                  if (Utils.downgradeLog) {
                    return Control_Bind.bind(Effect.bindEffect)(Utils.incrementId(Utils.addScreenEntryId(screen_name)(Types_TypeLog.baseScreenLog(service)(presentation_type)(screen_name))))(Utils.addAndLogWithJson(false)("screen")(subcategory)(label)(service)(rootFgn)(Foreign_Generic_Class.recordEncode()(Foreign_Generic_Class.encodeRecordCons()(Foreign_Generic_Class.encodeRecordCons()(Foreign_Generic_Class.encodeRecordCons()(Foreign_Generic_Class.encodeRecordCons()(Foreign_Generic_Class.encodeRecordCons()(Foreign_Generic_Class.encodeRecordCons()(Foreign_Generic_Class.encodeRecordCons()(Foreign_Generic_Class.encodeRecordNil)(new Data_Symbol.IsSymbol(function () {
                      return "type";
                    }))(Foreign_Generic_Class.encodeWithOptionsOther(Types_TypeLog.encodeType)))(new Data_Symbol.IsSymbol(function () {
                      return "title";
                    }))(Foreign_Generic_Class.encodeWithOptionsOther(Foreign_Generic_Class.stringEncode)))(new Data_Symbol.IsSymbol(function () {
                      return "presentation_type";
                    }))(Foreign_Generic_Class.encodeWithOptionsOther(Foreign_Generic_Class.stringEncode)))(new Data_Symbol.IsSymbol(function () {
                      return "level";
                    }))(Foreign_Generic_Class.encodeWithOptionsOther(Types_TypeLog.encodeLogLevel)))(new Data_Symbol.IsSymbol(function () {
                      return "id";
                    }))(Foreign_Generic_Class.encodeWithOptionsOther(Foreign_Generic_Class.intEncode)))(new Data_Symbol.IsSymbol(function () {
                      return "category";
                    }))(Foreign_Generic_Class.encodeWithOptionsOther(Foreign_Generic_Class.stringEncode)))(new Data_Symbol.IsSymbol(function () {
                      return "at";
                    }))(Foreign_Generic_Class.encodeWithOptionsOther(Foreign_Generic_Class.stringEncode)))));
                  }

                  ;
                  return Control_Bind.bind(Effect.bindEffect)(Utils.incrementId(Data_Functor.mapFlipped(Effect.functorEffect)(Utils.getScreenEntryId(screen_name))(function (id) {
                    return Types_CategoryLog.baseScreenLog(subcategory)(level)(service)(label)(presentation_type)(screen_name)(id);
                  })))(Utils.addAndLogWithJson(true)("screen")(subcategory)(label)(service)(rootFgn)(Foreign_Generic_Class.recordEncode()(Foreign_Generic_Class.encodeRecordCons()(Foreign_Generic_Class.encodeRecordCons()(Foreign_Generic_Class.encodeRecordCons()(Foreign_Generic_Class.encodeRecordCons()(Foreign_Generic_Class.encodeRecordCons()(Foreign_Generic_Class.encodeRecordCons()(Foreign_Generic_Class.encodeRecordCons()(Foreign_Generic_Class.encodeRecordCons()(Foreign_Generic_Class.encodeRecordNil)(new Data_Symbol.IsSymbol(function () {
                    return "value";
                  }))(Foreign_Generic_Class.encodeWithOptionsRecord()(Foreign_Generic_Class.encodeRecordCons()(Foreign_Generic_Class.encodeRecordCons()(Foreign_Generic_Class.encodeRecordCons()(Foreign_Generic_Class.encodeRecordCons()(Foreign_Generic_Class.encodeRecordNil)(new Data_Symbol.IsSymbol(function () {
                    return "url";
                  }))(Foreign_Generic_Class.encodeWithOptionsOther(Foreign_Generic_Class.stringEncode)))(new Data_Symbol.IsSymbol(function () {
                    return "screen_name";
                  }))(Foreign_Generic_Class.encodeWithOptionsOther(Foreign_Generic_Class.stringEncode)))(new Data_Symbol.IsSymbol(function () {
                    return "presentation_type";
                  }))(Foreign_Generic_Class.encodeWithOptionsOther(Foreign_Generic_Class.stringEncode)))(new Data_Symbol.IsSymbol(function () {
                    return "id";
                  }))(Foreign_Generic_Class.encodeWithOptionsOther(Foreign_Generic_Class.intEncode)))))(new Data_Symbol.IsSymbol(function () {
                    return "subcategory";
                  }))(Foreign_Generic_Class.encodeWithOptionsOther(Foreign_Generic_Class.stringEncode)))(new Data_Symbol.IsSymbol(function () {
                    return "service";
                  }))(Foreign_Generic_Class.encodeWithOptionsOther(Foreign_Generic_Class.stringEncode)))(new Data_Symbol.IsSymbol(function () {
                    return "log_version";
                  }))(Foreign_Generic_Class.encodeWithOptionsOther(Foreign_Generic_Class.stringEncode)))(new Data_Symbol.IsSymbol(function () {
                    return "level";
                  }))(Foreign_Generic_Class.encodeWithOptionsOther(Foreign_Generic_Class.stringEncode)))(new Data_Symbol.IsSymbol(function () {
                    return "label";
                  }))(Foreign_Generic_Class.encodeWithOptionsOther(Foreign_Generic_Class.stringEncode)))(new Data_Symbol.IsSymbol(function () {
                    return "category";
                  }))(Foreign_Generic_Class.encodeWithOptionsOther(Types_CategoryLog.encodeCategory)))(new Data_Symbol.IsSymbol(function () {
                    return "at";
                  }))(Foreign_Generic_Class.encodeWithOptionsOther(Foreign_Generic_Class.stringEncode)))));
                };
              };
            };
          };
        };
      },
      "__trackContext": function __trackContext(subcategory) {
        return function (level) {
          return function (label) {
            return function (value) {
              return function (rootFgn) {
                if (Utils.downgradeLog) {
                  return Control_Bind.bind(Effect.bindEffect)(Utils.addId(Types_TypeLog.baseContextLog(service)(Types_TypeLog.levelToLogLevel(level))(label)))(Utils.addAndLogContextWithJson(false)("context")(subcategory)(label)(service)(value)(rootFgn)(Foreign_Generic_Class.recordEncode()(Foreign_Generic_Class.encodeRecordCons()(Foreign_Generic_Class.encodeRecordCons()(Foreign_Generic_Class.encodeRecordCons()(Foreign_Generic_Class.encodeRecordCons()(Foreign_Generic_Class.encodeRecordCons()(Foreign_Generic_Class.encodeRecordCons()(Foreign_Generic_Class.encodeRecordNil)(new Data_Symbol.IsSymbol(function () {
                    return "type";
                  }))(Foreign_Generic_Class.encodeWithOptionsOther(Types_TypeLog.encodeType)))(new Data_Symbol.IsSymbol(function () {
                    return "level";
                  }))(Foreign_Generic_Class.encodeWithOptionsOther(Types_TypeLog.encodeLogLevel)))(new Data_Symbol.IsSymbol(function () {
                    return "label";
                  }))(Foreign_Generic_Class.encodeWithOptionsOther(Foreign_Generic_Class.stringEncode)))(new Data_Symbol.IsSymbol(function () {
                    return "id";
                  }))(Foreign_Generic_Class.encodeWithOptionsOther(Foreign_Generic_Class.intEncode)))(new Data_Symbol.IsSymbol(function () {
                    return "category";
                  }))(Foreign_Generic_Class.encodeWithOptionsOther(Foreign_Generic_Class.stringEncode)))(new Data_Symbol.IsSymbol(function () {
                    return "at";
                  }))(Foreign_Generic_Class.encodeWithOptionsOther(Foreign_Generic_Class.stringEncode)))));
                }

                ;
                return Utils.addAndLogWithJson(true)("context")(subcategory)(label)(service)(rootFgn)(Foreign_Generic_Class.recordEncode()(Foreign_Generic_Class.encodeRecordCons()(Foreign_Generic_Class.encodeRecordCons()(Foreign_Generic_Class.encodeRecordCons()(Foreign_Generic_Class.encodeRecordCons()(Foreign_Generic_Class.encodeRecordCons()(Foreign_Generic_Class.encodeRecordCons()(Foreign_Generic_Class.encodeRecordCons()(Foreign_Generic_Class.encodeRecordCons()(Foreign_Generic_Class.encodeRecordNil)(new Data_Symbol.IsSymbol(function () {
                  return "value";
                }))(Foreign_Generic_Class.encodeWithOptionsOther(Foreign_Generic_Class.foreignEncode)))(new Data_Symbol.IsSymbol(function () {
                  return "subcategory";
                }))(Foreign_Generic_Class.encodeWithOptionsOther(Foreign_Generic_Class.stringEncode)))(new Data_Symbol.IsSymbol(function () {
                  return "service";
                }))(Foreign_Generic_Class.encodeWithOptionsOther(Foreign_Generic_Class.stringEncode)))(new Data_Symbol.IsSymbol(function () {
                  return "log_version";
                }))(Foreign_Generic_Class.encodeWithOptionsOther(Foreign_Generic_Class.stringEncode)))(new Data_Symbol.IsSymbol(function () {
                  return "level";
                }))(Foreign_Generic_Class.encodeWithOptionsOther(Foreign_Generic_Class.stringEncode)))(new Data_Symbol.IsSymbol(function () {
                  return "label";
                }))(Foreign_Generic_Class.encodeWithOptionsOther(Foreign_Generic_Class.stringEncode)))(new Data_Symbol.IsSymbol(function () {
                  return "category";
                }))(Foreign_Generic_Class.encodeWithOptionsOther(Types_CategoryLog.encodeCategory)))(new Data_Symbol.IsSymbol(function () {
                  return "at";
                }))(Foreign_Generic_Class.encodeWithOptionsOther(Foreign_Generic_Class.stringEncode))))(Types_CategoryLog.baseContextLog(subcategory)(level)(service)(label)(value));
              };
            };
          };
        };
      },
      "__trackLifeCycleEvent": function __trackLifeCycleEvent(subcategory) {
        return function (level) {
          return function (label) {
            return function (value) {
              return function (oldLabel) {
                return function (oldValue) {
                  return function (rootFgn) {
                    if (Utils.downgradeLog) {
                      return Control_Bind.bind(Effect.bindEffect)(Utils.addId(Types_TypeLog.baseEventLog(service)(Types_TypeLog.INFO.value)(oldLabel)(oldValue)))(Utils.addAndLogWithJson(false)("lifecycle")(subcategory)(label)(service)(rootFgn)(Foreign_Generic_Class.recordEncode()(Foreign_Generic_Class.encodeRecordCons()(Foreign_Generic_Class.encodeRecordCons()(Foreign_Generic_Class.encodeRecordCons()(Foreign_Generic_Class.encodeRecordCons()(Foreign_Generic_Class.encodeRecordCons()(Foreign_Generic_Class.encodeRecordCons()(Foreign_Generic_Class.encodeRecordCons()(Foreign_Generic_Class.encodeRecordNil)(new Data_Symbol.IsSymbol(function () {
                        return "value";
                      }))(Foreign_Generic_Class.encodeWithOptionsOther(Foreign_Generic_Class.stringEncode)))(new Data_Symbol.IsSymbol(function () {
                        return "type";
                      }))(Foreign_Generic_Class.encodeWithOptionsOther(Types_TypeLog.encodeType)))(new Data_Symbol.IsSymbol(function () {
                        return "level";
                      }))(Foreign_Generic_Class.encodeWithOptionsOther(Types_TypeLog.encodeLogLevel)))(new Data_Symbol.IsSymbol(function () {
                        return "label";
                      }))(Foreign_Generic_Class.encodeWithOptionsOther(Foreign_Generic_Class.stringEncode)))(new Data_Symbol.IsSymbol(function () {
                        return "id";
                      }))(Foreign_Generic_Class.encodeWithOptionsOther(Foreign_Generic_Class.intEncode)))(new Data_Symbol.IsSymbol(function () {
                        return "category";
                      }))(Foreign_Generic_Class.encodeWithOptionsOther(Foreign_Generic_Class.stringEncode)))(new Data_Symbol.IsSymbol(function () {
                        return "at";
                      }))(Foreign_Generic_Class.encodeWithOptionsOther(Foreign_Generic_Class.stringEncode)))));
                    }

                    ;
                    return Utils.addAndLogWithJson(true)("lifecycle")(subcategory)(label)(service)(rootFgn)(Foreign_Generic_Class.recordEncode()(Foreign_Generic_Class.encodeRecordCons()(Foreign_Generic_Class.encodeRecordCons()(Foreign_Generic_Class.encodeRecordCons()(Foreign_Generic_Class.encodeRecordCons()(Foreign_Generic_Class.encodeRecordCons()(Foreign_Generic_Class.encodeRecordCons()(Foreign_Generic_Class.encodeRecordCons()(Foreign_Generic_Class.encodeRecordCons()(Foreign_Generic_Class.encodeRecordNil)(new Data_Symbol.IsSymbol(function () {
                      return "value";
                    }))(Foreign_Generic_Class.encodeWithOptionsOther(Foreign_Generic_Class.foreignEncode)))(new Data_Symbol.IsSymbol(function () {
                      return "subcategory";
                    }))(Foreign_Generic_Class.encodeWithOptionsOther(Foreign_Generic_Class.stringEncode)))(new Data_Symbol.IsSymbol(function () {
                      return "service";
                    }))(Foreign_Generic_Class.encodeWithOptionsOther(Foreign_Generic_Class.stringEncode)))(new Data_Symbol.IsSymbol(function () {
                      return "log_version";
                    }))(Foreign_Generic_Class.encodeWithOptionsOther(Foreign_Generic_Class.stringEncode)))(new Data_Symbol.IsSymbol(function () {
                      return "level";
                    }))(Foreign_Generic_Class.encodeWithOptionsOther(Foreign_Generic_Class.stringEncode)))(new Data_Symbol.IsSymbol(function () {
                      return "label";
                    }))(Foreign_Generic_Class.encodeWithOptionsOther(Foreign_Generic_Class.stringEncode)))(new Data_Symbol.IsSymbol(function () {
                      return "category";
                    }))(Foreign_Generic_Class.encodeWithOptionsOther(Types_CategoryLog.encodeCategory)))(new Data_Symbol.IsSymbol(function () {
                      return "at";
                    }))(Foreign_Generic_Class.encodeWithOptionsOther(Foreign_Generic_Class.stringEncode))))(Types_CategoryLog.baseLifecycleLog(subcategory)(level)(service)(label)(value));
                  };
                };
              };
            };
          };
        };
      },
      "__trackActionEvent": function __trackActionEvent(subcategory) {
        return function (level) {
          return function (label) {
            return function (value) {
              return function (oldLabel) {
                return function (oldValue) {
                  return function (rootFgn) {
                    if (Utils.downgradeLog) {
                      return Control_Bind.bind(Effect.bindEffect)(Utils.addId(Types_TypeLog.baseEventLog(service)(Types_TypeLog.INFO.value)(oldLabel)(oldValue)))(Utils.addAndLogWithJson(false)("action")(subcategory)(label)(service)(rootFgn)(Foreign_Generic_Class.recordEncode()(Foreign_Generic_Class.encodeRecordCons()(Foreign_Generic_Class.encodeRecordCons()(Foreign_Generic_Class.encodeRecordCons()(Foreign_Generic_Class.encodeRecordCons()(Foreign_Generic_Class.encodeRecordCons()(Foreign_Generic_Class.encodeRecordCons()(Foreign_Generic_Class.encodeRecordCons()(Foreign_Generic_Class.encodeRecordNil)(new Data_Symbol.IsSymbol(function () {
                        return "value";
                      }))(Foreign_Generic_Class.encodeWithOptionsOther(Foreign_Generic_Class.stringEncode)))(new Data_Symbol.IsSymbol(function () {
                        return "type";
                      }))(Foreign_Generic_Class.encodeWithOptionsOther(Types_TypeLog.encodeType)))(new Data_Symbol.IsSymbol(function () {
                        return "level";
                      }))(Foreign_Generic_Class.encodeWithOptionsOther(Types_TypeLog.encodeLogLevel)))(new Data_Symbol.IsSymbol(function () {
                        return "label";
                      }))(Foreign_Generic_Class.encodeWithOptionsOther(Foreign_Generic_Class.stringEncode)))(new Data_Symbol.IsSymbol(function () {
                        return "id";
                      }))(Foreign_Generic_Class.encodeWithOptionsOther(Foreign_Generic_Class.intEncode)))(new Data_Symbol.IsSymbol(function () {
                        return "category";
                      }))(Foreign_Generic_Class.encodeWithOptionsOther(Foreign_Generic_Class.stringEncode)))(new Data_Symbol.IsSymbol(function () {
                        return "at";
                      }))(Foreign_Generic_Class.encodeWithOptionsOther(Foreign_Generic_Class.stringEncode)))));
                    }

                    ;
                    return Utils.addAndLogWithJson(true)("action")(subcategory)(label)(service)(rootFgn)(Foreign_Generic_Class.recordEncode()(Foreign_Generic_Class.encodeRecordCons()(Foreign_Generic_Class.encodeRecordCons()(Foreign_Generic_Class.encodeRecordCons()(Foreign_Generic_Class.encodeRecordCons()(Foreign_Generic_Class.encodeRecordCons()(Foreign_Generic_Class.encodeRecordCons()(Foreign_Generic_Class.encodeRecordCons()(Foreign_Generic_Class.encodeRecordCons()(Foreign_Generic_Class.encodeRecordNil)(new Data_Symbol.IsSymbol(function () {
                      return "value";
                    }))(Foreign_Generic_Class.encodeWithOptionsOther(Foreign_Generic_Class.foreignEncode)))(new Data_Symbol.IsSymbol(function () {
                      return "subcategory";
                    }))(Foreign_Generic_Class.encodeWithOptionsOther(Foreign_Generic_Class.stringEncode)))(new Data_Symbol.IsSymbol(function () {
                      return "service";
                    }))(Foreign_Generic_Class.encodeWithOptionsOther(Foreign_Generic_Class.stringEncode)))(new Data_Symbol.IsSymbol(function () {
                      return "log_version";
                    }))(Foreign_Generic_Class.encodeWithOptionsOther(Foreign_Generic_Class.stringEncode)))(new Data_Symbol.IsSymbol(function () {
                      return "level";
                    }))(Foreign_Generic_Class.encodeWithOptionsOther(Foreign_Generic_Class.stringEncode)))(new Data_Symbol.IsSymbol(function () {
                      return "label";
                    }))(Foreign_Generic_Class.encodeWithOptionsOther(Foreign_Generic_Class.stringEncode)))(new Data_Symbol.IsSymbol(function () {
                      return "category";
                    }))(Foreign_Generic_Class.encodeWithOptionsOther(Types_CategoryLog.encodeCategory)))(new Data_Symbol.IsSymbol(function () {
                      return "at";
                    }))(Foreign_Generic_Class.encodeWithOptionsOther(Foreign_Generic_Class.stringEncode))))(Types_CategoryLog.baseActionLog(subcategory)(level)(service)(label)(value));
                  };
                };
              };
            };
          };
        };
      },
      "__trackExceptionEvent": function __trackExceptionEvent(category) {
        return function (subcategory) {
          return function (label) {
            return function (msg) {
              return function (stacktrace) {
                return function (oldLabel) {
                  return function (rootFgn) {
                    if (Utils.downgradeLog) {
                      return Control_Bind.bind(Effect.bindEffect)(Utils.addId(Types_TypeLog.baseExceptionLog(service)(Types_TypeLog.ERROR.value)(oldLabel)(stacktrace)(msg)))(Utils.addAndLogWithJson(false)(category)(subcategory)(label)(service)(rootFgn)(Foreign_Generic_Class.recordEncode()(Foreign_Generic_Class.encodeRecordCons()(Foreign_Generic_Class.encodeRecordCons()(Foreign_Generic_Class.encodeRecordCons()(Foreign_Generic_Class.encodeRecordCons()(Foreign_Generic_Class.encodeRecordCons()(Foreign_Generic_Class.encodeRecordCons()(Foreign_Generic_Class.encodeRecordCons()(Foreign_Generic_Class.encodeRecordCons()(Foreign_Generic_Class.encodeRecordNil)(new Data_Symbol.IsSymbol(function () {
                        return "type";
                      }))(Foreign_Generic_Class.encodeWithOptionsOther(Types_TypeLog.encodeType)))(new Data_Symbol.IsSymbol(function () {
                        return "stacktrace";
                      }))(Foreign_Generic_Class.encodeWithOptionsOther(Foreign_Generic_Class.stringEncode)))(new Data_Symbol.IsSymbol(function () {
                        return "message";
                      }))(Foreign_Generic_Class.encodeWithOptionsOther(Foreign_Generic_Class.stringEncode)))(new Data_Symbol.IsSymbol(function () {
                        return "level";
                      }))(Foreign_Generic_Class.encodeWithOptionsOther(Types_TypeLog.encodeLogLevel)))(new Data_Symbol.IsSymbol(function () {
                        return "id";
                      }))(Foreign_Generic_Class.encodeWithOptionsOther(Foreign_Generic_Class.intEncode)))(new Data_Symbol.IsSymbol(function () {
                        return "exception";
                      }))(Foreign_Generic_Class.encodeWithOptionsOther(Foreign_Generic_Class.stringEncode)))(new Data_Symbol.IsSymbol(function () {
                        return "category";
                      }))(Foreign_Generic_Class.encodeWithOptionsOther(Foreign_Generic_Class.stringEncode)))(new Data_Symbol.IsSymbol(function () {
                        return "at";
                      }))(Foreign_Generic_Class.encodeWithOptionsOther(Foreign_Generic_Class.stringEncode)))));
                    }

                    ;
                    return Utils.addAndLogWithJson(true)(category)(subcategory)(label)(service)(rootFgn)(Foreign_Generic_Class.recordEncode()(Foreign_Generic_Class.encodeRecordCons()(Foreign_Generic_Class.encodeRecordCons()(Foreign_Generic_Class.encodeRecordCons()(Foreign_Generic_Class.encodeRecordCons()(Foreign_Generic_Class.encodeRecordCons()(Foreign_Generic_Class.encodeRecordCons()(Foreign_Generic_Class.encodeRecordCons()(Foreign_Generic_Class.encodeRecordCons()(Foreign_Generic_Class.encodeRecordNil)(new Data_Symbol.IsSymbol(function () {
                      return "value";
                    }))(Foreign_Generic_Class.encodeWithOptionsRecord()(Foreign_Generic_Class.encodeRecordCons()(Foreign_Generic_Class.encodeRecordCons()(Foreign_Generic_Class.encodeRecordNil)(new Data_Symbol.IsSymbol(function () {
                      return "stacktrace";
                    }))(Foreign_Generic_Class.encodeWithOptionsOther(Foreign_Generic_Class.stringEncode)))(new Data_Symbol.IsSymbol(function () {
                      return "message";
                    }))(Foreign_Generic_Class.encodeWithOptionsOther(Foreign_Generic_Class.stringEncode)))))(new Data_Symbol.IsSymbol(function () {
                      return "subcategory";
                    }))(Foreign_Generic_Class.encodeWithOptionsOther(Foreign_Generic_Class.stringEncode)))(new Data_Symbol.IsSymbol(function () {
                      return "service";
                    }))(Foreign_Generic_Class.encodeWithOptionsOther(Foreign_Generic_Class.stringEncode)))(new Data_Symbol.IsSymbol(function () {
                      return "log_version";
                    }))(Foreign_Generic_Class.encodeWithOptionsOther(Foreign_Generic_Class.stringEncode)))(new Data_Symbol.IsSymbol(function () {
                      return "level";
                    }))(Foreign_Generic_Class.encodeWithOptionsOther(Foreign_Generic_Class.stringEncode)))(new Data_Symbol.IsSymbol(function () {
                      return "label";
                    }))(Foreign_Generic_Class.encodeWithOptionsOther(Foreign_Generic_Class.stringEncode)))(new Data_Symbol.IsSymbol(function () {
                      return "category";
                    }))(Foreign_Generic_Class.encodeWithOptionsOther(Types_CategoryLog.encodeCategory)))(new Data_Symbol.IsSymbol(function () {
                      return "at";
                    }))(Foreign_Generic_Class.encodeWithOptionsOther(Foreign_Generic_Class.stringEncode))))(Types_CategoryLog.baseExceptionLog(Data_String_Common.toLower(category))(subcategory)("exception")(service)(label)(msg)(stacktrace));
                  };
                };
              };
            };
          };
        };
      },
      "__trackContextEvent": function __trackContextEvent(subcategory) {
        return function (level) {
          return function (label) {
            return function (value) {
              return function (oldLabel) {
                return function (oldValue) {
                  return function (rootFgn) {
                    if (Utils.downgradeLog) {
                      return Control_Bind.bind(Effect.bindEffect)(Utils.addId(Types_TypeLog.baseEventLog(service)(Types_TypeLog.INFO.value)(oldLabel)(oldValue)))(Utils.addAndLogWithJson(false)("context")(subcategory)(label)(service)(rootFgn)(Foreign_Generic_Class.recordEncode()(Foreign_Generic_Class.encodeRecordCons()(Foreign_Generic_Class.encodeRecordCons()(Foreign_Generic_Class.encodeRecordCons()(Foreign_Generic_Class.encodeRecordCons()(Foreign_Generic_Class.encodeRecordCons()(Foreign_Generic_Class.encodeRecordCons()(Foreign_Generic_Class.encodeRecordCons()(Foreign_Generic_Class.encodeRecordNil)(new Data_Symbol.IsSymbol(function () {
                        return "value";
                      }))(Foreign_Generic_Class.encodeWithOptionsOther(Foreign_Generic_Class.stringEncode)))(new Data_Symbol.IsSymbol(function () {
                        return "type";
                      }))(Foreign_Generic_Class.encodeWithOptionsOther(Types_TypeLog.encodeType)))(new Data_Symbol.IsSymbol(function () {
                        return "level";
                      }))(Foreign_Generic_Class.encodeWithOptionsOther(Types_TypeLog.encodeLogLevel)))(new Data_Symbol.IsSymbol(function () {
                        return "label";
                      }))(Foreign_Generic_Class.encodeWithOptionsOther(Foreign_Generic_Class.stringEncode)))(new Data_Symbol.IsSymbol(function () {
                        return "id";
                      }))(Foreign_Generic_Class.encodeWithOptionsOther(Foreign_Generic_Class.intEncode)))(new Data_Symbol.IsSymbol(function () {
                        return "category";
                      }))(Foreign_Generic_Class.encodeWithOptionsOther(Foreign_Generic_Class.stringEncode)))(new Data_Symbol.IsSymbol(function () {
                        return "at";
                      }))(Foreign_Generic_Class.encodeWithOptionsOther(Foreign_Generic_Class.stringEncode)))));
                    }

                    ;
                    return Utils.addAndLogWithJson(true)("context")(subcategory)(label)(service)(rootFgn)(Foreign_Generic_Class.recordEncode()(Foreign_Generic_Class.encodeRecordCons()(Foreign_Generic_Class.encodeRecordCons()(Foreign_Generic_Class.encodeRecordCons()(Foreign_Generic_Class.encodeRecordCons()(Foreign_Generic_Class.encodeRecordCons()(Foreign_Generic_Class.encodeRecordCons()(Foreign_Generic_Class.encodeRecordCons()(Foreign_Generic_Class.encodeRecordCons()(Foreign_Generic_Class.encodeRecordNil)(new Data_Symbol.IsSymbol(function () {
                      return "value";
                    }))(Foreign_Generic_Class.encodeWithOptionsOther(Foreign_Generic_Class.foreignEncode)))(new Data_Symbol.IsSymbol(function () {
                      return "subcategory";
                    }))(Foreign_Generic_Class.encodeWithOptionsOther(Foreign_Generic_Class.stringEncode)))(new Data_Symbol.IsSymbol(function () {
                      return "service";
                    }))(Foreign_Generic_Class.encodeWithOptionsOther(Foreign_Generic_Class.stringEncode)))(new Data_Symbol.IsSymbol(function () {
                      return "log_version";
                    }))(Foreign_Generic_Class.encodeWithOptionsOther(Foreign_Generic_Class.stringEncode)))(new Data_Symbol.IsSymbol(function () {
                      return "level";
                    }))(Foreign_Generic_Class.encodeWithOptionsOther(Foreign_Generic_Class.stringEncode)))(new Data_Symbol.IsSymbol(function () {
                      return "label";
                    }))(Foreign_Generic_Class.encodeWithOptionsOther(Foreign_Generic_Class.stringEncode)))(new Data_Symbol.IsSymbol(function () {
                      return "category";
                    }))(Foreign_Generic_Class.encodeWithOptionsOther(Types_CategoryLog.encodeCategory)))(new Data_Symbol.IsSymbol(function () {
                      return "at";
                    }))(Foreign_Generic_Class.encodeWithOptionsOther(Foreign_Generic_Class.stringEncode))))(Types_CategoryLog.baseContextLog(subcategory)(level)(service)(label)(value));
                  };
                };
              };
            };
          };
        };
      },
      "__trackScreenEvent": function __trackScreenEvent(subcategory) {
        return function (level) {
          return function (label) {
            return function (presentation_type) {
              return function (screen_name) {
                return function (oldLabel) {
                  return function (oldValue) {
                    return function (rootFgn) {
                      if (Utils.downgradeLog) {
                        return Control_Bind.bind(Effect.bindEffect)(Utils.incrementId(Utils.addScreenEntryId(screen_name)(Types_TypeLog.baseEventLog(service)(Types_TypeLog.INFO.value)(oldLabel)(oldValue))))(Utils.addAndLogWithJson(false)("screen")(subcategory)(label)(service)(rootFgn)(Foreign_Generic_Class.recordEncode()(Foreign_Generic_Class.encodeRecordCons()(Foreign_Generic_Class.encodeRecordCons()(Foreign_Generic_Class.encodeRecordCons()(Foreign_Generic_Class.encodeRecordCons()(Foreign_Generic_Class.encodeRecordCons()(Foreign_Generic_Class.encodeRecordCons()(Foreign_Generic_Class.encodeRecordCons()(Foreign_Generic_Class.encodeRecordNil)(new Data_Symbol.IsSymbol(function () {
                          return "value";
                        }))(Foreign_Generic_Class.encodeWithOptionsOther(Foreign_Generic_Class.stringEncode)))(new Data_Symbol.IsSymbol(function () {
                          return "type";
                        }))(Foreign_Generic_Class.encodeWithOptionsOther(Types_TypeLog.encodeType)))(new Data_Symbol.IsSymbol(function () {
                          return "level";
                        }))(Foreign_Generic_Class.encodeWithOptionsOther(Types_TypeLog.encodeLogLevel)))(new Data_Symbol.IsSymbol(function () {
                          return "label";
                        }))(Foreign_Generic_Class.encodeWithOptionsOther(Foreign_Generic_Class.stringEncode)))(new Data_Symbol.IsSymbol(function () {
                          return "id";
                        }))(Foreign_Generic_Class.encodeWithOptionsOther(Foreign_Generic_Class.intEncode)))(new Data_Symbol.IsSymbol(function () {
                          return "category";
                        }))(Foreign_Generic_Class.encodeWithOptionsOther(Foreign_Generic_Class.stringEncode)))(new Data_Symbol.IsSymbol(function () {
                          return "at";
                        }))(Foreign_Generic_Class.encodeWithOptionsOther(Foreign_Generic_Class.stringEncode)))));
                      }

                      ;
                      return Control_Bind.bind(Effect.bindEffect)(Utils.incrementId(Data_Functor.mapFlipped(Effect.functorEffect)(Utils.getScreenEntryId(screen_name))(function (id) {
                        return Types_CategoryLog.baseScreenLog(subcategory)(level)(service)(label)(presentation_type)(screen_name)(id);
                      })))(Utils.addAndLogWithJson(true)("screen")(subcategory)(label)(service)(rootFgn)(Foreign_Generic_Class.recordEncode()(Foreign_Generic_Class.encodeRecordCons()(Foreign_Generic_Class.encodeRecordCons()(Foreign_Generic_Class.encodeRecordCons()(Foreign_Generic_Class.encodeRecordCons()(Foreign_Generic_Class.encodeRecordCons()(Foreign_Generic_Class.encodeRecordCons()(Foreign_Generic_Class.encodeRecordCons()(Foreign_Generic_Class.encodeRecordCons()(Foreign_Generic_Class.encodeRecordNil)(new Data_Symbol.IsSymbol(function () {
                        return "value";
                      }))(Foreign_Generic_Class.encodeWithOptionsRecord()(Foreign_Generic_Class.encodeRecordCons()(Foreign_Generic_Class.encodeRecordCons()(Foreign_Generic_Class.encodeRecordCons()(Foreign_Generic_Class.encodeRecordCons()(Foreign_Generic_Class.encodeRecordNil)(new Data_Symbol.IsSymbol(function () {
                        return "url";
                      }))(Foreign_Generic_Class.encodeWithOptionsOther(Foreign_Generic_Class.stringEncode)))(new Data_Symbol.IsSymbol(function () {
                        return "screen_name";
                      }))(Foreign_Generic_Class.encodeWithOptionsOther(Foreign_Generic_Class.stringEncode)))(new Data_Symbol.IsSymbol(function () {
                        return "presentation_type";
                      }))(Foreign_Generic_Class.encodeWithOptionsOther(Foreign_Generic_Class.stringEncode)))(new Data_Symbol.IsSymbol(function () {
                        return "id";
                      }))(Foreign_Generic_Class.encodeWithOptionsOther(Foreign_Generic_Class.intEncode)))))(new Data_Symbol.IsSymbol(function () {
                        return "subcategory";
                      }))(Foreign_Generic_Class.encodeWithOptionsOther(Foreign_Generic_Class.stringEncode)))(new Data_Symbol.IsSymbol(function () {
                        return "service";
                      }))(Foreign_Generic_Class.encodeWithOptionsOther(Foreign_Generic_Class.stringEncode)))(new Data_Symbol.IsSymbol(function () {
                        return "log_version";
                      }))(Foreign_Generic_Class.encodeWithOptionsOther(Foreign_Generic_Class.stringEncode)))(new Data_Symbol.IsSymbol(function () {
                        return "level";
                      }))(Foreign_Generic_Class.encodeWithOptionsOther(Foreign_Generic_Class.stringEncode)))(new Data_Symbol.IsSymbol(function () {
                        return "label";
                      }))(Foreign_Generic_Class.encodeWithOptionsOther(Foreign_Generic_Class.stringEncode)))(new Data_Symbol.IsSymbol(function () {
                        return "category";
                      }))(Foreign_Generic_Class.encodeWithOptionsOther(Types_CategoryLog.encodeCategory)))(new Data_Symbol.IsSymbol(function () {
                        return "at";
                      }))(Foreign_Generic_Class.encodeWithOptionsOther(Foreign_Generic_Class.stringEncode)))));
                    };
                  };
                };
              };
            };
          };
        };
      },
      "_trackScreenEnd": function _trackScreenEnd(screen_name) {
        if (Utils.downgradeLog) {
          return Control_Bind.bind(Effect.bindEffect)(Utils.addScreenExitId(screen_name)(Types_TypeLog.baseScreenEndLog(service)(screen_name)))(Utils.addAndLog(false)("screen")("screen")("end_of_screen")(service)(Foreign_Generic_Class.recordEncode()(Foreign_Generic_Class.encodeRecordCons()(Foreign_Generic_Class.encodeRecordCons()(Foreign_Generic_Class.encodeRecordCons()(Foreign_Generic_Class.encodeRecordCons()(Foreign_Generic_Class.encodeRecordCons()(Foreign_Generic_Class.encodeRecordCons()(Foreign_Generic_Class.encodeRecordNil)(new Data_Symbol.IsSymbol(function () {
            return "type";
          }))(Foreign_Generic_Class.encodeWithOptionsOther(Types_TypeLog.encodeType)))(new Data_Symbol.IsSymbol(function () {
            return "title";
          }))(Foreign_Generic_Class.encodeWithOptionsOther(Foreign_Generic_Class.stringEncode)))(new Data_Symbol.IsSymbol(function () {
            return "level";
          }))(Foreign_Generic_Class.encodeWithOptionsOther(Types_TypeLog.encodeLogLevel)))(new Data_Symbol.IsSymbol(function () {
            return "id";
          }))(Foreign_Generic_Class.encodeWithOptionsOther(Foreign_Generic_Class.intEncode)))(new Data_Symbol.IsSymbol(function () {
            return "category";
          }))(Foreign_Generic_Class.encodeWithOptionsOther(Foreign_Generic_Class.stringEncode)))(new Data_Symbol.IsSymbol(function () {
            return "at";
          }))(Foreign_Generic_Class.encodeWithOptionsOther(Foreign_Generic_Class.stringEncode)))));
        }

        ;
        return Control_Bind.bind(Effect.bindEffect)(Data_Functor.mapFlipped(Effect.functorEffect)(Utils.getScreenExitId(screen_name))(function (id) {
          return Types_CategoryLog.baseScreenEndLog("screen")("info")(service)("end_of_screen")(screen_name)(id);
        }))(Utils.addAndLog(true)("screen")("screen")("end_of_screen")(service)(Foreign_Generic_Class.recordEncode()(Foreign_Generic_Class.encodeRecordCons()(Foreign_Generic_Class.encodeRecordCons()(Foreign_Generic_Class.encodeRecordCons()(Foreign_Generic_Class.encodeRecordCons()(Foreign_Generic_Class.encodeRecordCons()(Foreign_Generic_Class.encodeRecordCons()(Foreign_Generic_Class.encodeRecordCons()(Foreign_Generic_Class.encodeRecordCons()(Foreign_Generic_Class.encodeRecordNil)(new Data_Symbol.IsSymbol(function () {
          return "value";
        }))(Foreign_Generic_Class.encodeWithOptionsRecord()(Foreign_Generic_Class.encodeRecordCons()(Foreign_Generic_Class.encodeRecordCons()(Foreign_Generic_Class.encodeRecordNil)(new Data_Symbol.IsSymbol(function () {
          return "screen_name";
        }))(Foreign_Generic_Class.encodeWithOptionsOther(Foreign_Generic_Class.stringEncode)))(new Data_Symbol.IsSymbol(function () {
          return "id";
        }))(Foreign_Generic_Class.encodeWithOptionsOther(Foreign_Generic_Class.intEncode)))))(new Data_Symbol.IsSymbol(function () {
          return "subcategory";
        }))(Foreign_Generic_Class.encodeWithOptionsOther(Foreign_Generic_Class.stringEncode)))(new Data_Symbol.IsSymbol(function () {
          return "service";
        }))(Foreign_Generic_Class.encodeWithOptionsOther(Foreign_Generic_Class.stringEncode)))(new Data_Symbol.IsSymbol(function () {
          return "log_version";
        }))(Foreign_Generic_Class.encodeWithOptionsOther(Foreign_Generic_Class.stringEncode)))(new Data_Symbol.IsSymbol(function () {
          return "level";
        }))(Foreign_Generic_Class.encodeWithOptionsOther(Foreign_Generic_Class.stringEncode)))(new Data_Symbol.IsSymbol(function () {
          return "label";
        }))(Foreign_Generic_Class.encodeWithOptionsOther(Foreign_Generic_Class.stringEncode)))(new Data_Symbol.IsSymbol(function () {
          return "category";
        }))(Foreign_Generic_Class.encodeWithOptionsOther(Types_CategoryLog.encodeCategory)))(new Data_Symbol.IsSymbol(function () {
          return "at";
        }))(Foreign_Generic_Class.encodeWithOptionsOther(Foreign_Generic_Class.stringEncode)))));
      },
      "__trackScreenEnd": function __trackScreenEnd(screen_name) {
        return function (rootFgn) {
          if (Utils.downgradeLog) {
            return Control_Bind.bind(Effect.bindEffect)(Utils.addScreenExitId(screen_name)(Types_TypeLog.baseScreenEndLog(service)(screen_name)))(Utils.addAndLogWithJson(false)("screen")("screen")("end_of_screen")(service)(rootFgn)(Foreign_Generic_Class.recordEncode()(Foreign_Generic_Class.encodeRecordCons()(Foreign_Generic_Class.encodeRecordCons()(Foreign_Generic_Class.encodeRecordCons()(Foreign_Generic_Class.encodeRecordCons()(Foreign_Generic_Class.encodeRecordCons()(Foreign_Generic_Class.encodeRecordCons()(Foreign_Generic_Class.encodeRecordNil)(new Data_Symbol.IsSymbol(function () {
              return "type";
            }))(Foreign_Generic_Class.encodeWithOptionsOther(Types_TypeLog.encodeType)))(new Data_Symbol.IsSymbol(function () {
              return "title";
            }))(Foreign_Generic_Class.encodeWithOptionsOther(Foreign_Generic_Class.stringEncode)))(new Data_Symbol.IsSymbol(function () {
              return "level";
            }))(Foreign_Generic_Class.encodeWithOptionsOther(Types_TypeLog.encodeLogLevel)))(new Data_Symbol.IsSymbol(function () {
              return "id";
            }))(Foreign_Generic_Class.encodeWithOptionsOther(Foreign_Generic_Class.intEncode)))(new Data_Symbol.IsSymbol(function () {
              return "category";
            }))(Foreign_Generic_Class.encodeWithOptionsOther(Foreign_Generic_Class.stringEncode)))(new Data_Symbol.IsSymbol(function () {
              return "at";
            }))(Foreign_Generic_Class.encodeWithOptionsOther(Foreign_Generic_Class.stringEncode)))));
          }

          ;
          return Control_Bind.bind(Effect.bindEffect)(Data_Functor.mapFlipped(Effect.functorEffect)(Utils.getScreenExitId(screen_name))(function (id) {
            return Types_CategoryLog.baseScreenEndLog("screen")("info")(service)("end_of_screen")(screen_name)(id);
          }))(Utils.addAndLogWithJson(true)("screen")("screen")("end_of_screen")(service)(rootFgn)(Foreign_Generic_Class.recordEncode()(Foreign_Generic_Class.encodeRecordCons()(Foreign_Generic_Class.encodeRecordCons()(Foreign_Generic_Class.encodeRecordCons()(Foreign_Generic_Class.encodeRecordCons()(Foreign_Generic_Class.encodeRecordCons()(Foreign_Generic_Class.encodeRecordCons()(Foreign_Generic_Class.encodeRecordCons()(Foreign_Generic_Class.encodeRecordCons()(Foreign_Generic_Class.encodeRecordNil)(new Data_Symbol.IsSymbol(function () {
            return "value";
          }))(Foreign_Generic_Class.encodeWithOptionsRecord()(Foreign_Generic_Class.encodeRecordCons()(Foreign_Generic_Class.encodeRecordCons()(Foreign_Generic_Class.encodeRecordNil)(new Data_Symbol.IsSymbol(function () {
            return "screen_name";
          }))(Foreign_Generic_Class.encodeWithOptionsOther(Foreign_Generic_Class.stringEncode)))(new Data_Symbol.IsSymbol(function () {
            return "id";
          }))(Foreign_Generic_Class.encodeWithOptionsOther(Foreign_Generic_Class.intEncode)))))(new Data_Symbol.IsSymbol(function () {
            return "subcategory";
          }))(Foreign_Generic_Class.encodeWithOptionsOther(Foreign_Generic_Class.stringEncode)))(new Data_Symbol.IsSymbol(function () {
            return "service";
          }))(Foreign_Generic_Class.encodeWithOptionsOther(Foreign_Generic_Class.stringEncode)))(new Data_Symbol.IsSymbol(function () {
            return "log_version";
          }))(Foreign_Generic_Class.encodeWithOptionsOther(Foreign_Generic_Class.stringEncode)))(new Data_Symbol.IsSymbol(function () {
            return "level";
          }))(Foreign_Generic_Class.encodeWithOptionsOther(Foreign_Generic_Class.stringEncode)))(new Data_Symbol.IsSymbol(function () {
            return "label";
          }))(Foreign_Generic_Class.encodeWithOptionsOther(Foreign_Generic_Class.stringEncode)))(new Data_Symbol.IsSymbol(function () {
            return "category";
          }))(Foreign_Generic_Class.encodeWithOptionsOther(Types_CategoryLog.encodeCategory)))(new Data_Symbol.IsSymbol(function () {
            return "at";
          }))(Foreign_Generic_Class.encodeWithOptionsOther(Foreign_Generic_Class.stringEncode)))));
        };
      }
    };
  };

  var initSessioniser = Effect_Aff.launchAff_(Sessioniser.startAlter);
  exports["initTracker"] = initTracker;
  exports["initSessioniser"] = initSessioniser;
})(PS);

module.exports = PS;
/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../node_modules/node-libs-browser/node_modules/timers-browserify/main.js */ "./node_modules/node-libs-browser/node_modules/timers-browserify/main.js").setImmediate, __webpack_require__(/*! ./../node_modules/node-libs-browser/node_modules/timers-browserify/main.js */ "./node_modules/node-libs-browser/node_modules/timers-browserify/main.js").clearImmediate))

/***/ }),

/***/ "./index.js":
/*!******************!*\
  !*** ./index.js ***!
  \******************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

function _typeof(obj) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, _typeof(obj); }

console.log("orange tart");

var workerPostMessage = function workerPostMessage(worker, val) {
  try {
    worker.postMessage(val);
  } catch (err) {}
};

var getTrackerResource = function getTrackerResource(workerInterfaces) {
  // setting tracker host availability based upon the resource getter's status
  window.trackerResourceHostAvailable = true;

  if (window.__OS && window.__OS.toLowerCase() === "web") {
    var trackerResourceUrl = JBridge.getResourceUrl("in.juspay.hyperos.placeholder", "tracker");

    if (trackerResourceUrl === "") {
      window.trackerResourceHostAvailable = false;
    } else {
      var xhr = new XMLHttpRequest();
      xhr.addEventListener("readystatechange", function () {
        if (this.readyState === 4) {
          var trackerResource = URL.createObjectURL(new Blob([this.responseText], {
            type: "text/javascript"
          }));
          setWorker(trackerResource, workerInterfaces);
        }
      });
      xhr.open("GET", trackerResourceUrl);
      xhr.send();
    }
  } else {
    var trackerResource = URL.createObjectURL(new Blob([JBridge.loadFileInDUI("v1-tracker.jsa")], {
      type: "text/javascript"
    }));
    setWorker(trackerResource, workerInterfaces);
  }
};

var setWorker = function setWorker(trackerResource, workerInterfaces) {
  if (window.trackerWorker && typeof window.trackerWorker.terminate == "function") {
    // Remove old worker to allow tracker safe reload.
    window.trackerWorker.terminate();
  }

  var worker = new Worker(trackerResource, {
    name: "tracker"
  });

  worker.onmessage = function (e) {
    if (workerInterfaces.hasOwnProperty(e.data.command)) {
      this[e.data.command].call(null, e.data.arguments);
    } else {
      this.interfaceQueue = workerInterfaces.interfaceQueue || {};
      this.interfaceQueue[e.data.command] = workerInterfaces.interfaceQueue[e.data.command] || [];
      this.interfaceQueue[e.data.command].push(e.data.arguments);
    }
  }.bind(workerInterfaces);

  worker["interface"] = workerInterfaces;
  window.trackerWorker = worker;
};

var createWorker = function createWorker() {
  var workerInterfaces = {};
  workerInterfaces.isReady = false;

  workerInterfaces.setInterfaceReady = function () {
    this.isInterfaceReady = true;
    this.moduleCreationQueue.forEach(function (val) {
      workerPostMessage(window.trackerWorker, val);
    });
  }.bind(workerInterfaces);

  workerInterfaces.setReady = function () {
    this.isReady = true;
    this.eventQueue.forEach(function (val) {
      workerPostMessage(window.trackerWorker, val);
    });
  }.bind(workerInterfaces);

  workerInterfaces.eventQueue = [];
  workerInterfaces.moduleCreationQueue = [];
  workerInterfaces.interfaceQueue = {};

  workerInterfaces.postOnReady = function (arg) {
    if (this.isReady) {
      workerPostMessage(window.trackerWorker, arg);
    } else {
      this.eventQueue.push(arg);
    }
  }.bind(workerInterfaces);

  getTrackerResource(workerInterfaces);

  workerInterfaces.registerInterface = function (name, func) {
    this[name] = func;
    this.interfaceQueue = this.interfaceQueue || {};
    this.interfaceQueue[name] = this.interfaceQueue[name] || [];
    this.interfaceQueue[name].forEach(func);
  }.bind(workerInterfaces);

  workerInterfaces.registerInterface("runInJuspayBrowser", function (params) {
    JBridge.runInJuspayBrowser.bind(JBridge).apply(undefined, params);
  });
  workerInterfaces.registerInterface("addToLogList", function (params) {
    JBridge.addToLogList.bind(JBridge).apply(undefined, params);
  });
  workerInterfaces.registerInterface("requestPendingLogs", function (params) {
    var response = JBridge.requestPendingLogs.bind(JBridge).apply(undefined, params);
    workerInterfaces.postOnReady({
      command: "callbackHandler",
      data: response
    });
  });
  workerInterfaces.registerInterface("sessioniseLogs", function (params) {
    JBridge.sessioniseLogs.bind(JBridge).apply(undefined, params);
  });
  return workerInterfaces;
};

try {
  this.window = window;
} catch (e) {}

var safeGetResourceByName = function safeGetResourceByName(key, def) {
  try {
    return JBridge.getResourceByName(key);
  } catch (e) {
    console.log("safeGetResourceByName error", e);
    return def;
  }
};

var shouldAllowBufferingForPackage = function shouldAllowBufferingForPackage() {
  try {
    var packageName = JSON.parse(JBridge.getSessionInfo()).package_name;
    var blackListedPackages = [];

    if (blackListedPackages.indexOf(packageName) == -1) {
      return true;
    }

    return false;
  } catch (e) {
    return false;
  }
};

var shouldAllowBufferingForEnvironment = function shouldAllowBufferingForEnvironment() {
  try {
    var __payload = JSON.parse(JBridge.getSessionAttribute("bundleParams", "{}"));

    if (typeof __payload.payload.environment == "string" && __payload.payload.environment != "sandbox") return true;
    return false;
  } catch (e) {
    return false;
  }
};

var shouldAllowBufferingForClientId = function shouldAllowBufferingForClientId() {
  try {
    var __payload = JSON.parse(JBridge.getSessionAttribute("bundleParams", "{}"));

    var blackListedClientIds = ["rummycircle_ios", "rummycircle_android"];

    if (__payload.payload) {
      var clientId = __payload.payload.clientId ? __payload.payload.clientId : __payload.payload.client_id;
      if (blackListedClientIds.indexOf(clientId) != -1) return false;
    }

    return true;
  } catch (e) {
    return true;
  }
}; // payload creation is moved to a function because we want to refresh bundle params on worker re-creation call;


function createInitTrackerPayload() {
  return {
    command: "init",
    os: window.__OS,
    tracker_version: window.tracker_version,
    resourceList: {
      log_version: safeGetResourceByName("log_version", "1.0.0"),
      godel_version: safeGetResourceByName("godel_version", "error"),
      godel_build_version: safeGetResourceByName("godel_build_version", "error"),
      hyper_sdk_version: window.__OS == "IOS" ? safeGetResourceByName("CFBundleVersion", "error") : safeGetResourceByName("godel_version", "error").concat("-", safeGetResourceByName("godel_build_version", "error"))
    },
    shouldBufferLogs: shouldAllowBufferingForPackage() && shouldAllowBufferingForEnvironment() && shouldAllowBufferingForClientId() && window.shouldBufferLogs ? window.shouldBufferLogs : false,
    sessionAttributes: {
      bundleParams: _jbridge.getSessionAttribute("bundleParams", "{}")
    },
    sessionId: typeof _jbridge.getSessionId == "function" ? _jbridge.getSessionId() : "",
    __payload: JBridge.getSessionAttribute("bundleParams", "{}"),
    version: window.version
  };
}

if (this.window) {
  // You are in top iFrame
  window.latestSessionId = typeof JBridge.getSessionId == "function" ? JBridge.getSessionId() : "";
  window.tracker_version = "2.0.34";
  window.version = window.version || {};
  window.version["in.juspay.hyperos"] = window.version["in.juspay.hyperos"] || {};
  window.version["in.juspay.hyperos"]["tracker"] = window.tracker_version;

  try {
    // var JOSversionbase = parseFloat(window.hyper_core_version.replace(/rc.*$/, ""));
    // var JOSremotesversion = parseInt(window.hyper_core_version.slice("2.0rc1_13".indexOf("rc") + 2, "2.0rc1_13".indexOf("_") - 2))
    // var JOSversion = parseInt(window.hyper_core_version.replace(/^.*_/, ""))
    // base version of JOS is required to ensure support for using interfaces exposed via web workers
    // if (JOSversionbase >= 2.0 && JOSremotesversion >= 1 && JOSversion >= 1) {
    var intf = createWorker(); // Interfaces need to be updated as changes are made in initTracker

    intf.postOnReady(createInitTrackerPayload());

    if (window.shouldBufferLogs) {
      window.updateTrackerState = {
        "processStarted": function processStarted() {
          intf.postOnReady({
            command: "updateInWindow",
            key: "shouldBufferLogs",
            value: false
          });
        },
        "versionUpdate": function versionUpdate() {
          intf.postOnReady({
            command: "updateInWindow",
            key: "version",
            value: window.version
          });
        }
      };
    }

    window.getTrackerModule = {
      "Main": {
        "initTracker": function initTracker(service) {
          // attempting to recreate tracker in case host was not available previously.
          if (!window.trackerResourceHostAvailable) {
            intf = createWorker();
            intf.postOnReady(createInitTrackerPayload());
          }

          var command = {
            command: "getTrackerModule",
            arguments: service
          };

          if (intf.isInterfaceReady) {
            intf.postOnReady(command);
          } else {
            intf.moduleCreationQueue.push(command);
          }

          var cacheAndFireArguments = function cacheAndFireArguments(serviceName, fnName, argumentsCount) {
            var dummyLoopedFunction = function dummyLoopedFunction() {
              return dummyLoopedFunction;
            };

            var loopedFunction = function loopedFunction(value) {
              if (this.count <= 0) {
                intf.postOnReady({
                  command: "invoke",
                  functionName: fnName,
                  service: serviceName,
                  arguments: this.argumentList
                });
                return dummyLoopedFunction;
              }

              this.argumentList.push(value);
              this.count--;
              return loopedFunction.bind({
                argumentList: this.argumentList,
                count: this.count
              });
            };

            return function (val) {
              return loopedFunction.bind({
                argumentList: new Array(),
                count: argumentsCount + 0
              })(val);
            };
          };

          return {
            "trackApi": cacheAndFireArguments(service, "trackApi", 6),
            "trackEventInfo": cacheAndFireArguments(service, "trackEventInfo", 2),
            "trackEventDebug": cacheAndFireArguments(service, "trackEventDebug", 2),
            "trackExceptionCritical": cacheAndFireArguments(service, "trackExceptionCritical", 3),
            "trackExceptionWarning": cacheAndFireArguments(service, "trackExceptionWarning", 3),
            "trackExceptionError": cacheAndFireArguments(service, "trackExceptionError", 3),
            "trackOverlay": cacheAndFireArguments(service, "trackOverlay", 1),
            "trackScreen": cacheAndFireArguments(service, "trackScreen", 1),
            "trackMicroAppVerison": cacheAndFireArguments(service, "trackMicroAppVerison", 1),
            "trackUserError": cacheAndFireArguments(service, "trackUserError", 1),
            "trackPageLoad": cacheAndFireArguments(service, "trackPageLoad", 4),
            "_trackLifeCycle": cacheAndFireArguments(service, "_trackLifeCycle", 4),
            "_trackAction": cacheAndFireArguments(service, "_trackAction", 4),
            "_trackApiCall": cacheAndFireArguments(service, "_trackApiCall", 10),
            "_trackException": cacheAndFireArguments(service, "_trackException", 5),
            "_trackScreenWithLabel": cacheAndFireArguments(service, "_trackScreenWithLabel", 5),
            "_trackContext": cacheAndFireArguments(service, "_trackContext", 4),
            "_trackLifeCycleEvent": cacheAndFireArguments(service, "_trackLifeCycleEvent", 6),
            "_trackActionEvent": cacheAndFireArguments(service, "_trackActionEvent", 6),
            "_trackExceptionEvent": cacheAndFireArguments(service, "_trackExceptionEvent", 6),
            "_trackContextEvent": cacheAndFireArguments(service, "_trackContextEvent", 6),
            "_trackScreenEvent": cacheAndFireArguments(service, "_trackScreenEvent", 7),
            "__trackLifeCycle": cacheAndFireArguments(service, "__trackLifeCycle", 5),
            "__trackAction": cacheAndFireArguments(service, "__trackAction", 5),
            "__trackApiCall": cacheAndFireArguments(service, "__trackApiCall", 11),
            "__trackException": cacheAndFireArguments(service, "__trackException", 6),
            "__trackScreenWithLabel": cacheAndFireArguments(service, "__trackScreenWithLabel", 6),
            "__trackContext": cacheAndFireArguments(service, "__trackContext", 5),
            "__trackLifeCycleEvent": cacheAndFireArguments(service, "__trackLifeCycleEvent", 7),
            "__trackActionEvent": cacheAndFireArguments(service, "__trackActionEvent", 7),
            "__trackExceptionEvent": cacheAndFireArguments(service, "__trackExceptionEvent", 7),
            "__trackContextEvent": cacheAndFireArguments(service, "__trackContextEvent", 7),
            "__trackScreenEvent": cacheAndFireArguments(service, "__trackScreenEvent", 8),
            "_trackScreenEnd": cacheAndFireArguments(service, "_trackScreenEnd", 1),
            "__trackScreenEnd": cacheAndFireArguments(service, "__trackScreenEnd", 2)
          };
        }
      }
    }; // } else {
    //     baseCode();
    // }
  } catch (e) {
    // baseCode();
    if (!this.isLibrary) {
      window.getTrackerModule = __webpack_require__(/*! ./dist/pulp.js */ "./dist/pulp.js");
      var payload = {
        fileName: 'v1-tracker.jsa'
      };
      JBridge.runInJuspayBrowser("onBundleLoaded", JSON.stringify(payload), null);
    }
  }
} else if (!this.isLibrary) {
  // You are running in webworker world... Or something so bad happened, that you ended up deleting window
  window = this;
  JBridge = {};
  _jbridge = JBridge;
  moduleReadyQueue = [];
  window.callbackMap = {};

  onmessage = function (_onmessage) {
    function onmessage(_x) {
      return _onmessage.apply(this, arguments);
    }

    onmessage.toString = function () {
      return _onmessage.toString();
    };

    return onmessage;
  }(function (request) {
    var data = request.data;

    switch (data.command) {
      case "init":
        window.__OS = data.os;
        window.tracker_version = data.tracker_version;
        window.version = data.version;

        JBridge.getResourceByName = function (name) {
          return data.resourceList[name];
        };

        JBridge.getSessionAttribute = function (name, def) {
          return data.sessionAttributes[name] || def;
        };

        JBridge.getSessionId = function () {
          return data.sessionId || null;
        };

        JBridge.runInJuspayBrowser = function () {
          postMessage({
            command: "runInJuspayBrowser",
            arguments: Array.from(arguments)
          });
        };

        JBridge.addToLogList = function () {
          postMessage({
            command: "addToLogList",
            arguments: Array.from(arguments)
          });
        };

        JBridge.requestPendingLogs = function () {
          postMessage({
            command: "requestPendingLogs",
            arguments: Array.from(arguments)
          });
        };

        JBridge.sessioniseLogs = function () {
          postMessage({
            command: "sessioniseLogs",
            arguments: Array.from(arguments)
          });
        };

        window.shouldBufferLogs = data.shouldBufferLogs;
        window.logBufferWithLimit = [];
        window.getTrackerModule = __webpack_require__(/*! ./dist/pulp.js */ "./dist/pulp.js");
        postMessage({
          command: "setInterfaceReady"
        });
        moduleReadyQueue.forEach(function (val) {
          onmessage(val);
        });
        window.getTrackerModule.Main.initSessioniser();
        window.__payload = JSON.parse(data.__payload);
        break;

      case "getTrackerModule":
        window[data.arguments] = window.getTrackerModule.Main.initTracker(data.arguments);
        break;

      case "callbackHandler":
        var requestId = _typeof(data.data) == "object" ? data.data.requestId : typeof data.data == "string" ? JSON.parse(data.data).requestId : "";

        if (typeof window.callbackMap[requestId] == "function") {
          window.callbackMap[requestId](data.data);
        }

        break;

      case "updateInWindow":
        window[data.key] = data.value;
        break;

      case "invoke":
        if (!window.getTrackerModule) {
          moduleReadyQueue.push(request);
          return;
        }

        window[data.service] = window[data.service] || window.getTrackerModule.Main.initTracker(data.service);
        var fnToInvoke = window[data.service][data.functionName];

        for (var i = 0; i < data.arguments.length && typeof fnToInvoke === "function"; ++i) {
          fnToInvoke = fnToInvoke(data.arguments[i]);
        }

        if (typeof fnToInvoke === "function") {
          fnToInvoke();
        }

    }
  });

  try {
    postMessage({
      command: "setReady"
    });
  } catch (e) {}
}

/***/ }),

/***/ "./node_modules/node-libs-browser/node_modules/timers-browserify/main.js":
/*!*******************************************************************************!*\
  !*** ./node_modules/node-libs-browser/node_modules/timers-browserify/main.js ***!
  \*******************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

/* WEBPACK VAR INJECTION */(function(global) {var scope = (typeof global !== "undefined" && global) ||
            (typeof self !== "undefined" && self) ||
            window;
var apply = Function.prototype.apply;

// DOM APIs, for completeness

exports.setTimeout = function() {
  return new Timeout(apply.call(setTimeout, scope, arguments), clearTimeout);
};
exports.setInterval = function() {
  return new Timeout(apply.call(setInterval, scope, arguments), clearInterval);
};
exports.clearTimeout =
exports.clearInterval = function(timeout) {
  if (timeout) {
    timeout.close();
  }
};

function Timeout(id, clearFn) {
  this._id = id;
  this._clearFn = clearFn;
}
Timeout.prototype.unref = Timeout.prototype.ref = function() {};
Timeout.prototype.close = function() {
  this._clearFn.call(scope, this._id);
};

// Does not start the time, just sets up the members needed.
exports.enroll = function(item, msecs) {
  clearTimeout(item._idleTimeoutId);
  item._idleTimeout = msecs;
};

exports.unenroll = function(item) {
  clearTimeout(item._idleTimeoutId);
  item._idleTimeout = -1;
};

exports._unrefActive = exports.active = function(item) {
  clearTimeout(item._idleTimeoutId);

  var msecs = item._idleTimeout;
  if (msecs >= 0) {
    item._idleTimeoutId = setTimeout(function onTimeout() {
      if (item._onTimeout)
        item._onTimeout();
    }, msecs);
  }
};

// setimmediate attaches itself to the global object
__webpack_require__(/*! setimmediate */ "./node_modules/setimmediate/setImmediate.js");
// On some exotic environments, it's not clear which object `setimmediate` was
// able to install onto.  Search each possibility in the same order as the
// `setimmediate` library.
exports.setImmediate = (typeof self !== "undefined" && self.setImmediate) ||
                       (typeof global !== "undefined" && global.setImmediate) ||
                       (this && this.setImmediate);
exports.clearImmediate = (typeof self !== "undefined" && self.clearImmediate) ||
                         (typeof global !== "undefined" && global.clearImmediate) ||
                         (this && this.clearImmediate);

/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../../webpack/buildin/global.js */ "./node_modules/webpack/buildin/global.js")))

/***/ }),

/***/ "./node_modules/process/browser.js":
/*!*****************************************!*\
  !*** ./node_modules/process/browser.js ***!
  \*****************************************/
/*! no static exports found */
/***/ (function(module, exports) {

// shim for using process in browser
var process = module.exports = {};

// cached from whatever global is present so that test runners that stub it
// don't break things.  But we need to wrap it in a try catch in case it is
// wrapped in strict mode code which doesn't define any globals.  It's inside a
// function because try/catches deoptimize in certain engines.

var cachedSetTimeout;
var cachedClearTimeout;

function defaultSetTimout() {
    throw new Error('setTimeout has not been defined');
}
function defaultClearTimeout () {
    throw new Error('clearTimeout has not been defined');
}
(function () {
    try {
        if (typeof setTimeout === 'function') {
            cachedSetTimeout = setTimeout;
        } else {
            cachedSetTimeout = defaultSetTimout;
        }
    } catch (e) {
        cachedSetTimeout = defaultSetTimout;
    }
    try {
        if (typeof clearTimeout === 'function') {
            cachedClearTimeout = clearTimeout;
        } else {
            cachedClearTimeout = defaultClearTimeout;
        }
    } catch (e) {
        cachedClearTimeout = defaultClearTimeout;
    }
} ())
function runTimeout(fun) {
    if (cachedSetTimeout === setTimeout) {
        //normal enviroments in sane situations
        return setTimeout(fun, 0);
    }
    // if setTimeout wasn't available but was latter defined
    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {
        cachedSetTimeout = setTimeout;
        return setTimeout(fun, 0);
    }
    try {
        // when when somebody has screwed with setTimeout but no I.E. maddness
        return cachedSetTimeout(fun, 0);
    } catch(e){
        try {
            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally
            return cachedSetTimeout.call(null, fun, 0);
        } catch(e){
            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error
            return cachedSetTimeout.call(this, fun, 0);
        }
    }


}
function runClearTimeout(marker) {
    if (cachedClearTimeout === clearTimeout) {
        //normal enviroments in sane situations
        return clearTimeout(marker);
    }
    // if clearTimeout wasn't available but was latter defined
    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {
        cachedClearTimeout = clearTimeout;
        return clearTimeout(marker);
    }
    try {
        // when when somebody has screwed with setTimeout but no I.E. maddness
        return cachedClearTimeout(marker);
    } catch (e){
        try {
            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally
            return cachedClearTimeout.call(null, marker);
        } catch (e){
            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.
            // Some versions of I.E. have different rules for clearTimeout vs setTimeout
            return cachedClearTimeout.call(this, marker);
        }
    }



}
var queue = [];
var draining = false;
var currentQueue;
var queueIndex = -1;

function cleanUpNextTick() {
    if (!draining || !currentQueue) {
        return;
    }
    draining = false;
    if (currentQueue.length) {
        queue = currentQueue.concat(queue);
    } else {
        queueIndex = -1;
    }
    if (queue.length) {
        drainQueue();
    }
}

function drainQueue() {
    if (draining) {
        return;
    }
    var timeout = runTimeout(cleanUpNextTick);
    draining = true;

    var len = queue.length;
    while(len) {
        currentQueue = queue;
        queue = [];
        while (++queueIndex < len) {
            if (currentQueue) {
                currentQueue[queueIndex].run();
            }
        }
        queueIndex = -1;
        len = queue.length;
    }
    currentQueue = null;
    draining = false;
    runClearTimeout(timeout);
}

process.nextTick = function (fun) {
    var args = new Array(arguments.length - 1);
    if (arguments.length > 1) {
        for (var i = 1; i < arguments.length; i++) {
            args[i - 1] = arguments[i];
        }
    }
    queue.push(new Item(fun, args));
    if (queue.length === 1 && !draining) {
        runTimeout(drainQueue);
    }
};

// v8 likes predictible objects
function Item(fun, array) {
    this.fun = fun;
    this.array = array;
}
Item.prototype.run = function () {
    this.fun.apply(null, this.array);
};
process.title = 'browser';
process.browser = true;
process.env = {};
process.argv = [];
process.version = ''; // empty string to avoid regexp issues
process.versions = {};

function noop() {}

process.on = noop;
process.addListener = noop;
process.once = noop;
process.off = noop;
process.removeListener = noop;
process.removeAllListeners = noop;
process.emit = noop;
process.prependListener = noop;
process.prependOnceListener = noop;

process.listeners = function (name) { return [] }

process.binding = function (name) {
    throw new Error('process.binding is not supported');
};

process.cwd = function () { return '/' };
process.chdir = function (dir) {
    throw new Error('process.chdir is not supported');
};
process.umask = function() { return 0; };


/***/ }),

/***/ "./node_modules/setimmediate/setImmediate.js":
/*!***************************************************!*\
  !*** ./node_modules/setimmediate/setImmediate.js ***!
  \***************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

/* WEBPACK VAR INJECTION */(function(global, process) {(function (global, undefined) {
    "use strict";

    if (global.setImmediate) {
        return;
    }

    var nextHandle = 1; // Spec says greater than zero
    var tasksByHandle = {};
    var currentlyRunningATask = false;
    var doc = global.document;
    var registerImmediate;

    function setImmediate(callback) {
      // Callback can either be a function or a string
      if (typeof callback !== "function") {
        callback = new Function("" + callback);
      }
      // Copy function arguments
      var args = new Array(arguments.length - 1);
      for (var i = 0; i < args.length; i++) {
          args[i] = arguments[i + 1];
      }
      // Store and register the task
      var task = { callback: callback, args: args };
      tasksByHandle[nextHandle] = task;
      registerImmediate(nextHandle);
      return nextHandle++;
    }

    function clearImmediate(handle) {
        delete tasksByHandle[handle];
    }

    function run(task) {
        var callback = task.callback;
        var args = task.args;
        switch (args.length) {
        case 0:
            callback();
            break;
        case 1:
            callback(args[0]);
            break;
        case 2:
            callback(args[0], args[1]);
            break;
        case 3:
            callback(args[0], args[1], args[2]);
            break;
        default:
            callback.apply(undefined, args);
            break;
        }
    }

    function runIfPresent(handle) {
        // From the spec: "Wait until any invocations of this algorithm started before this one have completed."
        // So if we're currently running a task, we'll need to delay this invocation.
        if (currentlyRunningATask) {
            // Delay by doing a setTimeout. setImmediate was tried instead, but in Firefox 7 it generated a
            // "too much recursion" error.
            setTimeout(runIfPresent, 0, handle);
        } else {
            var task = tasksByHandle[handle];
            if (task) {
                currentlyRunningATask = true;
                try {
                    run(task);
                } finally {
                    clearImmediate(handle);
                    currentlyRunningATask = false;
                }
            }
        }
    }

    function installNextTickImplementation() {
        registerImmediate = function(handle) {
            process.nextTick(function () { runIfPresent(handle); });
        };
    }

    function canUsePostMessage() {
        // The test against `importScripts` prevents this implementation from being installed inside a web worker,
        // where `global.postMessage` means something completely different and can't be used for this purpose.
        if (global.postMessage && !global.importScripts) {
            var postMessageIsAsynchronous = true;
            var oldOnMessage = global.onmessage;
            global.onmessage = function() {
                postMessageIsAsynchronous = false;
            };
            global.postMessage("", "*");
            global.onmessage = oldOnMessage;
            return postMessageIsAsynchronous;
        }
    }

    function installPostMessageImplementation() {
        // Installs an event handler on `global` for the `message` event: see
        // * https://developer.mozilla.org/en/DOM/window.postMessage
        // * http://www.whatwg.org/specs/web-apps/current-work/multipage/comms.html#crossDocumentMessages

        var messagePrefix = "setImmediate$" + Math.random() + "$";
        var onGlobalMessage = function(event) {
            if (event.source === global &&
                typeof event.data === "string" &&
                event.data.indexOf(messagePrefix) === 0) {
                runIfPresent(+event.data.slice(messagePrefix.length));
            }
        };

        if (global.addEventListener) {
            global.addEventListener("message", onGlobalMessage, false);
        } else {
            global.attachEvent("onmessage", onGlobalMessage);
        }

        registerImmediate = function(handle) {
            global.postMessage(messagePrefix + handle, "*");
        };
    }

    function installMessageChannelImplementation() {
        var channel = new MessageChannel();
        channel.port1.onmessage = function(event) {
            var handle = event.data;
            runIfPresent(handle);
        };

        registerImmediate = function(handle) {
            channel.port2.postMessage(handle);
        };
    }

    function installReadyStateChangeImplementation() {
        var html = doc.documentElement;
        registerImmediate = function(handle) {
            // Create a <script> element; its readystatechange event will be fired asynchronously once it is inserted
            // into the document. Do so, thus queuing up the task. Remember to clean up once it's been called.
            var script = doc.createElement("script");
            script.onreadystatechange = function () {
                runIfPresent(handle);
                script.onreadystatechange = null;
                html.removeChild(script);
                script = null;
            };
            html.appendChild(script);
        };
    }

    function installSetTimeoutImplementation() {
        registerImmediate = function(handle) {
            setTimeout(runIfPresent, 0, handle);
        };
    }

    // If supported, we should attach to the prototype of global, since that is where setTimeout et al. live.
    var attachTo = Object.getPrototypeOf && Object.getPrototypeOf(global);
    attachTo = attachTo && attachTo.setTimeout ? attachTo : global;

    // Don't get fooled by e.g. browserify environments.
    if ({}.toString.call(global.process) === "[object process]") {
        // For Node.js before 0.9
        installNextTickImplementation();

    } else if (canUsePostMessage()) {
        // For non-IE10 modern browsers
        installPostMessageImplementation();

    } else if (global.MessageChannel) {
        // For web workers, where supported
        installMessageChannelImplementation();

    } else if (doc && "onreadystatechange" in doc.createElement("script")) {
        // For IE 6–8
        installReadyStateChangeImplementation();

    } else {
        // For older browsers
        installSetTimeoutImplementation();
    }

    attachTo.setImmediate = setImmediate;
    attachTo.clearImmediate = clearImmediate;
}(typeof self === "undefined" ? typeof global === "undefined" ? this : global : self));

/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../webpack/buildin/global.js */ "./node_modules/webpack/buildin/global.js"), __webpack_require__(/*! ./../process/browser.js */ "./node_modules/process/browser.js")))

/***/ }),

/***/ "./node_modules/webpack/buildin/global.js":
/*!***********************************!*\
  !*** (webpack)/buildin/global.js ***!
  \***********************************/
/*! no static exports found */
/***/ (function(module, exports) {

var g;

// This works in non-strict mode
g = (function() {
	return this;
})();

try {
	// This works if eval is allowed (see CSP)
	g = g || new Function("return this")();
} catch (e) {
	// This works if the window reference is available
	if (typeof window === "object") g = window;
}

// g can still be undefined, but nothing to do about it...
// We return undefined, instead of nothing here, so it's
// easier to handle this case. if(!global) { ...}

module.exports = g;


/***/ }),

/***/ 0:
/*!************************!*\
  !*** multi ./index.js ***!
  \************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

module.exports = __webpack_require__(/*! ./index.js */"./index.js");


/***/ })

/******/ });
//# sourceMappingURL=index_bundle.js.map